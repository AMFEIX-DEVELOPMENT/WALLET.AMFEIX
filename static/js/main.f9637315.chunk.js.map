{"version":3,"sources":["common/tools.mjs","common/syncCache.mjs","core/data.js","core/persistent.js","core/bignumber.js","core/amfeixContract.js","common/crypto.mjs","core/db.js","core/enums.js","common/pubKeyConvertor.mjs","core/satoshi.js","serviceWorker.js","ui/icons.js","ui/formatting.js","ui/components.js","ui/investor.js","core/wallet.js","ui/admin.js","ui/login.js","ui/network.js","ui/loadProgressView.js","ui/colors.js","ui/impactFund.js","ui/wallet.js","index.js","../../common/version.js"],"names":["isA","Array","isArray","isO","o","isS","s","A","Object","assign","D","x","E","entries","oO","F","fromEntries","G","f","map","i","k","v","I","K","keys","L","P","R","msg","data","Error","S","JSON","stringify","T","oS","split","U","undefined","V","values","oA","a","oB","b","oF","singleKeyObject","makeEnum","soo","freeze","Observer","observable","onChange","context","index","this","remove","SyncCache","key","observe","retriever","obj","forEach","setData","observers","observerIx","obs","push","stati","Deposits","Withdrawal_Requests","anomalousInvestorIndexMap","hostname","window","location","btcRpcUrl","ethInterfaceUrl","ethInterfaceUrls","amfeixFeeFields","invMap","countTable","dataTable","amfeixAddressLists","timeAndAmount","indexMaps","investorMaps","ethBasicFields","concat","btcFields","btcRpc","method","func","params","JSONBig","fetch","encodeURIComponent","join","mode","headers","body","text","parse","invMapDBStruc","struc","tableStrucMap","keyPath","indices","tables","hierName","p","q","table","eth","constants","investorsAddresses","btc","queue","ethTransactions","constantFields","constantRetrievers","name","value","amfx","amfeixM","call","timeFunc","startTime","Date","now","result","time","getInvestorDataKey","investor","getInvestorWalletDataKey","btcAddress","Transaction","parms","fetchDeposits","fromPubKey","toAddr","Data","localData","dbix","investorData","loadProgress","progress","timings","syncCache","idb","IndexedDB","adminLoadInitiated","queuedEthTransactions","deleteDB","persist","setEthRPCUrl","onLoadProgress","d","onGlobalLoad","step","length","done","updateLoadProgress","updateConstants","t","measureTime","Promise","all","buf","newBuffer","queueOp","write","err","flushBatch","flush","functionsToPerformAfterBasicLoad","functionsToPerformAfterGenericLoad","init","genericLoad","privateKey","testMode","from","web3","personal","getAccounts","accounts","privateKeyToAccount","u","amfeixAddress","Math","estimateGas","to","max","encodeABI","gas","options","sendTransaction","z","status","watch","detach","updateArray","loadTimeData","l","updateFixedLengthArray","updateSyncCache","computeTimeDataFromTimeAndAmount","getAll","m","updateInvestorMappedArray","fundDeposits","getData","fundDepositObj","flat","txId","updateBitcoinTxs","basicLoad","updateInvestorsAddresses","updateRegisteredEthTransactions","fetchFundDeposits","updateRegisteredBtcTransactions","computeData","address","getAllInvestors","toLowerCase","indexOf","updateInvestorArray","updateRegisteredTransactions","newRPCUrl","setWeb3Url","filter","getFundDepositAddresses","set","cached","getTxs","tx","ioMap","satoshiBN","BN","addr","bs58check","encode","Buffer","uniqueAddrs","ins","outs","froms","tos","isInvestment","includes","fromBTC","filteredTos","sum","reduce","acc","plus","toAddress","minus","fromAddress","fee","type","ETransactionType","Investment","Outgoing","Incoming","txs","finalBalance","pow","getDecimals","getFactor","ff","times","performance","y","amount","div","timeData","parseFloat","toString","roi","dailyChange","lowIndex","highIndex","low","high","countKey","sIx","startIndex","parseInt","w3Batcher","localBuf","masterKeys","final","resolve","reject","w3b","completed","currentIx","arrayName","exceedsLength","lengthName","olp","getArrayLengthAndStartIndex","alsi","findArrayLength","updateGenericArray","investorIx","getInvestorMapUpdateCountData","investorMapCountKey","ix","investors","r","lengthTable","count","slice","fd","ALPHABET","clear","n","get","promise","approvedDeposits","im","e","retrieveInvestorData","investmentValue","withdrawalRequests","pendingDeposits","lengths","allData","invKey","ethDataMap","pubKey","signature","action","timestamp","dataMaps","j","min","reqWD","getList","fastLength","toObj","dedup","objs","has","g","Withdrawals","investment","sort","currentValueAcc","Withdrawn","Withdrawal_Requested","Active","endTimestamp","endIx","getPerformanceIndex","startIx","startPerf","endPerf","appliedPerf","finalValue","isZero","hasWithdrawalRequest","hasWithdrawal","wr","Processed","Pending","accCurrentValue","satoshiToBTCString","valueSeries","computedValues","derivedEthAddress","pubKeyToEthAddress","pubKeyToBtcAddress","anomalous","pubKeys","error","Persistent","persistanceKey","storedFieldNames","defaults","localStorage","getItem","setItem","BigNumber","config","abi","methodMap","amfeixCjson","MultiCallBatch","calls","target","onSuccess","onError","rpcUrl","c","inputs","outputs","returns","aggregate","multicallAddress","response","results","original","_hex","url","queuedOps","batchIx","queuedOpCount","processedOpCount","queuedBatches","processing","inFlight","maxInFlight","nextIx","batchSize","activeBatch","Web3","providers","WebsocketProvider","HttpProvider","timeout","Contract","methods","op","batch","add","execute","shift","mif","executeBatch","setTimeout","actualFlushBatch","defaultDerivationPaths","bitcoin","ethereum","rootFromSeed","seedWords","bip32","fromSeed","bip39","mnemonicToSeedSync","ethAddressFromPubKey","keccak256","getEthAddress","buffer","alloc","toBuffer","secp256k1","publicKeyConvert","btcAddressFromPubKey","pubkey","network","payments","p2pkh","pubKeyBufferToPoint","pubKeyBuffer","ECPair","fromPublicKey","publicKey","encryptKey","password","onProgress","bip38","encrypt","encryptSeedWords","root","decryptWallet","encryptedKeys","decrypt","getAmfeixNode","derivePath","coinNodesFromRoot","derive","getAmfeixPublicKey","getAmfeixPrivateKey","hexOnly","pubKeyHex","prefix","getWalletRoot","w","fromPrivateKey","privKeyBuffer","chainCode","generateSeedWords","generateMnemonic","computeKey","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","open","onerror","onsuccess","onupgradeneeded","db","objectStoreNames","deleteObjectStore","item","autoIncrement","os","createObjectStore","createIndex","unique","multiEntry","transaction","oncomplete","deleteDatabase","label","getTx","objectStore","input","getOS","act","onCursor","onData","openCursor","continue","catch","then","put","IDBuffer","pendingOps","activeFlush","errors","successes","total","EUserMode","EDeveloperMode","EPallette","enumDefObj","enumDefault","pubKeyConvertors","crypto","pubKeySyncCaches","pubKeyCachedConvertors","coin","btcToString","Boolean","match","captionIconMap","Bitcoin_Wallet","AccountBalanceWalletOutlinedIcon","Impact_Fund","EqualizerIcon","Settings","SettingsIcon","Progress","HourglassEmptyIcon","Unlock_wallet","LockOpenIcon","Create_wallet","AddCircleOutlineIcon","Log_in","VpnKeyIcon","Admin","SupervisorAccountIcon","formatTimestamp","date","make2Digit","year","month","day","hour","minute","second","hour12","Intl","DateTimeFormat","format","formatDate","captionMap","deposits","withdrawals","fundDepositAddresses","feeAddresses","_","cleanText","replace","trim","Comp","sors","state","fers","initRefs","ren","props","spacedOutRefString","React","createRef","newV","childRef","current","updateChildRef","unmounted","onDone","setState","addSyncObserver","setStateKV","Component","Selector","selectedIx","onChanged","FormControl","component","RadioGroup","row","horizontal","aria-label","setSelectedIx","FormControlLabel","control","Radio","styles","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","width","classes","THead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","checkable","TableCell","Checkbox","indeterminate","checked","inputProps","h","property","sortDirection","align","alignCaption","disablePadding","TableSortLabel","active","direction","onClick","event","caption","style","ListView","page","rowsPerPage","sortOrder","rows","_id","sortColumn","compare","comp","X","isChecked","isSelected","columnCount","prevRowsPerPage","offset","TableContainer","Box","Table","className","aria-labelledby","title","size","TableBody","hover","aria-checked","tabIndex","selected","displayFunc","TableFooter","TablePagination","colSpan","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","round","floor","Sidebar","List","tabs","C","color","ListItem","button","tabulize","ListItemIcon","Typography","TabbedView","selectedTabIx","visibleTab","selTabIx","tabsControl","tabsProps","onChangeSelectedTabIx","TabsControl","Tabs","indicatorColor","textColor","centered","Tab","disabled","tabProps","activeTab","createElement","parentProps","verticalAlign","Button","variant","TabTimeline","tabbedView","last","ref","onCancel","getVisibleTab","validate","setPrecedingResult","bind","acceptText","vt","onAccept","ValidatableComp","TextField","id","helperText","borderSpacing","cells","cellStyles","formTable","form","preamble","noValidate","autoComplete","DialogWrap","Dialog","onClose","OpenDialogButton","GetPasswordView","walletName","fontSize","genTextField","GetPasswordDialog","ProgressDialog","CircularProgress","wrapEllipsisDiv","textOverflow","whiteSpace","aLink","src","link","rel","href","newTabRef","genHeaders","applyListHeaders","extractHeaders","commonTableHeaders","mods","compareStrings","localeCompare","compareBNs","isLessThan","commonDataTypes","ethAddress","btcTx","btcSatoshis","toBTC","fundDepositAddress","fromBtcAddress","warning","textAlign","loadingComponent","dataSummary","DataDependentView","componentDidUpdate","prevP","updateInvestor","InvestorDependentView_Eth","addSyncKeyObserver","InvestorDependentView_Btc","retrieveInvestorWalletData","InvestorID","EthTxView","getInvestorData","Developer","display","InvestorList","onChangedSelectedInvestor","wallet","creds","Password","pub","openWallet","Wallet","lastLogin","Approve_actions_Form","actionName","propertyLabel","Approve_deposits_Form","Approve_withdrawals_Form","Approve_all_pending_deposits","Approve_all_pending_withdrawals","pendingWithdrawals","textField","generateForm","preambleText","aa","tf","changeDataForms","Owner","AUM","BtcPrice","RequestGas","Daily_change","Fees","Fund_deposit_address","Fee_address","adminSetters","_0","Investors","qEthTx","Change_data","toFixed","Pending_Deposits","deps","approveAll","withs","Queued_Eth_Transactions","progressDialogOpen","progressDialogTitle","performApproveWithCreds","getPrivateKey","signAndSubmitQueuedEthTransactions","getPwdDialogOpen","signAndSubmit","SeedView","setNewInitialWords","constructed","getKey","initialWords","wordList","setErrors","getWords","expectedWords","gotWords","Setup_password","Confirm_password","Enter_credentials","Backup_seed","words","seedView","Verify_seed","checkWordsEqual","Input_seed","sv","checkWordsInList","english","Seed_Login","Bitcoin_P2P_Network","Ethereum_P2P_Network","ethRPCUrl","Network","displayDelay","lastUpdate","newProgress","currentTime","deltaS","update","updateTimeout","LinearProgress","timing","darkMode","matchMedia","matches","getMainLightness","fg","dm","getMainColor","basePallette","dark","backgroundColor","chart","valueSuffix","datas","constructorType","highcharts","Highcharts","rangeSelector","navigator","enabled","credits","zoomType","events","load","xAxis","setExtremes","showResetZoom","plotOptions","areaspline","fillColor","yAxis","labels","formatter","axis","defaultLabelFormatter","aferSetExtremes","series","tooltip","timeDataTrafo","FundIndexChart","changePerc","iData","displayTrafo","aum","decimals","parfs","urlParams","_Withdraw_","Withdraw","Review","Done","investorCompIfTestMode","borderStyle","borderWidth","borderRadius","borderColor","History","walletData","getInvestorWalletData","Invest","qrCode","QRCode","content","ecl","container","xmlDeclaration","svg","dangerouslySetInnerHTML","__html","URL","getUrlParam","searchParams","ethInterfaceChanged","Cache","clearCache","clearTransactionCache","MainView","walletOperation","startWalletOp","walletCodecProgress","percent","AppBar","Toolbar","acceptLogIn","Paper","alt","asEthAddress","asPublicKey","runWhenDBInitialized","registerInvestorAddress","App","theme","createTheme","Default","Dark","isDark","document","createMuiTheme","palette","ThemeProvider","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.f9637315.chunk.js","sourcesContent":["// Type-checking\nlet isA = Array.isArray;\nlet isF = f => typeof f === \"function\";\nlet isP = o => D(o.then) && isF(o.then);\nlet isO = o => typeof o === \"object\" && o != null && !isA(o);\nlet isS = s => typeof s === \"string\";\n\nlet A = Object.assign;\nlet B = (a, k, t) => { let r = {}; a.forEach(b => { let y = r[b[(t || I)(k)]]; if (y) { y.push(b); } else { r[b[(t || I)(k)]] = [b]; } }); return r; }\nlet D = x => typeof x !== \"undefined\";\nlet E = o => Object.entries(oO(o));\nlet F = Object.fromEntries; \nlet G = (o, f) => F(E(o).map(([k, v], i) => [k, f(v, k, i, o)]));\nlet GA = async (o, f) => F(await E(oO(o)).map(async ([k, v], i) => [k, await f(v, k, i, o)]));\nlet H = (f, o) => G(o, (v, k, i, o) => isO(v) ? H(f, v) : f(v, k, i, o));\nlet I = x => x;\nlet K = Object.keys;\nlet L = x => { \n  if (process.env.NODE_ENV === \"development\") console.log(S(x)); \n  return x; \n}\nlet P = (o, keys) => F(keys.map(k => [k, o[k]]));\nlet R = (msg, data) => A(new Error(msg), oO(data));\nlet S = JSON.stringify;\nlet T = s => oS(s).split(\" \");\nlet U = undefined;\nlet V = Object.values; \nlet W = async o => F(await Promise.all(E(o).map(async ([k, v]) => [k, await v])));\n\n// Optionals\nlet oA = a => a || [];\nlet oB = b => b || false;\nlet oF = f => f || (() => {});\nlet oO = o => o || {};\nlet oS = s => s || \"\"; \n\nlet asA = a => (b => isA(b) ? b : [b])(oA(a))\n\nlet singleKeyObject = (k, v) => { let o = {}; o[k] = v; return o; }\nlet makeEnum = soo => Object.freeze(F(T(soo).map(k => [k, k]))); \n\nexport { A, B, D, E, F, G, GA, H, I, K, L, P, R, S, T, U, V, W, oA, oB, oO, oS, oF, isA, isO, isF, isS, isP, asA, singleKeyObject, makeEnum }","import { A, D, E, oA } from './tools.mjs';\n\nclass Observer {\n  constructor(observable, onChange, context, index) { A(this, { observable, onChange, context, index }); }\n  detach() { this.observable.remove(this); }\n}\n\nclass Observable {\n  constructor() { A(this, { observers: {}, observerIx: 0 }); }\n  watch(key, onChange, context) {\n    let obs = new Observer(this, onChange, context, this.observerIx++);\n    (this.observers[key] = oA(this.observers[key])).push(obs);\n    if (D(this.data[key])) obs.onChange(this.data[key], context);\n    return obs;\n  }\n  observe(key, data) { oA(this.observers[key]).forEach(o => o.onChange(data, o.context)); return data; }\n  remove(obs) {\n    if (D(this.observers[obs.index])) delete this.observers[obs.index];\n  }\n}\n\nclass SyncCache extends Observable {\n  constructor() { super(); A(this, { data: {} }); }\n  setData(key, data) { this.observe(key, this.data[key] = data); return data; } //  L(`syncCache.setData(${key}, ${S(data)})`);\n  getData(key, retriever) { return this.data[key] = (D(this.data[key]) ? this.data[key] : (retriever && this.observe(key, retriever()))); }\n  set(obj) { E(obj).forEach(([k, v]) => this.setData(k, v)); }\n}\n\nexport { SyncCache }","/* eslint no-unused-vars: 0 */\n/* eslint no-loop-func: 0 */\nimport amfeixCjson from '../amfeixC.json'; \n// eslint-disable-next-line\nimport { A, D, E, F, G, H, I, K, L, S, T, P, U, V, W, oA, oO, oF, oS, isO, isA, isS, singleKeyObject, makeEnum } from '../common/tools'; \nimport { IndexedDB } from './db'; \nimport { Persistent } from './persistent';\nimport { BN, ALPHABET }  from './bignumber';\nimport JSONBig from 'json-bigint'; \n//import Accounts from 'web3-eth-accounts';\n//import aggregate from './aggregate.js';\nimport { satoshiToBTCString } from './satoshi';\nimport { pubKeyToEthAddress, pubKeyToBtcAddress } from \"../common/pubKeyConvertor\";\nimport { SyncCache } from '../common/syncCache';\nimport { ETransactionType } from './enums.js';\nimport { amfx, amfeixAddress } from './amfeixContract';\nimport bs58check from 'bs58check'; \n\nlet newDB = false || true;   \n \nlet stati = { Deposits: makeEnum(\"Active Withdrawn Withdrawal_Requested\"), Withdrawal_Requests: makeEnum(\"Pending Processed\") }; \n\nlet anomalousInvestorIndexMap = F([2339, 74, 418, 419, 424, 464, 515, 3429, 515, 1061, 3428, 3429, 3437, 3438].map(i => [(i), true]));\n\nlet b64ToHex = v => Buffer.from(v, 'base64').toString('hex');\nlet hexToBtcAddress = v => bs58check.encode(Buffer.from(v, 'hex'));\nlet decodeFundDeposit = s => (([timestamp, amountX, transactionX, fromPubKeyX]) => { let fromPubKey = b64ToHex(fromPubKeyX);\n  return {timestamp, txId: b64ToHex(transactionX), fromPubKey, fromBtcAddress: pubKeyToBtcAddress(fromPubKey), satoshiBN: BN(b64ToHex(amountX), 16)}; } )(T(s)); \nlet decodeDeposit = s => (([timestamp, amountX, transactionX, fromBtcAddressX]) => {  \n  return {timestamp, txId: b64ToHex(transactionX), fromBtcAddress: fromBtcAddressX && bs58check.encode(Buffer.from(fromBtcAddressX, 'base64')), satoshiBN: BN(b64ToHex(amountX), 16)}; } )(T(s)); \n  \nlet hostname = window.location.hostname;\nhostname = (hostname === \"localhost\") ? \"spacetimemanifolds.com\" : hostname;\nconst btcRpcUrl = `https://btc.${hostname}/`; //`http://157.245.35.34/`,  \nconst ethInterfaceUrl = `https://eth.${hostname}/`; //\"ws://46.101.6.38/ws\";  \nconst ethInterfaceUrls = [ethInterfaceUrl, ethInterfaceUrl + 'ganache/']; //\"ws://46.101.6.38/ws\";  \n//ethInterfaceUrl = \"http://46.101.6.38:8547/\";  \n//const web3 =  new Web3(new Web3.providers.HttpProvider(\"https://mainnet.infura.io/v3/efc3fa619c294bc194161b66d8f3585e\"));\nlet amfeixFeeFields = T(\"fee1 fee2 fee3\");\nlet invMap = (countTable, dataTable) => ({countTable, dataTable}); \nlet amfeixAddressLists = [\"fundDepositAddresses\", \"feeAddresses\"];\nlet timeAndAmount = T(\"time amount\"), indexMaps = amfeixAddressLists, investorMaps = [invMap(\"ntx\", \"fundTx\"), invMap(\"rtx\", \"reqWD\")]; \nlet ethBasicFields = T(\"owner aum decimals btcPrice\").concat(amfeixFeeFields).concat(amfeixAddressLists.map(k => `${k}Length`));\nconst btcFields = T(\"blockcount connectioncount difficulty blockchaininfo\");\n\nlet btcRpc = async (method, func, params) => JSONBig.parse((await ((await fetch(`${btcRpcUrl}${func}/${method === \"GET\" && params ? `?${E(oO(params)).map(x => x.map(encodeURIComponent).join(\"=\")).join(\"&\")}` : ''}`, \n { method, mode: 'cors', headers: { \"content-type\": \"application/json\" }, ...(method === \"POST\" ? { body: S({params}) }: {}) })).text())));\n\nlet invMapDBStruc = ({countTable, dataTable}) => ({ ...singleKeyObject(countTable, struc([\"investorIx\"])), ...singleKeyObject(dataTable, struc([\"investorIx\", \"index\"], [[\"investorIx\", \"investorIx\", false]])) })\n \nexport let tableStrucMap = {}\nlet hierName = (o, p) => F(E(o).map(([k, v]) => { let q = p ? [p, k].join(\"-\") : k; return [k, isA(v) ? (tableStrucMap[q] = {...v[0], table: q}, q) : hierName(v, q)]; }));\nlet struc = (keyPath, indices) => [{ keyPath, indices }];\nlet tables = hierName({ \n  eth: { constants: struc([\"name\"], [[\"name\", \"name\", true]]),  ...invMapDBStruc(investorMaps[0]), ...invMapDBStruc(investorMaps[1]), \n  ...F(T(\"time amount\").concat(indexMaps).map(k => [k, struc([\"index\"])])), investorsAddresses: struc([\"index\"], [[\"data\", \"data\", true]])  }, \n  btc: { constants: struc([\"name\"], [[\"name\", \"name\", true]]), ...invMapDBStruc(investorMaps[0]), ...invMapDBStruc(investorMaps[1]) },\n  queue: { ethTransactions: struc([\"index\"]) }\n}); \n\nlet constantFields = { btc: btcFields, eth: ethBasicFields };\nlet constantRetrievers = { \n  btc: name => async () => ({ name, value: await btcRpc(\"GET\", `get${name}`) }),\n  eth: name => async () => ({ name, value: await amfx.amfeixM()[name]().call() })\n} \n\nlet timeFunc = async f => {\n  let startTime = Date.now();\n  let result = await f();\n  return { result, time: Date.now() - startTime };\n}\n \nlet getInvestorDataKey = investor => `investor_${investor.data}`;\nlet getInvestorWalletDataKey = investor => `investor_Wallet_${investor.btcAddress}`; \n\nclass Transaction { constructor(method, parms) { A(this, { method, parms }); } }\n\nclass Scheduler {\n  constructor(interval, onUpdate) {\n    this.intervalHandle = setInterval(async () => { await onUpdate(); this.lastUpdate = Date.now(); }, interval);\n  }\n}\n\nlet fetchDeposits = async (fromPubKey, toAddr) => [];//oA(oO(await btcRpc(\"GET\", L(`getdeposits/toAddress/${toAddr || '_'}/fromPublicKey/${fromPubKey || '_'}`))).data).map(decodeDeposit);\n\nclass Data extends Persistent {\n  constructor() { super(\"data\", [\"localData\"], { localData: { dbix: 1173 } }); L('Creating Data class instance.');\n    //this.localData = (d => d ? L(JSON.parse(d)) : { dbix: 60 })((localStorage.getItem(\"_\")));\n    if (newDB) this.localData.dbix++; \n    A(this, { tables, tableStrucMap, investorData: {}, observers: {}, data: {}, loadProgress: { progress: {}, timings: {} }, syncCache: new SyncCache(), idb: new IndexedDB(S(this.localData.dbix)), adminLoadInitiated: false, queuedEthTransactions: [] }); \n    for (let q = 0; q < this.localData.dbix; ++q) this.idb.deleteDB(S(q));\n    this.persist(); \n     \n    this.setEthRPCUrl(ethInterfaceUrl); \n    this.onLoadProgress = name => d => { this.loadProgress.progress[name] = d; this.syncCache.setData(\"loadProgress\", this.loadProgress); };\n    this.onGlobalLoad = (step, length, done) => this.updateLoadProgress(this.onLoadProgress(\"Loading...\"), step, length || 7, done);\n    this.updateConstants = F(E(constantFields).map(([t, f]) => [t, () => this.measureTime(`Constants (${t})`, async () => await Promise.all(f.map(async name => { \n      let result = await constantRetrievers[t](name)();\n      this.syncCache.setData(name, result.value); \n      await this.setData(tables[t].constants, (result));\n    })))]));\n    this.updateConstants.eth = () => this.measureTime(`Constants (eth)`, async () => { \n      let buf = this.idb.newBuffer();\n      constantFields.eth.forEach(name => amfx.queueOp(name, [], value => { this.syncCache.setData(name, value); buf.write(tables.eth.constants, { name, value }); }, err => L(`Eth constant retrieval error ${S(err)}`))); \n      await amfx.flushBatch(); await buf.flush();\n    });\n    \n    this.functionsToPerformAfterBasicLoad = [];\n    this.functionsToPerformAfterGenericLoad = [];\n\n    (async () => { await this.idb.init(); this.syncCache.setData(\"dbInitialized\", true); await this.genericLoad(); })(); \n  }\n\n  set queuedEthTransactions(a) { this.syncCache.setData(\"queuedEthTransactions\", a); }\n  get queuedEthTransactions() { return this.syncCache.getData(\"queuedEthTransactions\"); }\n\n  async signAndSubmitQueuedEthTransactions(privateKey, testMode) { await this.measureTime(\"Basic Load\", async () => {\n    let from = \"0xADBfBEd800B49f84732F6D95fF5C924173C2C06A\";\n    L(`Generating ${this.queuedEthTransactions.length} transactions...`);\n    L({privateKey});\n    testMode = true;\n    L({accounts: await amfx.web3.eth.personal.getAccounts()})\n    let account = amfx.web3.eth.accounts.privateKeyToAccount(privateKey); \n    this.queuedEthTransactions = await Promise.all(this.queuedEthTransactions.map(async t => {\n      L(`Pending tx: ${S(t)}`);\n      let u = amfx.amfeixM()[t.method](...t.parms); \n//      L(`u = ${S(u)}`);\n      let options = L({from, to: amfeixAddress, gas: Math.max(25000, await u.estimateGas({ from, to: amfeixAddress })), data: u.encodeABI() });\n      let z = await amfx.web3.eth.sendTransaction(options); L(`Sendtransaction result = ${S(z)}`); \n//      let x = await account.signTransaction(options); L(`Signed tx: ${S(x)}`);\n  //    let z = await w3.web3.eth.sendSignedTransaction(x.rawTransaction); L(`Submitted tx: ${S(z)}`);\n      return ({ ...t, ...P(z, T(\"gasUsed blockNumber transactionHash\")), status: z.status === true ? \"Submitted\" : \"Failed\" });\n    })); \n  })}\n\n  runWhenDBInitialized(f) { let obs = this.syncCache.watch(\"dbInitialized\", () => { f(); obs.detach(); }) }\n\n  async updateFixedLengthArray(name) { await this.measureTime(`Update '${name}' array`, () => this.updateArray(name, `${name}Length`)) }\n\n  async basicLoad() { await this.measureTime(\"Basic Load\", async () => { this.onGlobalLoad(0);\n    await Promise.all([this.loadTimeData(), ...V(this.updateConstants).map(x => x()), ...indexMaps.map(l => this.updateFixedLengthArray(l))]); this.onGlobalLoad(1); L('L1');\n    await this.updateSyncCache(); this.onGlobalLoad(2); L('L2');\n    await this.computeTimeDataFromTimeAndAmount(); this.onGlobalLoad(3); L('L3');\n    for (let q of oA(this.functionsToPerformAfterBasicLoad)) await q();\n  }); }\n\n  performAfterBasicLoad(f) { this.functionsToPerformAfterBasicLoad.push(f); }\n  performAfterGenericLoad(f) { this.functionsToPerformAfterGenericLoad.push(f); }\n\n  async updateSyncCache() { await this.measureTime(\"updateSyncCache\", () => Promise.all(T(\"investorsAddresses\").map(async t => this.syncCache.setData(t, (await this.idb.getAll(tables.eth[t])))))); } \n \n  async updateRegisteredEthTransactions() { await this.measureTime(\"Update Registered Eth Transactions\", async () => {\n    await Promise.all(investorMaps.map(m => this.updateInvestorMappedArray(this.onLoadProgress(`Smart contract registered transactions: ${m.dataTable}`), m))); \n  }); }\n  async updateRegisteredBtcTransactions() { await this.measureTime(\"Update Registered Btc Transactions\", async () => {\n    let fundDeposits = this.syncCache.getData(\"fundDeposits\");\n    let fundDepositObj = F(fundDeposits.flat().map(x => [x.txId, x]));\n    await Promise.all(investorMaps.map(m => this.updateBitcoinTxs(this.onLoadProgress(`Bitcoin transactions: ${m.dataTable}`), m, fundDepositObj))); \n  }); }\n\n//  async updateInvestorAddresses() { await this.measureTime(\"Update Investor Addresses\", async () => { await this.updateArray(\"investorsAddresses\"); }); }\n\n  async genericLoad() { await this.measureTime(\"Generic Load\", async () => {\n    await this.basicLoad(); \n    await this.updateInvestorsAddresses(this.onLoadProgress(`Update investors addresses`)); this.onGlobalLoad(4);\n    await Promise.all([this.updateRegisteredEthTransactions(), this.fetchFundDeposits()]); this.onGlobalLoad(5);\n    await this.updateRegisteredBtcTransactions(); this.onGlobalLoad(6);\n    await this.computeData(); this.onGlobalLoad(7, 7, true);\n    for (let q of oA(this.functionsToPerformAfterGenericLoad)) await q();\n  }); } \n\n  async registerInvestorAddress(address) {  \n    let investorsAddresses = await amfx.amfeixM().getAllInvestors().call();\n    let index = investorsAddresses.map(x => x.toLowerCase()).indexOf(address.toLowerCase());\n    if (index >= 0) { let investor = { index, data: address }; L(`inv = ${S(investor)}`)\n      await this.setData(tables.eth.investorsAddresses, investor);\n      await Promise.all(investorMaps.map(m => this.updateInvestorArray(investor, m))); \n      await this.updateSyncCache();\n      await this.updateRegisteredTransactions();\n      await this.computeData();\n      return investor;\n    } \n  }\nf\n  setEthRPCUrl(newRPCUrl) { //L(`nweRPCURL: ${newRPCUrl}`)\n    amfx.setWeb3Url(newRPCUrl);\n    this.syncCache.setData(\"ethRPCUrl\", newRPCUrl);\n//    (async() => L(`Personal accounts: ${S(await oF(oO(w3.web3.eth.personal).getAccounts)())}`))();\n  }\n\n  getFundDepositAddresses() { return L(this.syncCache.getData(\"fundDepositAddresses\")).map(x => x.data).filter(z => z.length > 0); }\n  getFundDepositPubKeys() { return [\"03f1da9523bf0936bfe1fed5cd34921e94a78cac1ea4cfd36b716e440fb8de90aa\"]; }\n\n  async fetchFundDeposits() { this.syncCache.set({ fundDeposits: await Promise.all(this.getFundDepositAddresses().map(a => fetchDeposits(U, a))) }); };\n\n/*  async retrieveInvestorWalletDataFromBlockchainCom(investor) { L({investor}); if (investor.pubKey && investor.btcAddress) {\n    let key = getInvestorWalletDataKey(investor);\n    let cached = await this.syncCache.getData(key);\n    if (D(cached)) return cached;  \n\n    let toSat = x => BN(x).times(BN(10).pow(10));\n    let get = async offset => JSONBig.parse(await (await fetch(`https://blockchain.info/rawaddr/${investor.btcAddress}?cors=true&offset=${offset}`)).text());\n    let bci = await get(0);\n    let ntx = bci.n_tx;\n    let trafoTxs = txs => txs.map(tx => { \n      let ins = tx.inputs.map(i => P(i.prev_out, T(\"addr value\")));\n      let outs = tx.out.map(o => P(o, T(\"addr value\")));\n      let froms = K(F(ins.map(i => [oS(i.addr), true]))); \n      let tos = K(F(outs.map(i => [oS(i.addr), true])));\n      let isInvestment = tos.includes(this.getFundDepositAddresses());\n      let fromBTC = froms.length === 1 ? froms[0] : U;\n      let filteredTos = tos.filter(s => s !== fromBTC);\n      let toBTC = filteredTos.length === 1 ? filteredTos[0] : U;\n      return { ins, outs, froms, tos, fromBTC, toBTC, txId: tx.hash, time: tx.time, satoshiBN: toSat(tx.result), type: isInvestment ? ETransactionType.Investment : ((tx.result < 0) ? ETransactionType.Outgoing : ETransactionType.Incoming) }\n    });\n    let r = { finalBalance: toSat(bci.final_balance), txs: [trafoTxs(bci.txs)] } \n    r.txs = r.txs.flat(); \n    return this.syncCache.setData(key, r); \n  } }*/\n\n  async retrieveInvestorWalletData(investor) { L({investor}); if (investor.btcAddress) {\n    let key = getInvestorWalletDataKey(investor);\n    let cached = await this.syncCache.getData(key);\n    if (D(cached)) return cached;  \n    \n    let getTxs = async address => oA(oO(await btcRpc(\"GET\", L(`gettxs/address/${address}`))).data).map(tx => {\n      let ioMap = a => a.map(x => ({ satoshiBN: BN(x.value, 10), addr: hexToBtcAddress(x.addr) })), uniqueAddrs = a => K(F(a.map(x => [oS(x.addr), true])));\n      let ins = ioMap(tx.ins), outs = ioMap(tx.outs), froms = uniqueAddrs(ins), tos = uniqueAddrs(outs); \n      let isInvestment = tos.includes(this.getFundDepositAddresses());\n      let fromBTC = froms.length === 1 ? froms[0] : U;\n      let filteredTos = tos.filter(s => s !== fromBTC);\n      let toBTC = filteredTos.length === 1 ? filteredTos[0] : U;\n      let sum = a => a.reduce((acc, v) => acc.plus(v.satoshiBN), BN(0));\n      let result = sum(outs.filter(o => o.toAddress === investor.btcAddress)).minus(sum(ins.filter(i => i.fromAddress === investor.btcAddress)));\n      let fee = sum(ins).minus(outs);\n      return {...P(tx, T(\"time txId\")), ins, outs, satoshiBN: result, fee, type: isInvestment ? ETransactionType.Investment : ((tx.result < 0) ? ETransactionType.Outgoing : ETransactionType.Incoming) };\n    });\n    let txs = await getTxs(investor.btcAddress);\n    let sum = a => a.reduce((acc, v) => acc.plus(v.result), BN(0));\n\n    return this.syncCache.setData(key, { finalBalance: sum(txs), txs }); \n  } }\n\n  getDecimals() { return this.syncCache.getData('decimals'); } \n  getFactor() { return BN(10).pow(this.getDecimals()); } \n\n  async computeTimeDataFromTimeAndAmount() { await this.measureTime(\"Fund Index chart computation\", async () => {  \n    let f = this.getFactor(), ff = f.times(100), performance = [], [time, amount] = T(\"time amount\").map(t => (this.syncCache.getData(t))).map(y => (y).map(x => x.data));  \n    for (let x = 0, acc = BN(1.0); x < amount.length; ++x) performance.push([time[x], acc = acc.times(ff.plus(BN(amount[x])).div(ff))]);  \n    let timeData = performance.map(([t, d]) => [1000*t, parseFloat(d.toString())]);\n    E(({ timeData, roi: (100*timeData[timeData.length - 1][1] - 100), dailyChange: parseFloat((BN(amount[amount.length - 1]).div(f)).toString()) })).forEach(([k, v]) => this.syncCache.setData(k, v));\n    this.performance = performance;\n  }); }\n\n  getPerformanceIndex(time, lowIndex, highIndex) { let p = this.performance, low = lowIndex || 0, high = highIndex || (p.length - 1); // L(`gpi(${time}, ${low}, ${high})`)\n    while (high > low) { let m = low + ((high - low) >> 1); if (p[m][0] > time) { high = m; } else if (low < m) { low = m; } else break; }\n    return high;\n  }\n\n  async loadTimeData() { await this.measureTime(\"Fund Index chart data\", async () => {\n    let onLoadProgress = this.onLoadProgress(\"Fund Index chart data\");\n    let countKey = name => ({ name: `${name}.counts` });\n    let sIx = async name => oO(await this.getData(tables.eth.constants, countKey(name))).startIndex || 0;\n    let length;\n    if ((await sIx(\"time\") === 0) && (await sIx(\"amount\") === 0)) { await this.measureTime(\"Fund Index chart data (single step)\", async () => {\n      let buf = this.idb.newBuffer();\n      this.updateLoadProgress(onLoadProgress, 0);\n      let timeData = await amfx.amfeixM().getAll().call();\n      length = timeData[0].length;\n      for (let index = 0; index < length; ++index) {\n        [\"time\", \"amount\"].forEach((t, i) => buf.write(tables.eth[t], { index, data: (i === 0 ? parseInt : I)(timeData[i][index]) }));\n      }\n      [\"time\", \"amount\"].forEach(name => buf.write(tables.eth.constants, {...countKey(name), startIndex: length }));\n      let result = await buf.flush();\n      this.updateLoadProgress(onLoadProgress, length, length, true);\n      timeAndAmount.forEach((t, i) => this.syncCache.setData(t, timeData[i].map((data, index) => ({ index, data }))));\n    }) } else { await Promise.all(timeAndAmount.map(l => this.updateArray(l))); }\n  }); }\n\n  async updateInvestorsAddresses(onLoadProgress) { await this.measureTime(\"Investors addresses\", async () => await this.updateArray(\"investorsAddresses\")); }\n\n  updateLoadProgress(onLoadProgress, index, length, done) { onLoadProgress({ index, length: D(length) ? length : (done ? index : \"unknown\") }); }\n\n  async updateGenericArray(onLoadProgress, name, { length, startIndex }, countKey, countTable, dataTable, parms, buf, w3Batcher) {\n    if (onLoadProgress) this.updateLoadProgress(onLoadProgress, startIndex, length);\n    let index = startIndex || 0;\n    let localBuf = buf || this.idb.newBuffer();\n    let masterKeys = F(oA(tableStrucMap[dataTable].keyPath).map(k => [k, countKey[k]]));\n    let final = async (resolve) => { //L('final');\n      localBuf.write(countTable, ({ ...countKey, startIndex: length, length })); //L('I'); \n      if (!D(buf)) await localBuf.flush();\n      if (onLoadProgress) this.updateLoadProgress(onLoadProgress, length, length, true);\n      resolve();\n    } \n    return new Promise(async (resolve, reject) => { try {\n      let w3b = w3Batcher || amfx;\n      let completed = 0;\n      if (index === length) await final(resolve);\n      while ((index < length)) { let currentIx = index++; \n        w3b.queueOp(name, [...oA(parms), currentIx], async data => {\n          localBuf.write(dataTable, ({ ...masterKeys, index: currentIx, data })); //L('D');\n          if (onLoadProgress) this.updateLoadProgress(onLoadProgress, completed, length);\n          if (++completed === length - startIndex) { await final(resolve); }\n        }, err => { L(`Error in '${name}' array update: ${S(err)}`) });  \n      }\n      if (!D(w3Batcher)) { await amfx.flushBatch(); }\n    } catch(err) { reject(err) } }); \n  }\n\n  async findArrayLength(arrayName, parms) {  \n    let exceedsLength = async l => { try {//L(`Processing item ${index} for ${name} (${dataTable}) with parms = ${S(parms)}`);\n      let data = await (amfx.amfeixM()[arrayName](...oA(parms), l).call()); //L('C');\n      if (isS(data) && data.length === 0) throw new Error(`Empty response for ${arrayName}(${parms})`);\n    } catch { return true; } }\n    let l = 1;\n    while ((l < (1 << 52)) && !await exceedsLength(l)) { l <<= 1; }\n    let low = l >> 1, high = l;\n    while (high > low) { let m = low + ((high - low) >> 1); if (await exceedsLength(m)) { high = m; } else if (low < m) { low = m; } else break; }\n    L(`Found length ${high} for array ${arrayName}`);\n    return high;\n  }\n\n  async updateArray(arrayName, lengthName, parms) { \n    let olp = this.onLoadProgress(`Update '${arrayName}' array`);\n    await this.measureTime(`Update '${arrayName}' array`, async () => { L(`update array ${arrayName}`);\n      let countKey = ({ name: lengthName || `${arrayName}.counts` }); \n      let alsi = (await this.getArrayLengthAndStartIndex(tables.eth.constants, countKey, lengthName, parms)); \n      if (D(alsi.value) && !D(alsi.length)) alsi.length = parseInt(alsi.value);\n      if (!D(alsi.length)) alsi.length = await this.findArrayLength(arrayName, parms);\n      let p = await this.updateGenericArray(olp, arrayName, alsi, countKey, tables.eth.constants, tables.eth[arrayName], parms);//, U, U, () => dp.resolve());\n      await amfx.flushBatch(); await p;\n    });\n    await this.measureTime(`Cache '${arrayName}' array`, async () => this.syncCache.setData(arrayName, (await this.idb.getAll(tables.eth[arrayName]))));  \n  } \n\n  async getArrayLengthAndStartIndex(countTable, countKey, lengthName, parms) { //L(`galsi(${countTable}, ${S(countKey)}, ${lengthName}, ${parms})`)\n    let alsi = oO(await this.getData(countTable, countKey, lengthName && (async () => ({ ...countKey, length: parseInt(await amfx.amfeixM()[lengthName](...oA(parms)).call()) }))));\n//    this.updateLoadProgress(onLoadProgress, alsi.startIndex, alsi.length);\n    //L(`galsi(${countTable}, ${S(countKey)}, ${lengthName}, ${parms}) ==> ${S({ alsi })}`) \n    return ({ startIndex: 0, ...alsi });\n  } \n\n  updateInvestorArray(investor, { countTable, dataTable }, buf, w3Batcher) { \n    let countKey = { investorIx: investor.index }, parms = [investor.data]; \n    return new Promise(async (resolve, reject) => { try {\n      w3Batcher.queueOp(countTable, parms, async length => {\n        resolve(await this.updateGenericArray(U, dataTable, { startIndex: 0, length: parseInt(length) }, countKey, tables.eth[countTable], tables.eth[dataTable], parms, buf, w3Batcher));\n      }, err => L(`Error while getting array length for '${countTable}-${dataTable}' for investor ${investor.data}: ${S(err)}`));\n    } catch(err) { reject(err); } }); //L(`uima ${dataTable} final`);\n  }\n\n  async updateInvestorMappedArray(onLoadProgress, { countTable, dataTable }) { await this.measureTime(`Update invsetor mapped array '${dataTable}'`, async () => {\n    L(`uima(${countTable}, ${dataTable})`);\n    let olp = onLoadProgress;\n    let { startIndex, length, investorMapCountKey } = await this.getInvestorMapUpdateCountData(countTable, dataTable, `eth`);\n    let ix = startIndex;\n    let investors = this.syncCache.getData(\"investorsAddresses\"); \n    length = investors.length;\n    let localBuf = this.idb.newBuffer();\n    let completed = 0;\n    let p = Promise.resolve();\n    while (ix < length) { let q = p;\n      let r = this.updateInvestorArray(investors[ix++], { countTable, dataTable }, localBuf, amfx);\n      p = (async () => { await q; await await r; this.updateLoadProgress(olp, ++completed, length); })();\n    };\n    await amfx.flushBatch(); await p;\n    this.updateLoadProgress(olp, ix, length);\n    await amfx.flushBatch(); L(`uima ${dataTable} local buf flush`);\n    await localBuf.flush(); L(`uima ${dataTable} local buf done`);\n    if (ix !== startIndex) await this.setData(tables.eth.constants, ({...investorMapCountKey, startIndex: ix }));\n    L(`uima(${countTable}, ${dataTable}) end`);\n  }); }\n\n  async getInvestorMapUpdateCountData(countTable, dataTable, type, lengthTable) {\n    let investorMapCountKey = { name: `${countTable}-${dataTable}.counts` };\n    let length = lengthTable && await this.idb.count(lengthTable);\n    let startIndex = oO(await this.getData(tables[type].constants, investorMapCountKey)).startIndex || 0;\n    return { startIndex, length, investorMapCountKey, index: startIndex };\n  }\n\n  async updateBitcoinTxs(onLoadProgress, { countTable, dataTable }, fundDepositObj) { //L(`uima(${name}, ${countTable}, ${dataTable})`);\n    let { index, length, investorMapCountKey } = await this.getInvestorMapUpdateCountData(countTable, dataTable, `btc`, tables.eth[dataTable]);\n    let buf = this.idb.newBuffer();\n    for (let d of (await this.idb.getAll(tables.eth[dataTable])).slice(index)) { let key = { investorIx: d.investorIx, index: d.index };\n      let fd = fundDepositObj[d.data[0]];\n//      L({fd})\n      if (D(fd)) { buf.write(tables.btc[dataTable], {...key, value: fd.satoshiBN.toString(ALPHABET.length) }); }\n      else { L(`Bitcin fund deposit not found for ${d.data[0]}`); }\n      buf.write(tables.btc.constants, { ...investorMapCountKey, startIndex: ++index });\n      this.updateLoadProgress(onLoadProgress, index, length);\n    }\n    await buf.flush();\n    this.updateLoadProgress(onLoadProgress, length, length, true);\n  }\n\n  async clearTransactionCache(t) { await Promise.all([\n    ...T(\"ntx fundTx rtx reqWD\").map(z => this.idb.clear(tables[t][z])),\n    ...T(\"ntx-fundTx rtx-reqWD\").map(z => this.idb.write(tables[t].constants, { name: `${z}.counts`, startIndex: 0 }))\n  ]); }  \n\n  async clearCache() { await Promise.all(K(tables).map(t => K(tables[t]).map(z => tables[t][z])).flat().map(n => this.idb.clear(n))); }\n\n  getKey(table, data) { return (`${table}${isO(data) ? `:[${tableStrucMap[table].keyPath.map(a => data[a]).join(\",\")}]` : ''}`) }\n\n  async setData(table, data) { return await this.idb.write(table, data); }\n  async getData(table, data, retriever) { return (await this.idb.get(table, data)) || (retriever && (await this.setData(table, await retriever()))); } \n\n  async measureTime(name, promise) { this.loadProgress.timings[name] = (await timeFunc(promise)).time; } \n\n  async computeData() { await this.measureTime(\"computeData\", async () => {\n    let investors = [], approvedDeposits = {}, fundDeposits = this.syncCache.getData(\"fundDeposits\"); \n    let investorsAddresses = this.syncCache.getData(\"investorsAddresses\"); let olp = this.onLoadProgress(\"Computing data structures\");  \n    let d = await Promise.all(investorMaps.map(async im => await Promise.all(['eth', 'btc'].map(t => this.idb.getAll(tables[t][im.dataTable])))));\n    let e = d.map(im => im.map(x => F(x.map(z => [z.investorIx, []]))));\n    d.forEach((im, a) => im.forEach((x, b) => x.forEach(z => { e[a][b][z.investorIx].push(z); } ))); \n    for (let ix = 0; ix < investorsAddresses.length; ++ix) { this.updateLoadProgress(olp, ix, investorsAddresses.length);\n      let investor = await this.retrieveInvestorData(investorsAddresses[ix], U, e); \n      let i = { index: investorsAddresses[ix].index, address: investorsAddresses[ix].data, investmentValue: investor.investmentValue, Withdrawal_Requests: investor.Withdrawal_Requests };\n      investors.push(i);\n      investor.Deposits.forEach(d => { approvedDeposits[d.txId] = true; });\n    }   \n//    this.syncCache.set({ investorsAddresses }); \n//    L({ investors: investorsAddresses.map(i => P(i, T(\"pubKey btcAddress\"))) });\n    this.syncCache.set({ investors, withdrawalRequests: investors.map(i => i.Withdrawal_Requests).flat(), pendingDeposits: G(fundDeposits, v => v.filter(d => !approvedDeposits[d.txId])) });  \n    this.updateLoadProgress(olp, investorsAddresses.length, investorsAddresses.length);\n  }); };\n\n  async retrieveInvestorData(investor, lengths, allData) { //L(`retrieveInvestorData = ${S(investor)}`);\n    let cached = this.syncCache.getData(getInvestorDataKey(investor));\n    if (cached) { L('cached'); return cached; }\n    if (!D(investor.index)) { L({investor});\n      L(`finding index for investor.data = ${investor.data}`);\n      let i = await this.idb.get(tables.eth.investorsAddresses, { data: investor.data }, \"data\", [\"data\"]);\n      investor.index = oO(i).index;\n      L(`returned ${S(i)}`)\n    }\n    let invKey = { investorIx: investor.index }; //L(`Retrieving investor ${investor} data`);\n//    L(`invKey = ${S(invKey)}`);\n    let ethDataMap = ([txId, pubKey, signature, action, timestamp]) => ({ timestamp: parseInt(oS(timestamp)), txId, pubKey, signature, action });\n    let dataMaps = { eth: x => ({index: x.index, ...ethDataMap(((x.data)))}), btc: x => ({index: x.index, value: BN(x.value, ALPHABET.length) }) }\n    let txs, reqWD;\n//    L(`getting data for investor ${investor.index}`);\n    if (D(allData)) {\n      [txs, reqWD] = allData.map((im, j) => {\n//        L({im});\n        let [e, b] = ['eth', 'btc'].map((t, z) => (oA(im[z][invKey.investorIx])).map(oO).map(dataMaps[t]));\n        for (let index = 0; index < Math.min(e.length, b.length); ++index) e[index].value = b[index].value;\n        return (e);\n//        process.exit();\n      });\n    } else {\n      let getList = async (m, j) => {  \n        let fastLength = (oO(oA(lengths)[j]))[(invKey.investorIx)];\n        let length = D(fastLength) ? (fastLength) : ((oO(await this.idb.get((tables.eth[(m).countTable]), (invKey)))).length || 0);\n        let [e, b] = await Promise.all(['eth', 'btc'].map(async t => {             \n          let buf = this.idb.newBuffer();\n          let r  = []; \n          for (let index = 0; index < length; ++index) { r.push(U); buf.get(tables[t][m.dataTable], ({...invKey, index}), d => { r[index] = d; }); }\n          await buf.flush(); \n          return r.map(oO).map(dataMaps[t]);\n        }));\n        for (let index = 0; index < length; ++index) e[index].value = b[index].value;\n        return (e);\n      };\n      [txs, reqWD] = await Promise.all(investorMaps.map(getList));\n    }\n\n    let toObj = a => F(a.map(e => [e.txId, e]));\n    let dedup = d => V(toObj(d)); // XXX: does not check if duplicates are identical -- only retains one of them with same txId   \n    investor.pubKey = oO(oA(txs)[0]).pubKey;\n    \n    let data = F([\"Deposits\", \"Withdrawals\"].map((k, i) => [k, dedup(txs.filter(x => x.action === S(i)))]));\n    data.Withdrawal_Requests = dedup(reqWD);\n    let objs = G(data, toObj);\n    let has = G(objs, v => x => D(v[x.txId]));  \n    let g = ({ \n      Deposits: data.Deposits,// hasWithdrawalRequest: has.withdrawalRequest(d) })), \n      Withdrawal_Requests: data.Withdrawal_Requests.filter(x => has.Deposits(x) && !has.Withdrawals(x)), \n      Withdrawals: data.Withdrawals.filter(x => has.Deposits(x) && has.Withdrawal_Requests(x)) \n    });\n\n    let investment = g.Deposits.concat(g.Withdrawals).sort((a, b) => a.timestamp - b.timestamp); \n    let currentValueAcc = BN(0); \n    for (let d of g.Deposits) { d.status = ((has.Withdrawals(d)) ? stati.Deposits.Withdrawn : (has.Withdrawal_Requests(d) ? stati.Deposits.Withdrawal_Requested : stati.Deposits.Active));\n      let endTimestamp = (oO(objs.Withdrawal_Requests[d.txId]) || oO(objs.Withdrawals[d.txId])).timestamp || 0;\n      let endIx = (d.status === stati.Deposits.Active) ? this.performance.length - 1 : this.getPerformanceIndex(endTimestamp);\n      let startIx = this.getPerformanceIndex(d.timestamp), startPerf = this.performance[startIx];\n      let endPerf = this.performance[endIx][1];\n      let appliedPerf = (startPerf[0] >= d.timestamp) ? startPerf[1] : endPerf;\n//      L(`num = ${appliedPerf.toString()}`); \n      //d.performance  = perf.toString();\n      //L({appliedPerf});      L({d});\n      d.finalValue = (appliedPerf.isZero() || !D(d.value)) ? U : d.value.times(endPerf.div(appliedPerf));\n      d.hasWithdrawalRequest = has.Withdrawal_Requests(d) ? \"Yes\" : \"No\";\n      d.hasWithdrawal = has.Withdrawals(d) ? \"Yes\" : \"No\";\n    }\n    for (let wr of g.Withdrawal_Requests) wr.status = has.Withdrawals(wr) ? stati.Withdrawal_Requests.Processed : stati.Withdrawal_Requests.Pending;\n    for (let i of investment) { let v = i.value; \n//      i.accValue = (acc = (i.action === \"0\" ? acc.plus(v) : acc.minus(v)));  \n      i.accCurrentValue = currentValueAcc && ((currentValueAcc = (i.action === \"0\" ? (D(i.finalValue) ? currentValueAcc.plus(i.finalValue) : U) : currentValueAcc.minus(v)))); \n    }\n  //  g.investment = investment.map(x => [1000*x.timestamp, parseFloat(x.accValue.toString())]);\n    g.investmentValue = currentValueAcc && parseFloat(satoshiToBTCString(currentValueAcc));\n    g.valueSeries = () => g.computedValues ? g.computedValues : (g.computedValues = investment.map(x => [1000*x.timestamp, parseFloat(x.accCurrentValue && satoshiToBTCString(x.accCurrentValue))]));\n//    for (let d of g.Deposits) { T(\"finalValue value\").forEach(v => { if (D(d[v])) d[v] = d[v].toString(); }); }\n  //  for (let d of g.Withdrawal_Requests) { T(\"value\").forEach(v => { if (D(d[v])) d[v] = d[v].toString(); }); }\n    //for (let d of g.Withdrawals) { T(\"value\").forEach(v => { if (D(d[v])) d[v] = d[v].toString(); }); }\n      //L(g);\n    return this.syncCache.setData(getInvestorDataKey(investor), g);\n  }\n\n  async checkConsistency(investor) {\n    try {\n      investor.derivedEthAddress = pubKeyToEthAddress(investor.pubKey, true); \n      investor.btcAddress = pubKeyToBtcAddress(investor.pubKey);   \n      investor.anomalous = anomalousInvestorIndexMap[investor.index] ? \"Yes\" : \"No\";\n      if (investor.derivedEthAddress.toLowerCase() !== investor.data.toLowerCase()) L(`Investor (${investor.index}): Address discrepancy ${investor.data} !== ${investor.derivedEthAddress}`)\n    } catch (err) { investor.pubKeys = []; investor.error = \"Yes\"; investor.anomalous = \"Yes\"; } \n  }\n\n  getInvestorData(investor) { return this.investorData[investor] = D(this.investorData[investor]) ? this.investorData[investor] : this.retrieveInvestorData(investor); }\n}\n\nL(`032b54175dac49b86d33528488dc1770223be678fe9e283ff210d6841f109230c7 ==> ${S({btc: pubKeyToBtcAddress(\"032b54175dac49b86d33528488dc1770223be678fe9e283ff210d6841f109230c7\"),\neth: pubKeyToEthAddress(\"032b54175dac49b86d33528488dc1770223be678fe9e283ff210d6841f109230c7\")})}`)\n\nlet data = new Data(); \n  \nexport { Transaction, stati, ethInterfaceUrls, btcRpcUrl, btcFields, ethBasicFields, getInvestorDataKey, getInvestorWalletDataKey, data, amfeixFeeFields, amfeixAddressLists };","// eslint-disable-next-line\nimport { A, L, P, S, oO } from '../common/tools'\n\nexport class Persistent {\n  constructor(persistanceKey, storedFieldNames, defaults) {\n    A(this, { persistanceKey, storedFieldNames })\n    A(this, (d => d ? A(oO(defaults), P(JSON.parse(d), this.storedFieldNames)) : oO(defaults))((localStorage.getItem(this.persistanceKey))));\n    //L(`Loaded ${persistanceKey}: ${S(P(this, L(this.storedFieldNames)))}`)\n  }\n\n  persist() { \n    localStorage.setItem(this.persistanceKey, S(P(this, this.storedFieldNames))); \n  }\n}","import { BigNumber } from 'bignumber.js'\n\nlet ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$@';\n\nBigNumber.config({ ALPHABET }); //DECIMAL_PLACES: 20 });\n\nlet BN = (v, b) => new BigNumber(v ,b);\n//let bnClone = d => BigNumber.clone(d);\n\nexport { BN, ALPHABET }","import Web3 from 'web3';\nimport amfeixCjson from '../amfeixC.json';\nimport { A, F, I, L, S, oA, oO } from '../common/tools';\nimport { BN } from './bignumber';\nimport aggregate from '@makerdao/multicall/src/aggregate';\n\nexport let amfeixAddress = \"0xb0963da9baef08711583252f5000Df44D4F56925\";\n \nclass ABI { constructor(abi) { this.methodMap = F(abi.filter(x => x.type === \"function\").map(x => [x.name, x])); } }\n\nlet abi = new ABI(amfeixCjson.abi);\n//L(`abi keys = ${K(abi)}`);\n//\nclass MultiCallBatch {\n  constructor() { this.calls = []; }\n  add(target, method, params, onSuccess, onError) { this.calls.push(({ target, method, params, onSuccess, onError })); }\n  async execute(rpcUrl) {\n    // L(`Executing multicall length: ${this.calls.length}`)\n    //L(`I = ${S(I)}`);\n    //    L(`MultiCallBatch input = ${S(this.calls)}`);\n    let calls = this.calls.map((c, i) => {\n      let m = abi.methodMap[c.method];\n      return ({ target: c.target, call: [`${c.method}(${m.inputs.map(x => x.type).join(\",\")})(${m.outputs.map(x => x.type).join(\",\")})`, ...c.params], returns: m.outputs.map((x, j) => [`${i}_${j}`, I]) });\n    });\n    //    L({calls});\n    let response = await aggregate(calls, { rpcUrl, multicallAddress: '0x5e227AD1969Ea493B43F840cfF78d08a6fc17796' });\n    let results = oO(oO(response).results).original;\n    //L(`MultiCallBatch results = ${S(results)}`)\n    this.calls.forEach((c, i) => {\n      let m = abi.methodMap[c.method];\n      let q = m.outputs.map((x, j) => {\n        let r = results[`${i}_${j}`];\n        if (oO(r)._hex) { r = BN(r._hex.slice(2), 16).toString(); }\n        return r;\n      });\n      //      L({method: c.method, parms: c.params, q});\n      return c.onSuccess(q.length === 1 ? q[0] : q);\n    });\n  }\n}\n\nclass AmfeixContract {\n  setWeb3Url(url) {\n    A(this, { url, queuedOps: [], batchIx: 0, queuedOpCount: 0, processedOpCount: 0, queuedBatches: [], processing: false, inFlight: [], maxInFlight: 16, nextIx: 0, batchSize: 64, activeBatch: Promise.resolve() });\n    this.web3 = new Web3(new (this.url.indexOf(\"ws://\") === 0 ? Web3.providers.WebsocketProvider : Web3.providers.HttpProvider)(this.url, { timeout: 60000 }));\n    this.amfeixM = () => (new this.web3.eth.Contract(amfeixCjson.abi, amfeixAddress, { from: this.from })).methods;\n  }\n\n  setFrom(address) { this.from = address; }\n\n  queueOp(method, params, onSuccess, onError) {\n    this.queuedOpCount++;\n    this.queuedOps.push(({ method, params, onSuccess, onError }));\n    //    if (this.queuedOps.length  >= this.batchSize) this.flushBatch(); \n  }\n\n  async execute(op) { try { return await amfx.amfeixM()[op.method](...oA(op.params)).call(); } catch (err) { return { err }; } }\n\n  async executeBatch() {\n    let batch = new MultiCallBatch();\n    for (let op of this.queuedOps.slice(0, this.batchSize)) batch.add(amfeixAddress, op.method, oA(op.params), op.onSuccess, op.onError);\n    this.queuedOps = this.queuedOps.slice(this.batchSize);\n    await batch.execute(this.url);\n  }\n\n  async actualFlushBatch() {\n    while (this.queuedOps.length > 0) {\n      //      L({length: this.inFlight.length, queued: this.queuedOps.length, mif: this.maxInFlight});\n      if (this.inFlight.length === this.maxInFlight) { await this.inFlight[0]; this.inFlight.shift(); }\n      if (this.inFlight.length > this.maxInFlight) L(`>> ${S({ length: this.inFlight.length, mif: this.maxInFlight })}`);\n      this.inFlight.push(this.executeBatch());\n      //      await Promise.all(this.inFlight);\n    }\n  }\n\n  async flushBatch() { await new Promise((resolve, reject) => { try { setTimeout(() => resolve(this.actualFlushBatch()), 0); } catch (err) { reject(err); } }); }\n}\n\nexport let amfx = new AmfeixContract();","/* eslint no-unused-vars: 0 */\nimport bip32 from 'bip32';\nimport bip38 from 'bip38';\nimport bip39 from 'bip39';\nimport bitcoin from 'bitcoinjs-lib';\nimport keccak256 from 'keccak256';\nimport secp256k1 from 'secp256k1';\nimport { D, F, G, T, oO } from './tools.mjs';\nimport buffer from 'buffer';\n\n//let g = {}; g.Buffer = Buffer || buffer.Buffer;\n\nlet defaultDerivationPaths = { bitcoin: \"m/44'/0'/0'\", ethereum: \"m/44'/60'/0'\" };\n//02f1b2a982dbe744305a37f9dfd69d7d7c6eeaa5c34c1aba3bd277567df5b972fb\nlet rootFromSeed = (seedWords) => bip32.fromSeed(bip39.mnemonicToSeedSync(seedWords.join(\" \")));\nlet deriveFromNode = (node, t, e) => node.derive(t || 0).derive(e || 0);\nlet coinNodesFromRoot = root => G(defaultDerivationPaths, v => root.derivePath(v));\n// eslint-disable-next-line\nlet xpubsFromCoinNodes = coinNodes => G(coinNodes, v => bip32.fromPublicKey(v.publicKey, v.chainCode));\nlet toBuffer = v => { var b = buffer.Buffer.alloc(v.length); for (var i = 0; i < b.length; ++i) b[i] = v[i]; return b; };\nlet getEthAddress = pubKey => keccak256(pubKey).toString('hex').slice(-40);\nlet ethAddressFromPubKey = pubKey => getEthAddress(toBuffer(secp256k1.publicKeyConvert(pubKey, false).slice(1)));\nlet btcAddressFromPubKey = (pubkey, network) => bitcoin.payments.p2pkh({ pubkey, network }).address;\nlet pubKeyBufferToPoint = pubKeyBuffer => bitcoin.ECPair.fromPublicKey(pubKeyBuffer).publicKey;\nlet privKeyBufferToPoint = privKeyBuffer => bitcoin.ECPair.fromPrivateKey(privKeyBuffer).privateKey;\nlet encryptKey = (key, password, onProgress) => bip38.encrypt(key, true, password, onProgress);\nlet encryptSeedWords = (seedWords, password, onProgress) => {\n  let root = rootFromSeed(seedWords);\n  return (F(T(\"privateKey chainCode\").map(k => [k, encryptKey(root[k], password, onProgress)])));\n};\nlet decryptWallet = (encryptedKeys, password, onProgress) => (G(encryptedKeys, v => bip38.decrypt(v, password, onProgress)));\nlet getAmfeixNode = root => (deriveFromNode(coinNodesFromRoot(root).bitcoin));\nlet getAmfeixPublicKey = root => getAmfeixNode(root).publicKey;\nlet getAmfeixPrivateKey = root => getAmfeixNode(root).privateKey;\n//let hexToUI8A = h => new Uint8Array(h.match(/.{1,2}/g).map(b => parseInt(b, 16))); \nlet hexOnly = s => (s.slice(0, 2) === \"0x\") ? s.slice(2) : s;\nlet pubKeyToEthAddress = (pubKeyHex, prefix) => (prefix ? \"0x\" : \"\") + ethAddressFromPubKey(pubKeyBufferToPoint(buffer.Buffer.from(hexOnly(pubKeyHex), 'hex')));\nlet pubKeyToBtcAddress = pubKeyHex => btcAddressFromPubKey(pubKeyBufferToPoint(buffer.Buffer.from(hexOnly(pubKeyHex), 'hex')));\nlet getWalletRoot = w => (bip32.fromPrivateKey(privKeyBufferToPoint(w.privateKey.privateKey), w.chainCode.privateKey));\nlet generateSeedWords = () => T(bip39.generateMnemonic());\n\nexport { generateSeedWords, pubKeyToEthAddress, pubKeyToBtcAddress, rootFromSeed, ethAddressFromPubKey, btcAddressFromPubKey, pubKeyBufferToPoint, encryptSeedWords, decryptWallet, getAmfeixPublicKey, getAmfeixPrivateKey, getWalletRoot };","import { A, D, I, K, L, S, U, V, oA, oF, isA } from '../common/tools';\nimport { tableStrucMap } from './data';\n\nlet computeKey = (table, data, keyPath) => (z => keyPath && keyPath.length === 1 ? z.join(\"\") : z)(data && ((keyPath || tableStrucMap[table].keyPath).map(k => data[k]))); \n\n//L({tables}); L({tableStrucMap});\nclass IndexedDB {\n  constructor(name) {\n    this.name = name;\n    this.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n    this.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction;\n    this.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\n  }\n\n  async init() {\n    L(\"Initializing db.\");\n    this.db = await new Promise((resolve, reject) => A(this.indexedDB.open(this.name, 5), {\n      onerror: e => reject(`DB Error: ${e.target.error}`), onsuccess: e => { L(\"DB opened.\"); resolve(e.target.result); },\n      onupgradeneeded: e => (async () => { let db = e.target.result; L(\"Upgrading db.\");\n        for (let i = 0; i < db.objectStoreNames.length; ++i) await db.deleteObjectStore(db.objectStoreNames.item(i));\n        await Promise.all((V(tableStrucMap)).map((({ table, keyPath, indices, autoIncrement }) => new Promise((resolve, reject) => { // L({ table, keyPath, indices, autoIncrement });\n          let os = db.createObjectStore(table, ({ keyPath: keyPath || \"id\", autoIncrement: autoIncrement || !D(keyPath) }));\n          oA(indices).forEach(i => os.createIndex(i[0], i[1], { unique: i[2], multiEntry: true }));\n          os.transaction.oncomplete = () => { I(`Object store created: ${L(K(os))}`); resolve(os); };\n          os.transaction.onerror = () => reject(`Creating table '${table}' failed`);\n        })))); L(\"DB structure initialized.\");\n        resolve(db);\n      })()\n    })); \n  }\n \n  deleteDB(name) { return this.indexedDB.deleteDatabase(name); }\n\n  getTx(table, label, reject) { let tx = this.db.transaction(isA(table) ? table: [table], \"readwrite\"); \n    return A(tx, { onerror: () => (tx.error !== null) && reject(`Error on ${label} for ${table}: ${tx.error}`) }); \n  }\n  getOS(table, label, reject) { return this.getTx(table, label, reject).objectStore(table); }\n  act(table, label, input, getData, index) { return new Promise((resolve, reject) => { let os = this.getOS(table, label, reject);\n    I({index, input});\n    (index ? os.index((index)) : os)[label](input).onsuccess = e => resolve(getData(e)); \n  }); }\n  add(table, data) { return this.act(table, \"add\", data, () => data); }\n  put(table, data) { return this.act(table, \"put\", data, () => data); }\n  count(table, data) { return this.act(table, \"count\", data, e => e.target.result); }\n  getAll(table, data, index, keyPath) { return this.act(table, \"getAll\", (computeKey(table, data, keyPath)), e => e.target.result, index); }\n  openCursor(table, data, onCursor) { return this.act(table, \"openCursor\", data, e => (c => c && onCursor(c))((e.target.result))); }\n  iterateAll(table, data, onData) { return this.openCursor(table, data, c => { if (onData(c.value)) c.continue(); }); }\n  get(table, data, index, keyPath) { I( {computeKey: computeKey(table, data, keyPath)} ); return this.act(table, \"get\", computeKey(table, data, keyPath), e => e.target.result, index); }\n  write(table, data) { return this.get(table, data).catch(() => this.add(table, data)).then(() => this.put(table, data)); }\n  clear(table) { return this.act(table, \"clear\", U, I); }\n\n  newBuffer() { return new IDBuffer(this) }\n}\n\nclass IDBuffer {\n  constructor(idb) { A(this, { idb, pendingOps: [], tables: {}, batchSize: 1024 }); }\n\n  queueOp(table, action, data, onSuccess, onError) {\n    this.tables[table] = true;\n    this.pendingOps.push({ table, action, data, onSuccess, onError });\n    if (this.pendingOps.length > this.batchSize) {\n      this.activeFlush = (this.activeFlush || Promise.resolve()).then(async () => await this.flush());\n    }\n  }\n\n  pendingOpsCount() { return this.pendingOps.length; }\n\n  async flush() { \n    while (this.pendingOps.length > 0) await new Promise((resolve, reject) => {\n      let p = this.pendingOps; \n      this.pendingOps = [];\n      let tx = this.idb.getTx((K(this.tables)), \"flush\", err => { L('flusherr'); L({err}); reject(err); });\n      let result = { errors: 0, successes: 0 }, total = p.length;\n      p.forEach(x => {\n        let os = tx.objectStore(x.table);\n        let y = os[x.action](x.data);\n        y.onsuccess = e => { oF(x.onSuccess)(e.target.result); if (result.errors + ++result.successes === total) resolve(result); };\n        y.onerror = e => { L(`Error for ${S(x)}: ${S(e)}`); oF(x.onError)(e); if (++result.errors + result.successes === total) resolve(result); };\n      });\n    })\n  }\n\n  add(table, data) { this.queueOp(table, \"add\", data, () => data, err => { L(`Add error ${S(data)}`); L({err}) }); }\n  put(table, data) { this.queueOp(table, \"put\", data, () => data, err => { L('Put error '); L({err}) }); }\n  count(table, data) { this.queueOp(table, \"count\", data, e => e.target.result); }\n  getAll(table, data) { this.queueOp(table, \"getAll\", (data), e => e.target.result); }\n  get(table, data, onSuccess, onError) { this.queueOp(table, \"get\", computeKey(table, data), onSuccess, onError); }  \n  write(table, data) { this.get(table, data, d => { this.put(table, data); }, () => { this.add(table, data); }); }\n}\n\nexport { IndexedDB, IDBuffer };","import { L, V, makeEnum, singleKeyObject } from '../common/tools'\n\nlet EUserMode = makeEnum(\"Admin User\");\nlet EDeveloperMode = makeEnum(\"Production Developer\");\nlet EPallette = makeEnum(\"Default Dark Light\");\nlet ETransactionType = makeEnum(\"Outgoing Incoming Investment\");\n\nlet enumDefault = x => V(x)[0];\nlet enumDefObj = x => singleKeyObject(enumDefault(x), true);\nL({ETransactionType})\n\nexport { EPallette, EUserMode, EDeveloperMode, ETransactionType, enumDefault, enumDefObj }","import { SyncCache } from './syncCache.mjs';\nimport * as crypto from './crypto.mjs';\nimport { F, T } from './tools.mjs';\n\nlet pubKeyConvertors = { btc: crypto.pubKeyToBtcAddress, eth: crypto.pubKeyToEthAddress };\nlet pubKeySyncCaches = { btc: new SyncCache(), eth: new SyncCache() };\n\nlet pubKeyCachedConvertors = F(T(\"btc eth\").map(k => [k, pubKey => pubKeySyncCaches[k].getData(pubKey, () => pubKeyConvertors[k](pubKey))]));\nlet pubKeyToBtcAddress = pubKeyCachedConvertors.btc;\nlet pubKeyToEthAddress = pubKeyCachedConvertors.eth;\n\nexport { pubKeyToEthAddress, pubKeyToBtcAddress }\n","import { BN }  from './bignumber'; \nimport { D, U } from '../common/tools.mjs';\nlet coin = BN(10).pow(8);\n\nlet satoshiToBTCString = s => D(s) ? s.div(coin).toString() : U; \nlet btcToString = s => s.toString(); \nlet satoshiToBTCFloat = s => parseFloat(satoshiToBTCString(s));\n\nexport { btcToString, satoshiToBTCString, satoshiToBTCFloat }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    // [::1] is the IPv6 localhost address.  127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname === 'localhost' || window.location.hostname === '[::1]' || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA'));\n      } else { registerValidSW(swUrl, config); } // Is not localhost. Just register service worker\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import AccountBalanceWalletOutlinedIcon from '@material-ui/icons/AccountBalanceWalletOutlined';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\n\nexport let captionIconMap = {\n  Bitcoin_Wallet: AccountBalanceWalletOutlinedIcon,\n  Impact_Fund: EqualizerIcon,\n  Settings: SettingsIcon,\n  Progress: HourglassEmptyIcon,\n  Unlock_wallet: LockOpenIcon,\n  Create_wallet: AddCircleOutlineIcon,\n  Log_in: VpnKeyIcon,\n  Admin: SupervisorAccountIcon\n};\n","import { G, singleKeyObject } from '../common/tools';\n\nlet formatDate = date => {\n  let make2Digit = s => (s.length === 1) ? '0' + s : s;\n  let fmt = { year: 'numeric', month: 'short', day: '2-digit', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: false };\n  let d = G(fmt, (v, k) => new Intl.DateTimeFormat('en', { hour12: false, ...singleKeyObject(k, v) }).format(date));\n  return `${d.month} ${d.day}, ${d.year} ${make2Digit(d.hour)}:${make2Digit(d.minute)}:${make2Digit(d.second)}`;\n}, formatTimestamp = timestamp => timestamp && formatDate(new Date(1000 * timestamp));\n\nexport { formatTimestamp, formatDate }","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\n/* eslint no-unused-vars: 0 */\nimport React from 'react';\n// eslint-disable-next-line\nimport { A, D, E, F, G, I, K, L, U, V, S, oA, oB, oF, oO, oS, isO, singleKeyObject } from '../common/tools';\n// eslint-disable-next-line\nimport { List, ListItem, ListItemText, ListItemIcon, Hidden, Drawer, Stepper, Step, StepLabel, CircularProgress, TextField, Dialog, Box, Button, RadioGroup, Radio, FormControl, FormControlLabel, Tab, Tabs, Paper, Table, Typography, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, Checkbox, TableFooter } from '@material-ui/core';\n// eslint-disable-next-line\n//import { HistoryIcon, AttachMoneyIcon, CallMadeIcon } from '@material-ui/icons';\nimport { btcToString, satoshiToBTCString } from '../core/satoshi';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { captionIconMap } from './icons';\nimport { formatTimestamp } from './formatting'; \nimport { BN } from '../core/bignumber'\n\nlet captionMap = {\n  timestamp: \"Time\", value: \"Value\", txId: \"Transaction ID\", deposits: \"Deposits\", withdrawals: \"Withdrawals\", withdrawalRequests: \"Withdrawal Requests\", fundDepositAddresses: \"Fund deposit addresses\", feeAddresses: \"Fee addresses\", _: \"\"\n};\n//let displayFunctions = { timestamp: formatTimestamp };\n\nlet cleanText = s => oS(s).replace(/_/g, \" \").trim();\n\nclass Comp extends React.Component {\n  constructor(p, s, sors) { super(p); A(this, { state: {...s}, fers: {}, observers: [] }); this.initRefs(oS(sors)); }\n  render() { return this.ren(this.props, this.state); }\n  ren(p, s) { return <div/> }\n  initRefs(spacedOutRefString) { this.fers = F(spacedOutRefString.split(\" \").map(k => [k, React.createRef()])); }\n  updateChildRef(newV) { if (D(this.props.childRef)) this.props.childRef.current = newV; }\n  componentDidMount() { this.updateChildRef(this); }\n  componentWillUnmount() { this.updateChildRef(U); for (let o of this.observers) o.detach(); this.unmounted = true; }\n  setStateKV(k, v, onDone) { //L(`setStateKV(${k}, ${S(v)})`); \n  this.setState(singleKeyObject(k, v, onDone)) }\n  addSyncKeyObserver(data, key, context) { this.addSyncObserver(data, key, d => { if (!this.unmounted) this.setStateKV(key, d) }, context); }\n  addSyncObserver(data, key, onChange, context) { this.observers.push(data.syncCache.watch(key, onChange, context)); }\n}  \n\nclass Selector extends Comp { constructor(p) { super(p); A(this.state, { selectedIx: 0 }); oF(p.onChanged)(this.state.selectedIx) }\n  setSelectedIx(selectedIx) { if (this.state.selectedIx !== selectedIx) this.setState({ selectedIx }, () => oF(this.props.onChanged)(selectedIx)); }\n  ren(p, s) { return <FormControl component=\"fieldset\"><RadioGroup row={p.horizontal || U} aria-label=\"\" name=\"\" value={s.selectedIx} onChange={e => this.setSelectedIx(L(parseInt(e.target.value)))}>\n    {(oA(p.options).map((x, i) => <FormControlLabel key={i} value={i} label={x} control={<Radio />}/>))}</RadioGroup></FormControl> }\n}  \n\nfunction sort(a, comp) { return a.map((e, i) => [e, i]).sort((a, b) => (comp && comp(a[0], b[0])) || (a[1] - b[1])).map(e => e[0]); }\nlet styles = ({ visuallyHidden: { border: 0, clip: 'rect(0 0 0 0)', height: 1, margin: -1, overflow: 'hidden', padding: 0, position: 'absolute', top: 20, width: 1, }, });\nlet classes = styles;\nclass THead extends Comp {\n  ren(p, s) {\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = p;\n    const createSortHandler = (property) => (event) => { onRequestSort(property, event); }; \n    return <TableHead><TableRow>\n      {p.checkable ? <TableCell padding=\"checkbox\"><Checkbox indeterminate={numSelected > 0 && numSelected < rowCount} checked={rowCount > 0 && numSelected === rowCount} onChange={onSelectAllClick} inputProps={{ 'aria-label': 'select all desserts' }} /></TableCell> : null}\n      {oA(p.headers).map((h, i) => { let sortDirection = ['asc', 'desc', false][orderBy === i ? order : 2];\n        return <TableCell key={i} align={h.alignCaption} padding={h.disablePadding ? 'none' : 'default'} sortDirection={sortDirection}>\n          <TableSortLabel active={orderBy === i} direction={sortDirection || 'asc'} onClick={createSortHandler(i)}>\n            {h.caption}{orderBy === i ? <span style={styles.visuallyHidden}>{order === 1 ? 'sorted descending' : 'sorted ascending'}</span> : null}\n          </TableSortLabel>\n        </TableCell>})}\n    </TableRow></TableHead>;\n  }\n}\n \nclass ListView extends Comp {\n  constructor(p) { super(p); this.state = { page: 0, rowsPerPage: 5, checked: {}, selectedIx: null, sortOrder: 0 }; } \n  ren(p, s) {\n    let headers = p.headers || K(oO(oA(p.data)[0])).map(h => ({ label: h, caption: h }));\n    let rows = oA(p.data).map((d, _id) => ({ _id, ...d }));\n    if (D(s.sortColumn)) rows = rows.sort((a, b) => { let h = headers[s.sortColumn];\n      let x = (h.compare || ((x, y) => (x === y ? 0 : (x < y ? -1 : 1))))(a[h.label], b[h.label]);\n      return [x, -x][s.sortOrder];\n    });\n    let elimObjects = (d, h) => { if (isO(d)) { L(`${h} is an object: ${S(K(d))}`); } else return d; };\n    let X = (d, f) => this.setState(d, () => { oF(p.onChange)(d); oF(f)(d); });\n    let isChecked = d => s.checked[d.index], isSelected = d => s.selectedIx === d._id;\n    let columnCount = headers.length + (p.checkable ? 1 : 0);\n    let prevRowsPerPage = s.rowsPerPage;\n    let offset = s.page * s.rowsPerPage, end = Math.min(rows.length, offset + s.rowsPerPage);//, emptyRows = offset + s.rowsPerPage - end;\n    let dense = true, onRequestSort = sortColumn => { this.setState({ sortColumn, sortOrder: this.state.sortOrder ^ ((this.state.sortColumn === sortColumn) ? 1 : 0) })}; \n    return <TableContainer component={Box}><p>{p.caption || null}</p><Table className={classes.table} aria-labelledby={p.title} size={(dense ? 'small' : 'medium')} aria-label={p.title}>\n        <THead headers={headers} classes={classes} checkable={p.checkable} numSelected={V(s.checked).filter(v => D(v)).length} order={s.sortOrder} orderBy={s.sortColumn} onSelectAllClick={() => { }} onRequestSort={onRequestSort} rowCount={rows.length} />\n        <TableBody>{sort(rows).slice(offset, (s.page + 1) * s.rowsPerPage).map((d, i) => <TableRow key={i} hover onClick={() => X({ selectedIx: d._id })} aria-checked={isChecked(d)} tabIndex={-1} selected={isSelected(d)}>\n          {p.checkable ? <TableCell padding=\"checkbox\"><Checkbox checked={isChecked(d)} inputProps={{ 'aria-labelledby': i }} /></TableCell> : null}\n          {headers.map((h, j) => <TableCell key={j} align={h.align || \"center\"}>{(h.displayFunc || I)(d[h.label], d)}</TableCell>)}\n        </TableRow>)}</TableBody>\n        <TableFooter><TableRow><TablePagination component={TableCell} colSpan={(columnCount - 1)} rowsPerPageOptions={[5, 10, 25, 50, 100, 250, 500, 1000]} count={rows.length} rowsPerPage={s.rowsPerPage} page={s.page} onChangePage={(e, page) => X({ page })} onChangeRowsPerPage={e => X({ rowsPerPage: parseInt(e.target.value, 10) }, d => X({ page: Math.min(Math.round(s.page*(prevRowsPerPage/d.rowsPerPage)), Math.floor((rows.length - 1)/d.rowsPerPage) )}))} /></TableRow></TableFooter>\n      </Table></TableContainer>   \n  }\n}\n \nclass Sidebar extends Comp {\n  ren(p, s) {  \n    return <List>{E(p.tabs).map(([title, control], i) => { let color = p.value === i ? \"secondary\" : \"primary\";\n      return <ListItem button onClick={() => oF(p.onChange)(U, i)} key={i}>{tabulize(0, [[\n        <ListItemIcon>{(C => D(C) ? <C color={color}/> : null)(captionIconMap[title])}</ListItemIcon>, \n        <Typography color={color}>{cleanText(title)}</Typography>\n      ]], [[{width: \"2em\"}, U]])}</ListItem>})}\n    </List>; \n  }\n}\n\nclass TabbedView extends Comp { constructor(p) { super(p, { selectedTabIx: 0 }); this.fers.visibleTab = {}; }\n  getVisibleTab() { return this.fers.visibleTab.current; }\n  ren(p, s) {let selTabIx = (D(p.selectedTabIx) ? p.selectedTabIx : s.selectedTabIx) || 0;\n    let TabsControl = D(p.tabsControl) ? p.tabsControl : U;\n    let horizontal = p.horizontal;\n    let tabsProps = { value: selTabIx, onChange: (e, selectedTabIx) => this.setState({ selectedTabIx }, oF(p.onChangeSelectedTabIx)(selectedTabIx)) };\n    let tabs = p.TabsControl ? p.TabsControl(tabsProps) : <Tabs indicatorColor=\"primary\" textColor=\"primary\" {...tabsProps} aria-label=\"tabs\" centered>{E(p.tabs).map(([title, control], i) => <Tab key={i} label={cleanText(title)} disabled={(oO(p.tabProps)[title])}/>)}</Tabs>;\n    //L(`TabbedView: pp: ${S(p.parentProps)}`)\n    let activeTab = K(p.tabs).length > 0 ? React.createElement(V(p.tabs)[selTabIx], ({...p.parentProps, childRef: this.fers.visibleTab})) : null;\n    return tabulize(0, horizontal ? [[tabs, activeTab]] : [[tabs], [activeTab]], horizontal ? [[{width: \"13em\", verticalAlign: \"top\"}, U]] : [[U], [U]]);\n  }\n}\n\nlet button = (caption, onClick, color) => <Button variant=\"contained\" color={[\"primary\", \"secondary\"][color || 0]} onClick={onClick}>{caption}</Button>\n\nclass TabTimeline extends Comp { constructor(p) { super(p, { selectedTabIx: 0 }); this.fers.tabbedView = React.createRef(); this.fers.visibleTab = {}; }\n  getTabbedView() { return this.fers.tabbedView.current; } \n  getVisibleTab() { return this.fers.visibleTab.current; }\n  ren(p, s) { let last = (i, o) => (i === (K(o).length - 1));\n    let f = o => G(o, (V, k, i) => () => tabulize(1/2, [[<Box><V {...p.parentProps} childRef={this.fers.visibleTab}/></Box>], [<Box>{tabulize(1/2, [[\n      p.onCancel && button(\"Cancel\", oF(p.onCancel)), \n      (i > 0) && button(\"Start over\", () => this.setState({ selectedTabIx: 0 })),\n      !last(i, o) && button(\"Next\", () => { let r = this.getVisibleTab().validate(); if (r) { \n        this.setState(L({ selectedTabIx: s.selectedTabIx + 1 }), () => (t => oF(t.setPrecedingResult).bind(t)(r))(this.getVisibleTab())); \n      }}),\n      last(i, o) && button(p.acceptText || \"Finish\", () => { let vt = this.getVisibleTab(); if (vt) { let r = vt.validate(); L(`>> r = ${S(r)}`); if (L(r)) oF((p.onAccept))(r); } })\n    ].filter(I)])}</Box>]]));\n    //L(`TabTimeLine:: ${S(p.parentProps)}`);\n    return <TabbedView onChangeSelectedTabIx={selectedTabIx => this.setState({selectedTabIx})} selectedTabIx={s.selectedTabIx} ref={this.fers.tabbedView} tabs={f(oO(p.tabs))} tabProps={G((p.tabs), (v, k, i) => (i !== (s.selectedTabIx)))} parentProps={p.parentProps}/>\n  }\n}\n\nclass TabTimelineNew extends Comp { constructor(p) { super(p, { selectedTabIx: 0 }); this.fers.visibleTab = {}; }\n  ren(p, s) { let C = V(p.tabs)[s.selectedTabIx];\n    return K(p.tabs).length === 1 ? <C childRef={this.fers.visibleTab} {...p.parentProps}/> :\n    <><Stepper activeStep={s.selectedTabIx} alternativeLabel>{K(oO(p.tabs)).map(label => (<Step key={label}><StepLabel>{label}</StepLabel></Step>))}</Stepper>\n    <C childRef={this.fers.visibleTab} {...p.parentProps}/>\n    </>\n  }\n}\n\nclass ValidatableComp extends Comp {\n  constructor(p, s, fers) { super(p, { values: {}, errors: {}, ...s }, fers);  }\n  setErrors(errors) { this.setState({ errors }, () => L(`New errors = ${S(this.state.errors)}`)); return (((K(errors).filter(I)).length) === 0); } \n  validate() { return true; }\n  genTextField(k, p) { let s = this.state; return <TextField error={(D(s.errors[k]))} variant=\"outlined\" ref={this.fers[k]} id={k} label={cleanText(k)} onChange={e => this.setState({ values: { ...s.values, ...singleKeyObject(k, e.target.value)}})} value={oS(s.values[k])} {...p} helperText={s.errors[k] || oO(p).helperText}/> }\n}\n\nlet tabulize = (borderSpacing, cells, cellStyles) => <table style={{borderSpacing: `${borderSpacing || 0}em`}}><tbody>{cells.map((r, i) => <tr key={i}>{r.map((c, j) => \n  <td key={j} style={cellStyles && oO(oA(oA(cellStyles)[i])[j])}>{c}</td>)}</tr>)}</tbody></table> \nlet formTable = cells => tabulize(1.5, cells)\nlet form = (preamble, cells) => <form noValidate autoComplete=\"off\">{preamble}{formTable(cells)}</form>\n\nclass DialogWrap extends Comp { //constructor(p, s) { super(p, {...s, open: false}); }\n//  show() { this.setState({ open: true }); }\n  ren(p, s) { \n    //L(`DialogWrap parentProps = ${S(p.parentProps)}`)\n    let C = p.comp; let id = cleanText(p.id);\n    return <Dialog aria-labelledby={id} open={p.open} onClose={() => { oF(p.onClose)(); this.setState({ open: false }); }}><h2>{id}</h2>\n      <C {...p.parentProps} onCancel={p.onCancel} onAccept={p.onAccept}/></Dialog> }\n} \n\nclass OpenDialogButton extends Comp { constructor(p, s) { super(p, { ...s, open: false }); }\n  ren(p, s) { return <>{button(cleanText(p.id), () => this.setState({ open: true }))}\n    <DialogWrap open={s.open} comp={p.comp} id={p.id} onAccept={d => { p.onAccept(d); this.setState({ open: false }); }} onCancel={() => { oF(p.onCancel)(); this.setState({ open: false }); }} parentProps={p.parentProps}/></> }\n}\n \nclass GetPasswordView extends ValidatableComp {\n  constructor(p, s) { super(p, s, \"Password\"); }\n  ren(p, s) { return formTable([[preamble(\"Please enter your password to confirm\", `Enter the password for wallet '${p.walletName}'`)], [<LockIcon fontSize={\"large\"}/>], \n    [this.genTextField(\"Password\", { type: \"password\" })]]) }\n  validate() { return this.state.values; }\n}\n\nclass GetPasswordDialog extends Comp { //constructor(p, s) { super(p, s, \"dlg\"); }\n  ren(p, s) { return <DialogWrap open={oB(p.open)} comp={() => <TabTimeline tabs={{GetPasswordView}} walletName={p.walletName} onAccept={p.onAccept} onCancel={p.onCancel} />}/> }\n}\n\nclass ProgressDialog extends Comp { ren(p, s) { let id = cleanText(p.title); \n  return <Dialog aria-labelledby={id} open={p.open} onClose={oF(p.onClose)}><h2>{cleanText(id)}</h2>{tabulize(3, [[<CircularProgress  value={p.progress} />]])}</Dialog> \n} }\n\nlet testModeComp = (testMode, C) => (testMode ? <div style={{borderStyle: \"dashed\", borderWidth: \"1px\", borderRadius: `0.333em`, borderColor: '#7A7'}}><C/></div> : null)\n\nlet wrapEllipsisDiv = v => <div style={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\"}}>{v}</div>;\nlet newTabRef = (link, caption) => <a target=\"_blank\" rel=\"noopener noreferrer\" href={link}>{caption}</a>;\nlet aLink = (src, caption) => wrapEllipsisDiv(newTabRef(src, caption)); \nlet extractHeaders = d => F(K(oO(oA(d)[0])).map(h => [h, { label: h, caption: h }]));\nlet genHeaders = d => applyListHeaders(extractHeaders(d), commonTableHeaders);\n\nlet applyListHeaders = (h, mods)  => { E(mods).forEach(([k, v]) => A(oO(h[k]), v)); return h; };\n\nlet compareStrings = (a, b) => a.localeCompare(b);\nlet compareBNs = (a, b) => a.isLessThan(b); \nlet commonDataTypes = {\n  btcAddress: { caption: \"BTC address\", displayFunc: v => aLink(`https://www.blockchain.com/en/btc/address/${v}`, v), compare: compareStrings },\n  ethAddress: { caption: \"ETH address\", displayFunc: v => aLink(`https://etherscan.io/address/${v}`, v), compare: compareStrings },\n  btcTx: { caption: \"Bitcoin transaction\", displayFunc: v => aLink(`https://www.blockchain.com/en/btc/tx/${v}`, v), compare: compareStrings },\n  pubKey: { caption: \"Public key\", displayFunc: wrapEllipsisDiv, compare: compareStrings },\n  status: { caption: \"Status\", displayFunc: cleanText, compare: compareStrings },\n  btcSatoshis: { caption: \"Amount (BTC)\", align: \"right\", alignCaption: \"right\", displayFunc: x => satoshiToBTCString(x), compare: compareBNs },\n  btc: { caption: \"Amount (BTC)\", align: \"right\", alignCaption: \"right\", displayFunc: x => btcToString(x), compare: compareBNs }\n}\nlet commonTableHeaders = G({ txId: { type: \"btcTx\" }, btcAddress: { type: \"btcAddress\" }, fromBTC: { caption: \"From BTC Address\", type: \"btcAddress\" }, toBTC: { caption: \"To BTC Address\", type: \"btcAddress\" }, ethAddress: { type: \"ethAddress\" }, pubKey: { type: \"pubKey\" }, satoshiBN: { type: \"btcSatoshis\" }, finalValue: { type: \"btcSatoshis\" }, value: { type: \"btcSatoshis\" }, status: { type: \"status\" }, \n  fundDepositAddress: { caption: \"Fund deposit address\", type: \"btcAddress\"}, \n  fromPubKey: { caption: \"From public key\", type: \"pubKey\" }, fromBtcAddress: { caption: \"From BTC address\", type: \"btcAddress\" },\n  derivedEthAddress: { caption: \"Derived ETH Address\", type: \"ethAddress\" }, \n  timestamp: { caption: \"Time\", align: \"left\", alignCaption: \"left\", displayFunc: formatTimestamp },\n}, v => ({...(D(v.type) ? commonDataTypes[v.type] : {}), ...v}));\n \nlet applyHeaders = h => applyListHeaders(h, {\n  //  txId: { caption: \"BTC Transaction\", displayFunc: displayBtcTransaction },\n    name: { caption: \"Wallet name\" },\n    privateKey: { caption: \"Encrypted Private Key\", displayFunc: wrapEllipsisDiv },\n    chainCode: { caption: \"Encrypted Chain Code\", displayFunc: wrapEllipsisDiv },\n    publicKey: { caption: \"Public Key\", displayFunc: wrapEllipsisDiv },\n    btcAddress: { caption: \"Bitcoin Wallet Address\", displayFunc: wrapEllipsisDiv },\n    ethAddress: { caption: \"Ethereum Investor address\", displayFunc: wrapEllipsisDiv },\n  //  value: { caption: \"Amount (BTC)\", align: \"right\", alignCaption: \"right\" }\n  });\n    \nlet preamble = (title, text, warning) => <><h2 style={{textAlign: \"left\"}}>{title}</h2><p style={{textAlign: \"left\"}}>{text}</p><p style={{textAlign: \"left\", color: \"#FF2170\"}}>{warning}</p></>;\nlet loadingComponent = (data, c) => D(data) ? c  : tabulize(5, [[<CircularProgress/>]]);\n\nlet dataSummary = (n, data) => (d => tabulize(1/3, [[`Number of ${n}s:`, d.length], [`Total ${n} value:`, satoshiToBTCString(d.reduce((p, c) => p.plus((c.satoshiBN)), BN(0)))],\n  [`Time of first ${n}:`, formatTimestamp(d.reduce((p, c) => D(p) ? Math.min(p, c.timestamp) : c.timestamp, U))],\n  [`Time of last ${n}:`, formatTimestamp(d.reduce((p, c) => D(p) ? Math.max(p, c.timestamp) : c.timestamp, U))]\n]))(oA(data))\n\nexport { dataSummary, testModeComp, GetPasswordDialog, preamble, loadingComponent, commonTableHeaders, applyListHeaders, extractHeaders, genHeaders, wrapEllipsisDiv, Sidebar, Comp, ValidatableComp, DialogWrap, ProgressDialog, ListView as List, TabbedView, Selector, captionMap, OpenDialogButton, cleanText, TabTimeline, button, tabulize, formTable, form, commonDataTypes }","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\n/* eslint no-unused-vars: 0 */\nimport React from 'react';\n// eslint-disable-next-line\nimport { A, D, E, F, G, I, K, L, S, T, V, oA, oF, oO, singleKeyObject } from '../common/tools';\nimport { data, getInvestorWalletDataKey, getInvestorDataKey, stati } from '../core/data';\n// eslint-disable-next-line\nimport { dataSummary, tabulize, commonDataTypes, genHeaders, ValidatableComp, Comp, TabbedView, List, cleanText, button, TabTimeline } from './components'; \n\nclass DataDependentView extends Comp {\n  componentDidMount() { this.componentDidUpdate({}); }\n  componentDidUpdate(prevP) { if (prevP.investor !== this.props.investor) this.updateInvestor(this.props.investor); } \n} \nclass InvestorDependentView_Eth extends DataDependentView { \n  updateInvestor(investor) { if (investor) { this.addSyncKeyObserver(data, getInvestorDataKey(investor)); data.retrieveInvestorData(investor); } }\n  getInvestorData() { return oO(this.props.investor && this.state[getInvestorDataKey(this.props.investor)]); }\n} \n\nclass InvestorDependentView_Btc extends DataDependentView { \n  updateInvestor(investor) { if (investor) { this.addSyncKeyObserver(data, getInvestorWalletDataKey(investor)); data.retrieveInvestorWalletData(investor); } }\n  getInvestorWalletData() { return oO(this.props.investor && this.state[getInvestorWalletDataKey(this.props.investor)]); }\n} \n\nclass InvestorID extends Comp {\n  ren(p, s) { let i = oO(p.investor); return tabulize(1/7, [\n    ['Public key', i.pubKey || '?'], \n    ['Investor address (eth)', commonDataTypes.ethAddress.displayFunc(i.data) || '?'], \n    ['Wallet address (btc)', commonDataTypes.btcAddress.displayFunc(i.btcAddress) || '?']]) }\n}\n\nclass EthTxView extends InvestorDependentView_Eth { \n  ren(p, s) { let i = this.getInvestorData(); \n    let headers = F(T(\"Deposits Withdrawals Withdrawal_Requests\").map(k => [k, genHeaders(i[k])]));\n    headers = G(headers, v => V(v).filter(h => (p.EDeveloperMode.Developer) || T(\"status value txId pubKey timestamp\").includes(h.label)));\n    return <TabbedView style={{ display: D(p.investor) ? \"block\" : \"none\" }} caption={`Investor ${oO(p.investor).data}`} tabs={G(headers, (v, k) => () => \n    tabulize(1/2, [[dataSummary(k.slice(0, -1), i[k])], [<List data={i[k]} headers={v} />]]))} />;\n  }\n}\n\nclass InvestorList extends Comp { componentDidMount() { this.addSyncKeyObserver(data, \"investorsAddresses\"); }\n  ren(p, s) { \n    let h = genHeaders(s.investorsAddresses);\n    A(oO(h.data), { caption: \"Address\", ...commonDataTypes.ethAddress });\n    return <List caption={p.caption || \"Investors\"} data={s.investorsAddresses} headers={V(h)} onChange={d => oF(p.onChangedSelectedInvestor)(oA(s.investorsAddresses)[d.selectedIx])} />; \n  }\n}\n\nexport { InvestorList, InvestorID, EthTxView, InvestorDependentView_Eth, InvestorDependentView_Btc }","// eslint-disable-next-line\nimport { A, D, E, H, I, K, L, P, R, S, T, U, V, oA, oF, oO, oS, asA, singleKeyObject } from '../common/tools'; \nimport { decryptWallet, getWalletRoot, getAmfeixPublicKey, btcAddressFromPubKey, pubKeyBufferToPoint, ethAddressFromPubKey, encryptSeedWords, rootFromSeed, getAmfeixPrivateKey } from '../common/crypto';\nimport { Persistent } from './persistent'\n\nclass Wallet extends Persistent { \n  constructor() { super(\"wallet\", [\"accounts\"], { accounts: {} }); L('Creating Wallet class instance.'); }\n\n  async openWallet(creds, wallet) {// L(`openWallet: ${S(creds)} wallet: ${S(wallet)}`)\n    let w = await decryptWallet(P(wallet, T(\"privateKey chainCode\")), creds.Password); \n    let root = getWalletRoot(w);\n    let pub = getAmfeixPublicKey(root);\n    return ({ privateKey: w.privateKey, chainCode: w.chainCode, publicKey: pub.toString('hex'), btcAddress: btcAddressFromPubKey(pubKeyBufferToPoint(pub)), ethAddress: ethAddressFromPubKey(pub) }); \n  }\n\n  async add(creds, seedWords) { \n    let w = await encryptSeedWords(seedWords, creds.Password); \n    let d = await this.openWallet(creds, w); \n    let root = rootFromSeed(seedWords);\n    if (root.privateKey.toString('hex') !== d.privateKey.privateKey.toString('hex')) throw R(\"Encryption error (private key mismatch)\");\n    if (root.chainCode.toString('hex') !== d.chainCode.privateKey.toString('hex')) throw R(\"Encryption error (chainCode mismatch)\");\n    this.accounts[creds.Wallet] = { name: creds.Wallet, ...w, ...P(d, T(\"publicKey btcAddress ethAddress\")) };\n    this.persist(); \n    return this.lastLogin = this.accounts[creds.Wallet];\n  } \n\n  async getPrivateKey(creds) {\n    let d = await this.openWallet(creds, this.accounts[creds.Wallet]);\n    return getAmfeixPrivateKey(getWalletRoot(d)).toString('hex');\n  }\n\n  async open(creds) { \n    let d = await this.openWallet(creds, this.accounts[creds.Wallet]);\n    (A(this.accounts[creds.Wallet], { name: creds.Wallet, ...P(d, T(\"publicKey btcAddress ethAddress\")) }));\n    return this.lastLogin = this.accounts[creds.Wallet]; \n  }\n}\n\nlet wallet = new Wallet();\n\nexport { wallet }\n//nStMSFYWGfFL5QW","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\n/* eslint react/display-name: 0 */\nimport React from 'react';\n// eslint-disable-next-line\nimport { A, D, E, F, G, I, K, L, S, T, U, V, oA, oO } from '../common/tools';\nimport { Transaction, data } from '../core/data';\n// eslint-disable-next-line\nimport { form, formTable, ProgressDialog, GetPasswordDialog, loadingComponent, applyListHeaders, commonTableHeaders, genHeaders, ValidatableComp, OpenDialogButton, Comp, TabbedView, List, tabulize, TabTimeline, preamble, button } from './components';\nimport { InvestorList, EthTxView } from './investor';\nimport { Typography } from '@material-ui/core';\nimport { BN }  from '../core/bignumber';\nimport { satoshiToBTCString } from '../core/satoshi';\nimport { formatTimestamp } from './formatting';\nimport { wallet } from '../core/wallet';\nimport { pubKeyToEthAddress } from \"../common/crypto\";\n\nclass Approve_actions_Form extends ValidatableComp { constructor(p, s, actionName, propertyLabel) { super(p, s); A(this, { actionName, propertyLabel });  }\n  validate() { return this.props[this.propertyLabel]; }\n  ren(p, s) { let d = oA(p[this.propertyLabel]), n = this.actionName;\n    return form(preamble(`Approve ${n}s`, `Click 'Confirm' to approve all pending ${n}s.`), [\n      [`Number of pending ${n}s:`, d.length],\n      [`Total ${n} value:`, satoshiToBTCString(d.reduce((p, c) => p.plus((c.satoshiBN)), BN(0)))],\n      [`Time of first ${n}:`, formatTimestamp(d.reduce((p, c) => D(p) ? Math.min(p, c.timestamp) : c.timestamp, U))],\n      [`Time of last ${n}:`, formatTimestamp(d.reduce((p, c) => D(p) ? Math.max(p, c.timestamp) : c.timestamp, U))]\n    ])\n  }\n}\n\nclass Approve_deposits_Form extends Approve_actions_Form { constructor(p, s) { super(p, s, \"deposit\", \"pendingDeposits\"); } }\nclass Approve_withdrawals_Form extends Approve_actions_Form { constructor(p, s) { super(p, s, \"withdrawal\", \"pendingWithdrawals\"); } }\n\nclass Approve_all_pending_deposits extends Comp { ren(p, s) { \n  return <TabTimeline tabs={{ Approve_deposits_Form }} acceptText=\"Confirm\" onAccept={p.onAccept} onCancel={p.onCancel} parentProps={{pendingDeposits: p.pendingDeposits}} />;\n} } \n\nclass Approve_all_pending_withdrawals extends Comp { ren(p, s) { \n  return <TabTimeline tabs={{ Approve_withdrawals_Form }} acceptText=\"Confirm\" onAccept={p.onAccept} onCancel={p.onCancel} parentProps={{pendingWithdrawals: p.pendingWithdrawals}} />;\n} }\n\nlet textField = (title) => ({ title });\nlet generateForm = (preambleText, aa) => {\n  return class extends ValidatableComp { constructor(p, s) { super(p, s, aa.flat().map(x => x.title).join(\" \")); }\n    ren(p, s) { return form(preamble(preambleText), aa.map(a => a.map(tf => this.genTextField(tf.title)))) }\n    validate() { return this.state.values; }\n  }\n}\n\nlet changeDataForms = {\n  Owner: generateForm(\"Please enter the new Owner\", [[textField(\"Owner\")]]),\n  AUM: generateForm(\"Please enter the new AUM\", [[textField(\"AUM\")]]),\n  BtcPrice: generateForm(\"Please enter the new BtcPrice\", [[textField(\"BtcPrice\")]]),\n  RequestGas: generateForm(\"Please enter the new AUM\", [[textField(\"RequestGas\")]]),\n  Daily_change: generateForm(\"Please enter the new Daily_change\", [[textField(\"Daily_change\")]]),\n  Fees: generateForm(\"Please enter the new Fees\", [T(\"fee1 fee2 fee3\").map(textField)]),\n  Fund_deposit_address: generateForm(\"Please enter the new Fund_deposit_address\", [[textField(\"Fund_deposit_address\")]]),\n  Fee_address: generateForm(\"Please enter the new Fee_address\", [[textField(\"Fee_address\")]])\n} \n\nlet wrapFormInTabTimeline = f => p => <TabTimeline tabs={{ _0: f }} onAccept={p.onAccept} onCancel={p.onCancel} />;\nlet adminSetters = G(changeDataForms, wrapFormInTabTimeline);\n\nclass Deposits extends Comp {\n  componentDidMount() { this.addSyncKeyObserver(data, \"fundDeposits\"); }\n  ren(p, s) { return loadingComponent(s.fundDeposits, <TabbedView tabs={F(E(s.fundDeposits).map(([k, v], i) => [`Deposit address #${i}`, () => <List data={v} headers={V(genHeaders(v))}/>]))}/>) }\n}\n\nclass Investors extends Comp { \n  ren(p, s) { return tabulize(1/3, [[<InvestorList onChangedSelectedInvestor={investor => this.setState({ investor })} EDeveloperMode={p.EDeveloperMode} />], \n    [D(s.investor) ? <EthTxView investor={s.investor} EDeveloperMode={p.EDeveloperMode} /> : tabulize(5/3, [[<Typography>{'Select an investor to show their transactions'}</Typography>]])]]) }\n}\n\nlet qEthTx = (method, params) => data.queuedEthTransactions.push(L(new Transaction(method, params))); \nclass Change_data extends Comp { \n  Owner(d) { qEthTx(\"transferOwnership\", [BN(d[\"Owner\"]).toString()]); }\n  AUM(d) { qEthTx(\"setAum\", [BN(d[\"AUM\"]).times(data.getFactor()).toString()]); }\n  BtcPrice(d) { qEthTx(\"setBtcPrice\", [BN(d[\"BtcPrice\"]).times(data.getFactor()).toString()]); }\n  RequestGas(d) { qEthTx(\"setRequestGas\", [BN(d[\"RequestGas\"]).toString()]); }\n  Daily_change(d) { qEthTx(\"setDataBlock\", [(BN(d[\"Daily_change\"]).times(data.getFactor())).toFixed().toString()]); }\n  Fees(d) { d = G(d, x => BN(x).toString()); qEthTx(\"setFee\", [d[\"fee1\"], d[\"fee2\"], d[\"fee3\"]]); }\n  Fund_deposit_address(d) { qEthTx(\"setfundDepositAddress\", [d[\"Fund_deposit_address\"]]) }\n  Fee_address(d) { qEthTx(\"setFeeAddress\", [d[\"Fee_address\"]]); }\n\n  ren(p, s) { return tabulize(5/3, V(G(adminSetters, (v, k) => [<OpenDialogButton id={k} comp={v} onAccept={d => this[k](d)} onCancel={I}/>]))) }\n}\n\nclass Pending_Deposits extends Comp { componentDidMount() { this.addSyncKeyObserver(data, \"pendingDeposits\"); }\n  approveAll(deps) { data.queuedEthTransactions.push(...deps.map(d => new Transaction(\"depositAdmin\", [pubKeyToEthAddress(d.pubKey, true), d.txId, d.pubKey, \"\"]))) }  \n  ren(p, s) { let pendingDeposits = oA(V(oO(s.pendingDeposits))[0]); //L(`Pending_Deposits: ${S(pendingDeposits)}`);\n    L(`admin wallet last login: ${S(oO(p.wallet).lastLogin)}`);\n    return loadingComponent(s.pendingDeposits, tabulize(5/3, [\n      [<OpenDialogButton id=\"Approve_all_pending_deposits\" parentProps={{ pendingDeposits }} comp={Approve_all_pending_deposits} onAccept={d => this.approveAll(d)}/>],\n      [<TabbedView tabs={F(E(s.pendingDeposits).map(([k, v], i) => [`Deposit address #${i}`, () => <List data={v} headers={V(genHeaders(v))}/>]))}/>]\n    ].filter(I))) \n  }\n}\n\nclass Withdrawal_Requests extends Comp { componentDidMount() { this.addSyncKeyObserver(data, \"withdrawalRequests\"); }\n  approveAll(withs) { data.queuedEthTransactions.push(...withs.map(d => new Transaction(\"returnInvestment\", [pubKeyToEthAddress(d.pubKey, true), d.txId, d.pubKey, \"\"]))) }\n  ren(p, s) {  let pendingWithdrawals = oA(s.withdrawalRequests);\n    return loadingComponent(s.withdrawalRequests, tabulize(5/3, [\n    [<OpenDialogButton id=\"Approve_all_pending_withdrawals\" parentProps={{ pendingWithdrawals }} comp={Approve_all_pending_withdrawals} onAccept={d => this.approveAll(d)} />],\n    [<List data={s.withdrawalRequests} headers={V((genHeaders(s.withdrawalRequests)))} />]\n  ])) }\n}\n\nclass Queued_Eth_Transactions extends Comp {\n  componentDidMount() { this.addSyncKeyObserver(data, \"queuedEthTransactions\"); }\n  signAndSubmit(creds) { L(`signAndSubmit : ${S(creds)}`);\n     this.setState({ progressDialogOpen: true, progressDialogTitle: \"Decrypting wallet...\" }, () => setTimeout(async () => await this.performApproveWithCreds(creds), 500))\n  }\n  async performApproveWithCreds(creds) { //L(`performApproveWithCreds : ${S(creds)}`)\n    let privateKey = await wallet.getPrivateKey(creds); \n    this.setState({ progressDialogOpen: true, progressDialogTitle: \"Signing transactions...\" }, () => setTimeout(async () => {\n      await data.signAndSubmitQueuedEthTransactions(privateKey); \n      data.queuedEthTransactions = data.queuedEthTransactions.map(x => ({ ...x, status: \"Submitted\" }))\n      this.setState({ progressDialogOpen: false, getPwdDialogOpen: false });\n    }, 500));\n  } \n  ren(p, s) { let Wallet = oO(oO(p.wallet).lastLogin).name;\n    return tabulize(5/3, [ \n      [<>{button(\"Sign and submit queued transactions\", () => this.setState({ getPwdDialogOpen: true }))}<ProgressDialog open={s.progressDialogOpen || false} title={s.progressDialogTitle} progress={U} />\n      <GetPasswordDialog open={s.getPwdDialogOpen} walletName={Wallet} onAccept={creds => this.signAndSubmit({ ...creds, Wallet })} onCancel={() => this.setState({ getPwdDialogOpen: false })}/></>],\n      [<List data={s.queuedEthTransactions} headers={V((genHeaders(s.queuedEthTransactions)))} />]\n    ]) \n  }\n}\n\nexport class Admin extends Comp {\n  ren(p, s) { //L(`admin wallet: ${S(p.wallet)}`);\n    return <TabbedView tabs={{ Investors, Withdrawal_Requests, Deposits, Pending_Deposits, Change_data, Queued_Eth_Transactions }} parentProps={{ wallet: p.wallet, EDeveloperMode: p.EDeveloperMode }}/>; }\n}\n","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\nimport React from 'react';\n// eslint-disable-next-line\nimport { Box, TextField } from '@material-ui/core';\n// eslint-disable-next-line\nimport { Comp, ValidatableComp, TabbedView, TabTimeline, button, formTable, form, preamble } from './components'; \n// eslint-disable-next-line\nimport { A, D, E, F, H, I, K, L, S, U, V, oA, oF, oO, oS, asA, singleKeyObject } from '../common/tools'; \nimport * as bip39 from 'bip39';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { generateSeedWords } from \"../common/crypto\";\n\n//let defaultWords = 'gorilla endorse hat lumber old price route put goose sail lemon raise'.split(\" \");\n\nclass SeedView extends ValidatableComp {\n  constructor(p, s) { super(p, s);  \n    this.setNewInitialWords();\n    this.initRefs(K(this.state).join(\" \"));\n    this.constructed = true;\n  }\n  setNewInitialWords() {  \n     let values = {};\n     for (let q = 0; q < 12; ++q) values[this.getKey(q)] = oS(oA(this.props.initialWords)[q]);  \n     if (this.constructed) { this.setState({ values }); } else { this.state.values = values; }\n  }\n  checkWordsInList(wordList) { //L(`checkWordsInList: ${wordList}`);\n    return this.setErrors(F(this.getWords().map((w, i) => (!(wordList.includes(w))) ? `Word '${w}' is not an accepted word.` : U).filter(I).map((r, i) => [this.getKey(i), (r)])));  \n  }\n  checkWordsEqual(expectedWords) { let gotWords = this.getWords();  \n    return this.setErrors(F(gotWords.map((w, i) =>  (!(w === expectedWords[i])) ? `This word is not correct.` : U).filter(I).map((r, i) => [this.getKey(i), r])));  \n  }\n  componentDidUpdate(prevP) { if (prevP.initialWords !== this.props.initialWords) this.setNewInitialWords(); }\n  getKey(x) { return `Word_${x}`}\n  getWords() { let result = []; for (let q = 0; q < 12; ++q) result.push(this.state.values[this.getKey(q)]);  return result; }\n  ren(p, s) { return formTable([0, 1, 2].map(a => [0, 1, 2, 3].map(b => this.genTextField(this.getKey(4*a + b), { disabled: p.disabled })))) }\n}\n\nclass Setup_password extends ValidatableComp { constructor(p, s) { super(p, s, \"Wallet Password Confirm_password\"); }\n  ren(p, s) { return form(preamble(\"Setup password\", \"Your wallet will be password protected and encrypted. Please, choose a strong password.\"), \n    [[this.genTextField(\"Wallet\")], [this.genTextField(\"Password\", { type: \"password\" })], [this.genTextField(\"Confirm_password\", { type: \"password\" } )]]) }\n  validate() { let e = {};\n    if (this.state.values.Password !== this.state.values.Confirm_password) { e[\"Password\"] = \"Passwords don't match\"; e[\"Confirm_password\"] = \"Passwords don't match\"; } \n    if (oS(this.state.values.Password).length < 8) e[\"Password\"] = \"Please use at least 8 characters\";\n    if (oS(this.state.values.Wallet).length < 1) e[\"Wallet\"] = \"Please choose a name for your wallet\";\n    return ((this.setErrors(e)) && (this.state.values));\n  }\n}\n\nclass Enter_credentials extends ValidatableComp { constructor(p, s) { super(p, s, \"Wallet Password\"); }\n  ren(p, s) { return formTable([[preamble(\"Unlock your wallet\", \"Select a wallet, type the password and unlock it.\")], [<LockIcon fontSize={\"large\"}/>], \n    [this.genTextField(\"Wallet\")], [this.genTextField(\"Password\", { type: \"password\" })]]) }\n  validate() { let e = {};\n    if (oS(this.state.values.Password).length < 1) e[\"Password\"] = \"Please enter your password\";\n    if (oS(this.state.values.Wallet).length < 1) e[\"Wallet\"] = \"Please choose a wallet\";\n    return this.setErrors(e) && { creds: this.state.values };\n  }\n}\n\nclass Backup_seed extends ValidatableComp { constructor(p, s) { super(p, s, \"seedView\"); }\n  validate() { return { creds: this.state.creds, words: this.state.words }; }\n  componentDidMount() { super.componentDidMount(); this.setState({ words: generateSeedWords() }) }\n  setPrecedingResult(creds) { this.setState({ creds }) }\n  ren(p, s) {\n    return <form noValidate autoComplete=\"off\">\n      {preamble(\"Backup seed\", \"Please write these 12 words down, in order, and keep them somewhere safe offline. With them you will be able to recover your wallet.\", \"Never give your seed keys to anyone, we will never ask you to share them with us.\")}\n      <SeedView ref={this.fers.seedView} initialWords={s.words} disabled={true} /></form>;\n  }\n}\n\nclass Verify_seed extends ValidatableComp { constructor(p, s) { super(p, s, \"seedView\"); }\n  setPrecedingResult(input) { this.setState({ ...input }) }\n  validate() { let sv = this.fers.seedView.current; return sv.checkWordsEqual(oA(this.state.words)) && { creds: this.state.creds, seedWords: this.state.words }; }\n  ren(p, s) {\n    return <form noValidate autoComplete=\"off\">{preamble(\"Verify seed\", \"Your seed is very important! If your lose your seed your funds will be permantently lost.\")}\n      <SeedView ref={this.fers.seedView}/></form>;\n  }\n}\n\nclass Input_seed extends ValidatableComp { constructor(p, s) { super(p, s, \"seedView\"); }\n  setPrecedingResult(creds) { this.setState({ creds }) }\n  validate() { let sv = this.fers.seedView.current; return sv.checkWordsInList(bip39.wordlists.english) && { creds: this.state.creds, seedWords: sv.getWords() }; } \n  ren(p, s) { return <form noValidate autoComplete=\"off\">{preamble('Input seed', 'Restore your wallet from your previously backed up seed.', 'Never give your seed keys to anyone, we will never ask you to share them with us.')}\n    <SeedView ref={this.fers.seedView}/></form>;\n  }\n} \n\nclass Unlock_wallet extends Comp { ren(p, s) { return <TabTimeline tabs={{ Enter_credentials }} onAccept={p.onAccept} onCancel={p.onCancel} acceptText=\"Unlock\"/>; } }\nclass Create_wallet extends Comp { ren(p, s) { return <TabTimeline tabs={{ Setup_password, Backup_seed, Verify_seed }} onAccept={p.onAccept} onCancel={p.onCancel}/>; } }\nclass Seed_Login extends Comp { ren(p, s) { return <TabTimeline tabs={{ Setup_password, Input_seed }} onAccept={p.onAccept} onCancel={p.onCancel}/>; } }\n\nexport class Log_in extends Comp { \n  ren(p, s) { return <TabbedView tabs={{ Unlock_wallet, Create_wallet, Seed_Login }} parentProps={{ onAccept: p.onAccept, onCancel: p.onCancel }}/>; } \n}","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport { A, S, V, oA, oO } from '../common/tools';\nimport { amfeixAddressLists, btcRpcUrl, btcFields, data, ethBasicFields } from '../core/data';\n// eslint-disable-next-line\nimport { button, genHeaders, commonDataTypes, Selector, Comp, TabbedView, List, captionMap, tabulize } from './components';\n//import { genHeaders } from './investor';\n\nclass Bitcoin_P2P_Network extends Comp {\n  componentDidMount() { btcFields.forEach(f => this.addSyncKeyObserver(data, f)); }\n  ren(p, s) { return tabulize(1/3, [\n    [tabulize(1/3, [[\"RPC url\", btcRpcUrl]])], \n    [<List data={(btcFields.map(name => ({ name, value: S(oO(s[name]).result) })))} />], \n    [button(\"Refresh\", data.updateConstants['btc'])]\n  ]); }\n} \n\nclass Ethereum_P2P_Network extends Comp {\n  componentDidMount() { amfeixAddressLists.concat(ethBasicFields).concat([\"ethRPCUrl\"]).forEach(f => this.addSyncKeyObserver(data, f)); }\n  ren(p, s) {\n    return tabulize(2/3, [\n      [tabulize(1/3, [[\"RPC url\", s.ethRPCUrl]])],\n      [<List data={ethBasicFields.map(name => ({ name, value: S(oO(s[name])) }))} />],\n      [button(\"Refresh\", data.updateConstants['eth'])],\n      [tabulize(1/3, [amfeixAddressLists.map(k => {\n        let h = genHeaders(s[k]);\n        A(oO(h.data), { caption: \"Address\", displayFunc: commonDataTypes.btcAddress.displayFunc });\n        return tabulize(1/3, [[<List caption={captionMap[k]} data={(oA(s[k]))} headers={V(h)} />], [button(\"Refresh\", () => data.updateFixedLengthArray(k))]]);\n      })])]\n    ]);\n  }\n}\n\nexport class Network extends Comp { ren(p, s) { return <TabbedView tabs={({ Bitcoin_P2P_Network, Ethereum_P2P_Network })} />; } }\n","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\nimport React from 'react';\n// eslint-disable-next-line\nimport { D, E, L, S, U, oO } from '../common/tools';\nimport { data } from '../core/data';\nimport { tabulize, Comp, List } from './components'; \nimport { LinearProgress } from '@material-ui/core' \n\nexport class Progress extends Comp {\n  componentDidMount() {\n//    L(\"componentDidMount: LoadProgressView\");\n    let displayDelay = 500, lastUpdate = (Date.now() - displayDelay);\n    this.addSyncObserver(data, \"loadProgress\", newProgress => {\n      let loadProgress = newProgress;\n      let currentTime = Date.now(), deltaS = (currentTime - lastUpdate), update = () => { //L({currentTime});\n        this.updateTimeout = false;\n        displayDelay = Math.min(4000, 1.17 * displayDelay);\n        lastUpdate = currentTime; \n        return !this.unmounted && this.setState({ loadProgress: { ...loadProgress } });\n      };\n//      L({deltaS, displayDelay});\n      if ((deltaS >= displayDelay)) { update(); } else if (!(this.updateTimeout)) { this.updateTimeout = setTimeout(update, displayDelay - deltaS); }\n    });\n  } \n\n  ren(p, s) { return tabulize(1/2, [\n    [tabulize(1/2, E((oO(oO(s.loadProgress).progress))).map(([key, data]) => [key, \n    D(data.index) ? tabulize(1/7, [[`${data.index} / ${D(data.length) ? data.length : '?'}` + (D(data.length) ? ` (${Math.round(100*(data.index/data.length))}%)` : '')], \n         [<LinearProgress variant={D(data.length) ? \"determinate\" : U} value={D(data.length) ? ((100*data.index)/data.length) : U} />]])\n    : `${S(data)} ms`\n  ]))],\n  [<List data={E((oO(oO(s.loadProgress).timings))).map(([key, data]) => ({ key, timing: `${S(data)} ms` }))} />]\n  ]); }\n}\n","import { D } from '../common/tools';\n\nexport let darkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\nexport let getMainLightness = (fg, dm) => ((D(dm) ? dm : darkMode) ^ fg) ? 0 : 1;\nexport let getMainColor = (fg, dm) => [\"#000\", \"#FFF\"][getMainLightness(fg, dm)];\nexport let basePallette = dark => ({ color: getMainColor(true, dark), backgroundColor: getMainColor(false, dark) });\nexport let seriesColors = (i, dark) => (`#FF2170`);\n","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\n// eslint-disable-next-line\nimport React from 'react'; //import ReactDOM from 'react-dom';\nimport Highcharts from 'highcharts/highstock'; import HighchartsReact from 'highcharts-react-official';\n// eslint-disable-next-line\nimport { basePallette, getMainLightness, seriesColors, getMainColor, darkMode } from './colors';\nimport { ethBasicFields, data } from '../core/data';\n// eslint-disable-next-line\nimport { ProgressDialog, OpenDialogButton, DialogWrap, Selector, ValidatableComp, Comp, TabbedView, button, tabulize, formTable } from './components'; \n// eslint-disable-next-line\nimport { AppBar, Toolbar, Button, Box, TextField, Paper } from '@material-ui/core';\n// eslint-disable-next-line\nimport { A, D, H, I, L, S, T, U, oA, oF, oS, asA } from '../common/tools'; \n// eslint-disable-next-line\nimport { InvestorID, InvestorList, EthTxView, InvestorDependentView_Eth } from './investor';\n// eslint-disable-next-line\nimport { satoshiToBTCFloat } from '../core/satoshi';\n\nlet chart = (title, valueSuffix, datas, dark) => <HighchartsReact constructorType={\"stockChart\"} highcharts={Highcharts} options={{ \n  rangeSelector: {selected: 1}, title: { text: title }, navigator: {enabled: true}, credits: {enabled: false}, \n  chart: { zoomType: \"x\", ...basePallette(dark), events: { load: function() { let n = Date.now(); this.xAxis[0].setExtremes((n - 30*24*60*60*1000), n); this.showResetZoom(); } } }, \n  plotOptions: { areaspline: { fillColor: `hsla(240, 75%, ${100*getMainLightness(true, dark)}%, 20%)` } }, \n  yAxis: [{ labels: { formatter: function () { return this.axis.defaultLabelFormatter.call(this) + valueSuffix; } } }],  \n  xAxis: { events: { aferSetExtremes: function(e) {  } }}, \n  series: datas.map((series, i) => ({ name: series.name, type: \"areaspline\", tooltip: { valueSuffix }, color: seriesColors(i, dark), data: series.data || [] })) \n}}/>;\n\nlet timeDataTrafo = (name, data) => ({ name, data })//: oA(data).map(([t, d]) => [t, d]) })\n\nclass FundIndexChart extends Comp { componentDidMount() { this.addSyncKeyObserver(data, \"timeData\"); }\n  ren(p, s) { return <Box>{chart('Fund Index', \" %\", [timeDataTrafo(\"ROI\", s.timeData)], p.dark)}</Box> }\n}\n\nexport class Impact_Fund extends InvestorDependentView_Eth {\n  componentDidMount() { super.componentDidMount(); ethBasicFields.concat(T(\"roi dailyChange timeData\")).map(k => this.addSyncKeyObserver(data, k)); } \n\n  ren(p, s) { let changePerc = v => D(v) ? `${v >= 0 ? \"+\" : \"-\"}${v}%` : ''; //L(`Fundview inv = ${S(p.investor)}`);\n    let iData = this.getInvestorData(); \n    let displayTrafo = { dailyChange: changePerc, aum: v => `${parseInt(v)/Math.pow(10, s.decimals)} BTC` }\n    let parfs = p => p.map((e, i) => <p key={i}>{e}</p>);\n    return tabulize(1/3, [p.urlParams.testMode ? [<InvestorID investor={p.investor}/>] : U,\n      [tabulize(1/3, [[tabulize(1/3, [[parfs([D(iData.investmentValue) && `${iData.investmentValue} BTC`, `Investment Value`])], [parfs([changePerc(s.roi), `ROI`])]]), <FundIndexChart dark={p.dark}/>]])],\n      [tabulize(1/3, [T(\"dailyChange aum btcPrice\").map((v, i) => `${v}: ${(displayTrafo[v] || I)(s[v])}`)])],\n      [iData.valueSeries && chart('Investment Performance', \" BTC\", [timeDataTrafo(\"Value\", oF(iData.valueSeries)())], p.dark)],\n      [<EthTxView investor={p.investor} EDeveloperMode={p.EDeveloperMode}/>]\n    ].filter(D)) \n  }\n}\n","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\n/* eslint no-unused-vars: 0 */\nimport React from 'react';\n// eslint-disable-next-line\nimport { Box, TextField } from '@material-ui/core';\n// eslint-disable-next-line\nimport { commonDataTypes, dataSummary, testModeComp, wrapEllipsisDiv, applyListHeaders, loadingComponent, OpenDialogButton, DialogWrap, Comp, ValidatableComp, tabulize, form, formTable, TabbedView, TabTimeline, button, List, genHeaders  } from './components'; \n// eslint-disable-next-line\nimport { A, D, E, F, H, I, K, L, P, S, T, U, V, oA, oF, oO, oS, asA, singleKeyObject } from '../common/tools'; \nimport { InvestorDependentView_Btc, InvestorID, EthTxView } from './investor'\n// eslint-disable-next-line\nimport QRCode from 'qrcode-svg';\nimport { pubKeyToBtcAddress } from '../common/pubKeyConvertor';\n// wc52mNR2qTpFfNP\n// eslint-disable-next-line\nclass _Withdraw_ extends Comp { ren(p, s) { return <TabTimeline tabs={{ Withdraw, Review, Done }} onCancel={p.onCancel} onAccept={p.onAccept}/>; } }\n\nclass Account extends Comp { constructor(p, s) { super(p, s, \"dlgWithdraw\"); }\n  ren(p, s) { I(`account: ${S(p.wallets)}`); let headers = V(applyListHeaders(F(T(\"name privateKey chainCode publicKey btcAddress ethAddress\").map(k => [k, ({ label: k, caption: k })]))));\n  return formTable([[<List data={(E(oO(oO(p.wallet).accounts)).map(([name, wallet]) => ({ name, ...wallet})))} headers={headers}/>], \n  //  [<OpenDialogButton id=\"Withdraw\" comp={WithdrawDialog} onAccept={I} onCancel={I}/>]\n  ])}\n}\n\nlet investorCompIfTestMode = (p) => testModeComp(p.urlParams.testMode, () => <InvestorID investor={p.investor} />)\n\nlet txTypes = T(\"Deposits Investments Returns Withdrawals\");\nlet simpleList = data => <List data={data} headers={V(genHeaders(data))}/>; \nclass History extends InvestorDependentView_Btc { \n  ren(p, s) { let walletData = (this.getInvestorWalletData())//, allLoaded = txTypes.reduce((p, c) => p && D(walletData[c]), true); //L(`p.wallet = ${S(p.wallet)}`)\n//    let All_transactions = () => loadingComponent(allLoaded, simpleList(L(txTypes).map(type => oA(walletData[type]).map(d => ({...d, type: type.slice(0, type.length - 1) }))).flat()));\nL({walletData});\n    return tabulize(1/3, [[tabulize(1/3, [['Final balance', loadingComponent(walletData.finalBalance, commonDataTypes.btcSatoshis.displayFunc(walletData.finalBalance))]])], \n    [simpleList(oA(walletData.txs).map(tx => P(tx, T(\"txId fromBTC toBTC type satoshiBN\"))))]]); \n  } \n}\n\nclass Invest extends ValidatableComp { ren(p, s) { L(`investor = ${S(p.investor)}`); let btcAddress = oS(oO(p.investor).btcAddress); let dim = 256;\n  let qrCode = btcAddress.length > 0 ? (new QRCode({ content: btcAddress, ecl: \"H\", width: dim, height: dim, join: true, container: \"svg-viewbox\", xmlDeclaration: false })).svg() : U;\n  return tabulize(1/3, [[qrCode ? <div style={{width: \"30em\", height: \"30em\"}} dangerouslySetInnerHTML={{ __html: qrCode }} /> : null], [this.genTextField(\"Bitcoin personal Investment address\", { value: btcAddress, disabled: true })]]); \n} } \n\nclass Done extends ValidatableComp { ren(p, s) { return <Box/>; } }\nclass Review extends ValidatableComp { ren(p, s) { return <Box/>; } }\nclass Withdraw extends ValidatableComp { ren(p, s) { return form(null, [[this.genTextField(\"To\", \"The address of the recipient\")], [this.genTextField(\"Amount\", \"Amount to be sent\")], [this.genTextField(\"Fees\")]]); } }\n\nexport class Bitcoin_Wallet extends Comp { ren(p, s) { let investor = p.investor || oO(oO(p.wallet).lastLogin);\n  if (!D(investor.btcAddress) && D(investor.pubKey)) investor.btcAddress = pubKeyToBtcAddress(investor.pubKey);\n  return <>{investorCompIfTestMode(p)}{tabulize(1/3, [\n    [<TabbedView tabs={{ History, Invest, _Withdraw_ }} parentProps={{investor, ...(P(p, T(\"urlParams wallet\")))}} />],\n  [<EthTxView investor={p.investor} EDeveloperMode={p.EDeveloperMode}/>]\n])}</>\n} }\n","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\n/* eslint no-unused-vars: 0 */\nimport React from 'react'; import ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n// eslint-disable-next-line\nimport { A, D, E, F, G, H, I, K, L, P, S, T, U, V, oA, oO, oS, asA, makeEnum, singleKeyObject } from './common/tools';  \n// eslint-disable-next-line\nimport { FormControlLabel, Switch, List, ListItem, ListItemText, ListItemIcon, AppBar, Toolbar, Typography, Button, Box, TextField, Paper, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider}  from '@material-ui/core/styles';\n// eslint-disable-next-line\nimport { Sidebar, ProgressDialog, OpenDialogButton, DialogWrap, cleanText, Selector, ValidatableComp, Comp, TabbedView, button, tabulize, formTable } from './ui/components'; \nimport { Admin } from './ui/admin';\nimport { Log_in } from './ui/login';\nimport { Network } from './ui/network';\nimport { Progress } from './ui/loadProgressView'\nimport { Impact_Fund } from './ui/impactFund';\nimport { Bitcoin_Wallet } from './ui/wallet'; \n// eslint-disable-next-line\nimport { InvestorID, InvestorList, EthTxView, InvestorDependentView } from './ui/investor';\n//import ImpactFundIcon from './assets/impactFund.svg'\nimport { wallet } from './core/wallet';\nimport { pubKeyToEthAddress, pubKeyToBtcAddress } from \"./common/pubKeyConvertor\";\n// eslint-disable-next-line\nimport { basePallette, getMainLightness, seriesColors, getMainColor, darkMode } from './ui/colors';\nimport { version } from './version.js'; \nimport { data, ethInterfaceUrls } from './core/data'; \n// eslint-disable-next-line\nimport { EPallette, EUserMode, EDeveloperMode, enumDefault, enumDefObj } from './core/enums';  \n\nlet url = new URL(window.location.href);\nlet getUrlParam = k => (v => v === null ? U : v)(url.searchParams.get(k));\nlet urlParams = F(T(\"asEthAddress asPublicKey asBtcAddress\").map(k => [k, getUrlParam(k)]));\nurlParams.testMode = D(L(getUrlParam(\"8e763620037a1054b3656092dece8d324eef5dd5efd4e4d5c1bbc125c9c74996\")));\n\nclass Settings extends Comp {\n  ethInterfaceChanged(v) { data.setEthRPCUrl(ethInterfaceUrls[v]) }\n  ren(p, s) { \n    return tabulize(1/3, [\n      [<Selector options={ethInterfaceUrls} onChanged={v => this.ethInterfaceChanged(v)}/>],\n      [button(\"Compute data\", () => { data.computeData(); })],\n    ]) \n  }\n}\n\nclass Cache extends Comp {\n  ethInterfaceChanged(v) { data.setEthRPCUrl(ethInterfaceUrls[v]) }\n  ren(p, s) { \n    return tabulize(1/3, [\n      [button(\"Clear data cache\", async () => { await data.clearCache() })],\n      [button(\"Clear bitcoin transaction cache\", async () => { await data.clearTransactionCache('btc'); })],  \n      [button(\"Clear ethereum registered transaction cache\", async () => { await data.clearTransactionCache('eth'); })]\n    ]) \n  }\n}\n \n// wc52mNR2qTpFfNP \nclass MainView extends Comp { //constructor(p, s) { super(p, s);} \n  startWalletOp(walletOperation, f) { this.setState({ walletOperation, progressDialogOpen: true }, () => setTimeout(async () => { await f(); this.setState({ progressDialogOpen: false }) }, 500));  }\n  acceptLogIn(d) { \n    if (d.seedWords) { this.startWalletOp(\"Encrypting\", () => wallet.add(d.creds, d.seedWords, status => { this.setState({ walletCodecProgress: L(status.percent) }); })); }\n    else { this.startWalletOp(\"Decrypting\", () => wallet.open(d.creds, status => this.setState({ walletCodecProgress: status.percent }))); }\n    return true;\n  }\n  ren(p, s) { let tabs = A({ Progress, Bitcoin_Wallet, Impact_Fund }, p.EUserMode.Admin ? ({ Admin, Network, Settings, Cache }) : ({}));\n//    {p.EUserMode.Admin ? <OpenDialogButton id=\"Log_in\" comp={Log_in} onAccept={d => this.acceptLogIn(d)}/> : null}\n    return <><AppBar position=\"static\"><Toolbar><p>{`Version >= ${version}`}</p><OpenDialogButton id=\"Log_in\" comp={Log_in} onAccept={d => this.acceptLogIn(d)}/>\n      {D(oO(p.wallet).lastLogin) ? button(\"Log out\", () =>  ({ })) : null}\n      {D(oO(p.wallet).lastLogin) ? `You are logged in to wallet '${p.wallet.lastLogin.name}'` : 'You are not logged in'}\n    </Toolbar></AppBar> \n    <TabbedView tabs={tabs} parentProps={{...P(p, T(\"EDeveloperMode investor dark urlParams wallet\")) }} TabsControl={props => <div>{tabulize(0, [[<Paper><img alt=\"amfeix-logo\" style={{width: \"100%\", height: \"100%\"}} src=\"amfeix.png\"/></Paper>], [<hr/>], [<Sidebar tabs={tabs} {...props}/>]])}</div>} horizontal={true}/> \n    <ProgressDialog open={s.progressDialogOpen || false} title={`${s.walletOperation} wallet...`} progress={s.walletCodecProgress} /></> \n} }\n\nlet investor;\nif (urlParams.asEthAddress) investor = { data: urlParams.asEthAddress };\nif (urlParams.asPublicKey) investor = { data: L(\"0x\" + pubKeyToEthAddress(urlParams.asPublicKey)), pubKey: urlParams.asPublicKey, btcAddress: L(pubKeyToBtcAddress(urlParams.asPublicKey)) }\n\nL(`Initializing with investor ${S(investor)}`);\n\nif (D(investor)) data.runWhenDBInitialized(() => data.registerInvestorAddress(investor.data)); \n\n//let g = \"024fbc46924b16f5ec5cc562ac0097094b6269f746bd0a5ce1dc9654a604abbedc\"; L(`g: eth = ${pubKeyToEthAddress(g)} btc = ${pubKeyToBtcAddress(g)}`)\n//wsqC3ZB9Ue2pAJ6\nclass App extends Comp { constructor(p) { super(p, { wallet, investor, ...G({EDeveloperMode, EUserMode, EPallette}, enumDefObj)}); this.state.theme = this.createTheme(); } \n  isDark() { let s = this.state; return !D(s.EPallette) || s.EPallette.Default ? darkMode : D(s.EPallette.Dark) }\n  createTheme() { let s = this.state; let dark = this.isDark();\n    A(document.body.style, { color: getMainColor(true, dark), backgroundColor: getMainColor(false, dark) });\n    return createMuiTheme({ palette: { type: dark ? 'dark' : 'light' } }) ;\n  } \n  ren(p, s) { \n    return <ThemeProvider theme={s.theme}>{urlParams.testMode ? <>\n      {tabulize(1/3, [[...E({EUserMode, EDeveloperMode, EPallette}).map(([k, v]) => <Selector options={K(v).map(cleanText)} horizontal={true} onChanged={i => this.setState(singleKeyObject(k, singleKeyObject(V(v)[i], true)), this.setState({ theme: this.createTheme() }))}/>)]])}\n      <InvestorList caption={\"Choose an investor to simulate the UI\"} onChangedSelectedInvestor={investor => this.setState(L({ investor }))} {...(P(s, T(\"EUserMode EDeveloperMode\")))} />\n      <InvestorID investor={s.investor} />\n    </> : null}\n    <p>Future UI (work in progress) below this line.  Numbers shown may be inaccurate or entirely incorrect due to the development process being in progress.</p>\n    <hr/>\n    <MainView {...(P(s, T(\"investor EUserMode EDeveloperMode wallet\")))} urlParams={urlParams} dark={this.isDark()}/></ThemeProvider> \n  } \n} \n\nReactDOM.render(<React.StrictMode><App/></React.StrictMode>, document.getElementById('root')); serviceWorker.unregister();","export let version = 89;\n"],"sourceRoot":""}