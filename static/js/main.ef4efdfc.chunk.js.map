{"version":3,"sources":["common/tools.mjs","common/syncCache.mjs","core/data.js","core/persistent.js","core/bignumber.js","core/amfeixContract.js","common/crypto.mjs","core/db.js","lib/multicall/src/helpers.js","lib/multicall/src/aggregate.js","core/enums.js","core/satoshi.js","common/pubKeyConvertor.mjs","common/tools.js","ui/icons.js","ui/formatting.js","ui/components.js","ui/investor.js","core/wallet.js","ui/admin.js","ui/login.js","ui/network.js","ui/loadProgressView.js","ui/colors.js","ui/impactFund.js","ui/wallet.js","app.js","../../common/version.js","serviceWorker.js","index.js"],"names":["isA","Array","isArray","isO","o","isS","s","A","Object","assign","D","x","E","entries","oO","F","fromEntries","G","f","map","i","k","v","I","K","keys","L","P","R","msg","data","Error","S","JSON","stringify","T","oS","split","U","undefined","V","values","oA","a","oF","singleKeyObject","makeEnum","soo","freeze","Future","this","creationTime","Date","now","promise","Promise","resolve","reject","resolveTime","p","future","Observer","observable","onChange","context","index","remove","SyncCache","key","observe","retriever","obj","forEach","setData","observers","observerIx","obs","push","global","fetch","nodeFetch","stati","Deposits","Pending_Withdrawals","anomalousInvestorIndexMap","b64ToHex","Buffer","from","toString","decodeDeposit","timestamp","amountX","transactionX","fromBtcAddressX","txId","fromBtcAddress","bs58check","encode","satoshiBN","BN","hostname","window","location","btcRpcUrl","ethInterfaceUrl","ethInterfaceUrls","invMap","countTable","dataTable","timeAndAmount","amfeixFeeFields","amfeixAddressLists","btcFields","indexMaps","investorMaps","ethBasicFields","concat","btcRpc","method","func","params","JSONBig","encodeURIComponent","join","mode","headers","body","text","parse","invMapDBStruc","struc","tableStrucMap","keyPath","indices","tables","hierName","q","table","eth","constants","investorsAddresses","btc","queue","ethTransactions","constantFields","constantRetrievers","name","value","amfx","amfeixM","call","timeFunc","startTime","result","time","getInvestorDataKey","investor","getInvestorWalletDataKey","btcAddress","Transaction","parms","fetchDeposits","fromPubKey","toAddr","Data","localData","dbix","futStack","computeFuture","futs","resolveWithPromise","pop","dataProperties","investorData","loadProgress","progress","timings","syncCache","idb","IndexedDB","adminLoadInitiated","queuedEthTransactions","persist","setEthRPCUrl","onLoadProgress","d","onGlobalLoad","step","length","done","updateLoadProgress","updateConstants","t","measureTime","all","setSync","buf","newBuffer","queueOp","write","err","flushBatch","flush","defineProperty","get","getSync","set","_dbInit","_basicLoad","constructorCompleted","init","modeSet","Admin","basicLoad","_investorsAddressesLoad","_loadTransactionsForMonitoredInvestors","getData","privateKey","testMode","web3","personal","getAccounts","accounts","privateKeyToAccount","u","amfeixAddress","Math","estimateGas","to","max","encodeABI","gas","options","sendTransaction","z","status","dbInit","updateArray","getAll","_loadBasicFields","_computePerformance","_loadTimeData","l","updateFixedLengthArray","m","updateInvestorMappedArray","fundDepositObj","flat","updateBitcoinTxs","_updateRegisteredEthTransactions","_fetchFundDeposits","_updateRegisteredBtcTransactions","_computeAllInvestorData","address","updateSyncCache","find","toLowerCase","localBuf","updateInvestorTxs","newRPCUrl","setWeb3Url","filter","getFundDepositAddresses","fundDeposits","cached","sum","reduce","acc","plus","delta","getTxs","tx","ioMap","addr","uniqueAddrs","ins","outs","froms","tos","isInvestment","some","includes","fromBTC","filteredTos","filteredSum","minus","fee","btcTransferType","ETransactionType","Investment","Outgoing","Incoming","txs","finalBalance","countKey","sIx","startIndex","timeData","parseInt","w3Batcher","masterKeys","final","w3b","completed","currentIx","arrayName","exceedsLength","low","high","lengthName","olp","getArrayLengthAndStartIndex","alsi","findArrayLength","updateGenericArray","execute","investorIx","getInvestorMapUpdateCountData","investorMapCountKey","ix","investors","r","type","lengthTable","count","slice","fd","ALPHABET","clear","n","pow","getDecimals","getFactor","ff","times","performance","y","amount","deltaFactor","div","parseFloat","roi","dailyChange","lowIndex","highIndex","approvedDeposits","im","e","b","computeInvestorData","investmentValue","withdrawalRequests","pendingDeposits","ethAddress","lengths","allData","getInvestorIndexFromInvestorsAddressesTable","invKey","ethDataMap","pubKey","signature","action","dataMaps","linkValues","min","j","fastLength","reqWD","txIdToObj","h","txIdMap","g","Withdrawals","investment","sort","isDeposit","perfIndex","getPerformanceIndex","withdrawal","pending_withdrawal","Withdrawn","Pending_Withdrawal","Active","endPerf","startPerf","depositedValue","currentValue","isZero","w","deposit","wr","Processed","Pending","calcTotal","deposits","interests","withdrawals","valueSeries","computedValues","interestEvents","lastIndex","pi","perf","total","satoshiToBTCFloat","derivedEthAddress","pubKeyToEthAddress","pubKeyToBtcAddress","anomalous","pubKeys","error","close","Persistent","persistanceKey","storedFieldNames","defaults","localStorage","getItem","setItem","BigNumber","config","abi","methodMap","amfeixCjson","MultiCallBatch","calls","target","onSuccess","onError","rpcUrl","c","inputs","outputs","returns","aggregate","multicallAddress","response","results","original","_hex","url","queuedOps","batchIx","processedOpCount","queuedBatches","processing","inFlight","maxInFlight","nextIx","batchSize","activeBatch","Web3","indexOf","providers","WebsocketProvider","HttpProvider","timeout","Contract","methods","op","batch","add","shift","mif","executeBatch","setTimeout","actualFlushBatch","defaultDerivationPaths","bitcoin","ethereum","rootFromSeed","seedWords","bip32","fromSeed","bip39","mnemonicToSeedSync","ethAddressFromPubKey","keccak256","getEthAddress","buffer","alloc","toBuffer","secp256k1","publicKeyConvert","btcAddressFromPubKey","pubkey","network","bitcoinJS_Lib","payments","p2pkh","pubKeyBufferToPoint","pubKeyBuffer","ECPair","fromPublicKey","publicKey","encryptKey","password","onProgress","bip38","encrypt","encryptSeedWords","root","decryptWallet","encryptedKeys","decrypt","getAmfeixNode","derivePath","coinNodesFromRoot","derive","getAmfeixPublicKey","getAmfeixPrivateKey","hexOnly","pubKeyHex","prefix","getWalletRoot","fromPrivateKey","privKeyBuffer","chainCode","generateSeedWords","generateMnemonic","computeKey","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","fakeIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","whenInitialized","open","onerror","onsuccess","onupgradeneeded","db","objectStoreNames","deleteObjectStore","item","autoIncrement","os","createObjectStore","createIndex","unique","multiEntry","transaction","oncomplete","deleteDatabase","label","getTx","objectStore","input","getOS","act","onCursor","onData","openCursor","continue","catch","then","put","IDBuffer","pendingOps","activeFlush","errors","successes","log","debug","strip0x","str","replace","encodeParameters","types","vals","defaultAbiCoder","decodeParameters","decode","ethCall","rawData","id","block","ws","wsResponseTimeout","abiEncodedData","onMessage","json","clearTimeout","timeoutHandle","onmessage","send","jsonrpc","rawResponse","content","INSIDE_EVERY_PARENTHESES","FIRST_CLOSING_PARENTHESES","makeMulticallData","memoize","args","returnTypes","substr","components","keyToArgMap","returnMeta","argValues","match","argTypesString","returnTypesString","argTypes","invariant","argValue","idx","callDataBytes","outerResults","returnTypeArray","ele","returnDataMeta","outerResultsDecoded","blockNumber","parsedVals","resultsDecoded","retObj","transformed","transform","EUserMode","EDeveloperMode","EPallette","enumDefObj","enumDefault","coin","satoshiToBTCString","btcToString","toNumber","pubKeyConvertors","crypto","pubKeySyncCaches","pubKeyCachedConvertors","captionIconMap","Bitcoin_Wallet","AccountBalanceWalletOutlinedIcon","Impact_Fund","EqualizerIcon","Settings","SettingsIcon","Progress","HourglassEmptyIcon","Unlock_wallet","LockOpenIcon","Create_wallet","AddCircleOutlineIcon","Log_in","VpnKeyIcon","SupervisorAccountIcon","formatTimestamp","date","make2Digit","year","month","day","hour","minute","second","hour12","Intl","DateTimeFormat","format","formatDate","captionMap","fundDepositAddresses","feeAddresses","_","cleanText","trim","Comp","sors","state","fers","initRefs","ren","props","spacedOutRefString","React","createRef","newV","childRef","current","updateChildRef","detach","unmounted","onDone","setState","addSyncObserver","setStateKV","watch","Component","Selector","selectedIx","onChanged","FormControl","component","RadioGroup","row","horizontal","aria-label","setSelectedIx","FormControlLabel","control","Radio","styles","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","width","classes","THead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","checkable","TableCell","Checkbox","indeterminate","checked","inputProps","property","sortDirection","align","alignCaption","disablePadding","TableSortLabel","active","direction","onClick","event","caption","style","ListView","page","rowsPerPage","sortOrder","rows","_id","sortColumn","compare","comp","X","isChecked","isSelected","columnCount","prevRowsPerPage","offset","TableContainer","Box","Table","className","aria-labelledby","title","size","TableBody","hover","aria-checked","tabIndex","selected","displayFunc","TableFooter","TablePagination","colSpan","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","round","floor","Sidebar","List","tabs","C","color","ListItem","button","tabulize","ListItemIcon","Typography","TabbedView","selectedTabIx","visibleTab","selTabIx","tabsControl","tabsProps","onChangeSelectedTabIx","TabsControl","Tabs","indicatorColor","textColor","centered","Tab","disabled","tabProps","activeTab","createElement","parentProps","verticalAlign","Button","variant","TabTimeline","tabbedView","last","ref","onCancel","getVisibleTab","validate","setPrecedingResult","bind","acceptText","vt","onAccept","ValidatableComp","TextField","helperText","borderSpacing","cells","cellStyles","formTable","form","preamble","noValidate","autoComplete","DialogWrap","Dialog","onClose","OpenDialogButton","GetPasswordView","walletName","fontSize","genTextField","GetPasswordDialog","ProgressDialog","CircularProgress","wrapEllipsisDiv","textOverflow","whiteSpace","aLink","src","link","rel","href","newTabRef","dataList","genHeaders","compareStrings","localeCompare","compareBNs","isLessThan","commonDataTypes","vinout","btcTx","btcSatoshis","commonTableHeaders","toBTC","fundDepositAddress","applyListHeaders","mods","extractHeaders","warning","textAlign","loadingComponent","dataSummary","valueKey","DataDependentView","componentDidUpdate","prevP","updateInvestor","InvestorDependentView_Eth","addSyncKeyObserver","InvestorDependentView_Btc","retrieveInvestorWalletData","InvestorID","EthTxView","getInvestorData","Developer","display","InvestorList","onChangedSelectedInvestor","wallet","creds","Password","pub","openWallet","Wallet","lastLogin","Approve_actions_Form","actionName","propertyLabel","Approve_deposits_Form","Approve_withdrawals_Form","Approve_all_pending_deposits","Approve_all_pending_withdrawals","pendingWithdrawals","textField","generateForm","preambleText","aa","tf","changeDataForms","Owner","AUM","BtcPrice","RequestGas","Daily_change","Fees","Fund_deposit_address","Fee_address","adminSetters","_0","Investors","qEthTx","Change_data","toFixed","Pending_Deposits","deps","approveAll","withs","Queued_Eth_Transactions","progressDialogOpen","progressDialogTitle","performApproveWithCreds","getPrivateKey","signAndSubmitQueuedEthTransactions","getPwdDialogOpen","signAndSubmit","SeedView","setNewInitialWords","constructed","getKey","initialWords","wordList","setErrors","getWords","expectedWords","gotWords","Setup_password","Confirm_password","Enter_credentials","Backup_seed","words","seedView","Verify_seed","checkWordsEqual","Input_seed","sv","checkWordsInList","english","Seed_Login","LogIn","Bitcoin_P2P_Network","Ethereum_P2P_Network","ethRPCUrl","Network","ProgressDependentView","displayDelay","lastUpdate","newProgress","currentTime","deltaS","update","updateTimeout","LinearProgress","timing","SimpleProgress","isLoaded","darkMode","matchMedia","matches","getMainLightness","fg","dm","getMainColor","basePallette","dark","backgroundColor","seriesColors","chart","valueSuffix","datas","constructorType","highcharts","Highcharts","rangeSelector","navigator","enabled","credits","zoomType","events","load","plotOptions","areaspline","fillColor","yAxis","labels","formatter","axis","defaultLabelFormatter","xAxis","aferSetExtremes","series","tooltip","timeDataTrafo","FundIndexChart","changePerc","iData","displayTrafo","aum","decimals","parfs","urlParams","_Withdraw_","Withdraw","Review","Done","investorCompIfTestMode","borderStyle","borderWidth","borderRadius","borderColor","History","walletData","getInvestorWalletData","selectedTx","Invest","qrCode","QRCode","ecl","container","xmlDeclaration","svg","dangerouslySetInnerHTML","__html","URL","getUrlParam","searchParams","investorChosen","ethInterfaceChanged","computeAllInvestorData","Cache","clearCache","clearTransactionCache","MainView","User","onAcceptLogIn","AppBar","Toolbar","Paper","alt","walletOperation","walletCodecProgress","asEthAddress","asPublicKey","InvestorForm","activeWallet","App","theme","createTheme","updateActiveWallet","setMode","registerInvestorAddress","loadActiveWalletData","startWalletOp","percent","prevProps","prevState","Default","Dark","isDark","document","createMuiTheme","palette","ThemeProvider","userToSimulate","simulateWithUser","acceptLLogIn","Boolean","ReactDOM","render","StrictMode","appendChild","$","serviceWorker","ready","registration","unregister","console","message"],"mappings":"47BACIA,EAAMC,MAAMC,QAGZC,EAAM,SAAAC,GAAC,MAAiB,kBAANA,GAAuB,MAALA,IAAcJ,EAAII,IACtDC,EAAM,SAAAC,GAAC,MAAiB,kBAANA,GAElBC,EAAIC,OAAOC,OAGXC,EAAI,SAAAC,GAAC,MAAiB,qBAANA,GAChBC,EAAI,SAAAR,GAAC,OAAII,OAAOK,QAAQC,EAAGV,KAC3BW,EAAIP,OAAOQ,YACXC,EAAI,SAACb,EAAGc,GAAJ,OAAUH,EAAEH,EAAER,GAAGe,KAAI,WAASC,GAAT,uBAAEC,EAAF,KAAKC,EAAL,WAAe,CAACD,EAAGH,EAAEI,EAAGD,EAAGD,EAAGhB,SAGvDmB,EAAI,SAAAZ,GAAC,OAAIA,GACTa,EAAIhB,OAAOiB,KAEXC,EAAI,SAAAf,GAA2D,OAAOA,GACtEgB,EAAI,SAACvB,EAAGqB,GAAJ,OAAaV,EAAEU,EAAKN,KAAI,SAAAE,GAAC,MAAI,CAACA,EAAGjB,EAAEiB,SACvCO,EAAI,SAACC,EAAKC,GAAN,OAAevB,EAAE,IAAIwB,MAAMF,GAAMf,EAAGgB,KACxCE,EAAIC,KAAKC,UACTC,EAAI,SAAA7B,GAAC,OAAI8B,EAAG9B,GAAG+B,MAAM,MACrBC,OAAIC,EACJC,EAAIhC,OAAOiC,OAIXC,EAAK,SAAAC,GAAC,OAAIA,GAAK,IAEfC,EAAK,SAAA1B,GAAC,OAAIA,GAAM,cAChBJ,EAAK,SAAAV,GAAC,OAAIA,GAAK,IACfgC,EAAK,SAAA9B,GAAC,OAAID,EAAIC,GAAKA,EAAI,IAIvBuC,EAAkB,SAACxB,EAAGC,GAAQ,IAAIlB,EAAI,GAAc,OAAVA,EAAEiB,GAAKC,EAAUlB,GAC3D0C,EAAW,SAAAC,GAAG,OAAIvC,OAAOwC,OAAOjC,EAAEoB,EAAEY,GAAK5B,KAAI,SAAAE,GAAC,MAAI,CAACA,EAAGwB,EAAgBxB,GAAG,UAEvE4B,E,WACJ,aAAe,IAAD,2BAAE1C,EAAE2C,KAAM,CAAEC,aAAcC,KAAKC,MAAOC,QAAS,IAAIC,SAAQ,SAACC,EAASC,GAAV,OAAqBlD,EAAE,EAAM,CAAEiD,QAAS,SAAA7C,GAAO,EAAK+C,YAAcN,KAAKC,MAAOG,EAAQ7C,IAAM8C,gB,sGAC5IE,G,oFAAkBT,K,SAAmBS,E,iDAAdH,Q,0EAAsCN,KAAKO,OAAL,O,uHAEpFG,EAAS,kBAAM,IAAIX,I,4HC1CjBY,E,WACJ,WAAYC,EAAYC,EAAUC,EAASC,GAAQ,oBAAC1D,YAAE2C,KAAM,CAAEY,aAAYC,WAAUC,UAASC,U,qDAClFf,KAAKY,WAAWI,OAAOhB,U,KAiB9BiB,E,kDACJ,aAAe,IAAD,6BAAE,eAAS5D,YAAE,eAAM,CAAEuB,KAAM,KAA3B,E,oDACNsC,EAAKtC,GAAkD,OAA1CoB,KAAKmB,QAAQD,EAAKlB,KAAKpB,KAAKsC,GAAOtC,GAAcA,I,8BAC9DsC,EAAKE,GAAa,OAAOpB,KAAKpB,KAAKsC,GAAQ1D,YAAEwC,KAAKpB,KAAKsC,IAAQlB,KAAKpB,KAAKsC,GAAQE,GAAapB,KAAKmB,QAAQD,EAAKE,O,0BACpHC,GAAM,IAAD,OAAE3D,YAAE2D,GAAKC,SAAQ,mCAAEnD,EAAF,KAAKC,EAAL,YAAY,EAAKmD,QAAQpD,EAAGC,U,cAjBtD,aAAe,oBAACf,YAAE2C,KAAM,CAAEwB,UAAW,GAAIC,WAAY,I,kDAC/CP,EAAKL,EAAUC,GACnB,IAAIY,EAAM,IAAIf,EAASX,KAAMa,EAAUC,EAASd,KAAKyB,cAGrD,OAFCzB,KAAKwB,UAAUN,GAAO1B,YAAGQ,KAAKwB,UAAUN,KAAOS,KAAKD,GACjDlE,YAAEwC,KAAKpB,KAAKsC,KAAOQ,EAAIb,SAASb,KAAKpB,KAAKsC,GAAMJ,GAC7CY,I,8BAEDR,EAAKtC,GAA2E,OAAnEY,YAAGQ,KAAKwB,UAAUN,IAAMI,SAAQ,SAAApE,GAAC,OAAIA,EAAE2D,SAASjC,EAAM1B,EAAE4D,YAAkBlC,I,6BACxF8C,GACDlE,YAAEwC,KAAKwB,UAAUE,EAAIX,gBAAgBf,KAAKwB,UAAUE,EAAIX,W,8nBCGhEa,EAAOC,MAAQC,IAKf,IAEIC,EAAQ,CAAEC,SAAUpC,YAAS,uCAAwCqC,oBAAqBrC,YAAS,sBAEnGsC,EAA4BrE,YAAE,CAAC,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,MAAMI,KAAI,SAAAC,GAAC,MAAI,CAAEA,GAAI,OAE1HiE,EAAW,SAAA/D,GAAC,OAAIgE,EAAOC,KAAKjE,EAAG,UAAUkE,SAAS,QAIlDC,EAAgB,SAAAnF,GAAC,OAAK,YAA0D,IAAD,mBAAvDoF,EAAuD,KAA5CC,EAA4C,KAAnCC,EAAmC,KAArBC,EAAqB,KACjF,MAAO,CAACH,YAAWI,KAAMT,EAASO,GAAeG,eAAgBF,GAAmBG,IAAUC,OAAOX,EAAOC,KAAKM,EAAiB,WAAYK,UAAWC,YAAGd,EAASM,GAAU,KADvJ,CACiKxD,YAAE7B,KAEzL8F,EAAWC,OAAOC,SAASF,SACd,cAAbA,IAA0BA,EADuB,aAErD,IAAMG,EAAS,sBAFsC,YAEtC,KAA+BC,EAAe,sBAFR,YAEQ,KACvDC,EAAmB,CAACD,EAAiBA,EAAkB,YAGzDE,EAAS,SAACC,EAAYC,GAAb,MAA4B,CAACD,aAAYC,cAClDC,EAAgB1E,YAAE,eAAgB2E,EAAkB3E,YAAE,kBAAmB4E,EAAqB5E,YAAE,qCAAsC6E,EAAY7E,YAAE,wDACpJ8E,EAAYF,EAAoBG,EAAe,CAACR,EAAO,MAAO,UAAWA,EAAO,MAAO,UACvFS,EAAiBhF,YAAE,+BAA+BiF,OAAON,GAAiBM,OAAOL,EAAmB5F,KAAI,SAAAE,GAAC,gBAAOA,EAAP,cAEzGgG,EAAM,uCAAG,WAAOC,EAAQC,EAAMC,GAArB,SAAA7E,EAAA,kEAAgC8E,IAAhC,SAA6D1C,MAAM,GAAD,OAAIwB,GAAJ,OAAgBgB,EAAhB,YAAmC,QAAXD,GAAoBE,EAApB,WAAiC5G,YAAEE,YAAG0G,IAASrG,KAAI,SAAAR,GAAC,OAAIA,EAAEQ,IAAIuG,oBAAoBC,KAAK,QAAMA,KAAK,MAAS,IAAnI,aAC5EL,SAAQM,KAAM,OAAQC,QAAS,CAAE,eAAgB,qBAAqC,SAAXP,EAAoB,CAAEQ,KAAM9F,YAAE,CAACwF,YAAY,KAD5G,8BACoHO,OADpH,iDAAwCC,MAAxC,4DAAH,0DAGNC,EAAgB,SAAC,GAAD,IAAEtB,EAAF,EAAEA,WAAYC,EAAd,EAAcA,UAAd,mBAAC,eAAkC/D,YAAgB8D,EAAYuB,EAAM,CAAC,iBAAoBrF,YAAgB+D,EAAWsB,EAAM,CAAC,aAAc,SAAU,CAAC,CAAC,aAAc,cAAc,QAE3LC,EAAgB,GAEvBD,EAAQ,SAACE,EAASC,GAAV,MAAsB,CAAC,CAAED,UAASC,aAC1CC,EAFW,SAAXC,EAAYnI,EAAGuD,GAAJ,OAAU5C,YAAEH,YAAER,GAAGe,KAAI,YAAa,IAAD,mBAAVE,EAAU,KAAPC,EAAO,KAAMkH,EAAI7E,EAAI,CAACA,EAAGtC,GAAGsG,KAAK,KAAOtG,EAAG,MAAO,CAACA,EAAGrB,YAAIsB,IAAM6G,EAAcK,GAAd,2BAAuBlH,EAAE,IAAzB,IAA6BmH,MAAOD,IAAIA,GAAKD,EAASjH,EAAGkH,QAErJD,CAAS,CACpBG,IAAI,iDAAGC,UAAWT,EAAM,CAAC,QAAS,CAAC,CAAC,OAAQ,QAAQ,MAAaD,EAAcf,EAAa,KAAQe,EAAcf,EAAa,KAC5HnG,YAAE8F,EAAcO,OAAOH,GAAW9F,KAAI,SAAAE,GAAC,MAAI,CAACA,EAAG6G,EAAM,CAAC,gBADtD,IACoEU,mBAAoBV,EAAM,CAAC,SAAU,CAAC,CAAC,OAAQ,QAAQ,OAC9HW,IAAI,yBAAGF,UAAWT,EAAM,CAAC,QAAS,CAAC,CAAC,OAAQ,QAAQ,MAAYD,EAAcf,EAAa,KAAQe,EAAcf,EAAa,KAC9H4B,MAAO,CAAEC,gBAAiBb,EAAM,CAAC,aAG/Bc,EAAiB,CAAEH,IAAK7B,EAAW0B,IAAKvB,GACxC8B,EAAqB,CACvBJ,IAAK,SAAAK,GAAI,6BAAI,sBAAAvG,EAAA,kEAAeuG,EAAf,SAAkC7B,EAAO,MAAD,aAAc6B,IAAtD,6CAAeA,KAAf,KAAqBC,MAArB,mDACbT,IAAK,SAAAQ,GAAI,6BAAI,sBAAAvG,EAAA,kEAAeuG,EAAf,SAAkCE,IAAKC,UAAUH,KAAQI,OAAzD,6CAAeJ,KAAf,KAAqBC,MAArB,oDAGXI,GAAQ,uCAAG,WAAMrI,GAAN,iBAAAyB,EAAA,6DACT6G,EAAYpG,KAAKC,MADR,SAEMnC,IAFN,cAETuI,EAFS,yBAGN,CAAEA,SAAQC,KAAMtG,KAAKC,MAAQmG,IAHvB,2CAAH,sDAMRG,GAAqB,SAAAC,GAAQ,yBAAgBA,EAAS9H,OACtD+H,GAA2B,SAAAD,GAAQ,gCAAuBA,EAASE,aAEjEC,GAAc,WAAYzC,EAAQ0C,GAAQ,oBAACzJ,YAAE2C,KAAM,CAAEoE,SAAQ0C,WAQ/DC,GAAa,uCAAG,WAAOC,EAAYC,GAAnB,SAAAxH,EAAA,kEAA8BjB,IAA9B,KAAgCgB,IAAhC,KAAmC5B,IAAnC,SAA4CuG,EAAO,MAAO3F,YAAE,yBAAD,OAA0ByI,GAAU,IAApC,0BAAyDD,GAAc,OAAlI,8CAA2IpI,KAA3I,oBAAiJX,IAAIsE,GAArJ,6EAAH,wDAEX2E,G,kDACJ,aAAe,IAAD,sBAAE,cAAM,OAAQ,CAAC,aAAc,CAAEC,UAAW,CAAEC,KAAM,QAAW5I,YAAE,iCAE7E,IAAIR,EAAIiB,YAAE,0OAFE,OAGZ,EAAKoI,SAAW,GAChB,EAAKC,cAAgB,SAAAnJ,GAAC,6BAAI,sBAAAsB,EAAA,sEAAkB,EAAK8H,KAAKpJ,GAAGqJ,mBAAmB,sBAAC,sBAAA/H,EAAA,6DAAc,EAAK4H,SAAS1F,KAAKxD,GAAIK,YAAE,KAAD,OAAM,EAAK6I,SAAS5C,KAAK,QAA/D,SAA+E,EAAKtG,KAApF,OAA0FK,YAAE,KAAD,OAAM,EAAK6I,SAAS5C,KAAK,QAAU,EAAK4C,SAASI,MAA5I,0CAAD,IAAlD,oFAC1BzJ,EAAEsD,SAAQ,SAAAnD,GAAC,OAAI,EAAK,IAAMA,GAAX,sBAAgB,sBAAAsB,EAAA,sEAAkB,EAAK6H,cAAcnJ,EAAnB,GAAlB,sFAC/B,EAAKoJ,KAAO1J,YAAEG,EAAEkG,OAAOjF,YAAE,iBAAiBhB,KAAI,SAAAE,GAAC,MAAI,CAACA,EAAGuC,mBACvD,EAAKgH,eAAiBzI,YAAE,sGACxB5B,YAAE,eAAM,CAAE+H,SAAQH,gBAAe0C,aAAc,GAAInG,UAAW,GAAI5C,KAAM,GAAIgJ,aAAc,CAAEC,SAAU,GAAIC,QAAS,IAAMC,UAAW,IAAI9G,IAAa+G,IAAK,IAAIC,IAAUnJ,YAAE,EAAKqI,UAAUC,OAAQc,oBAAoB,EAAOC,sBAAuB,KACnP,EAAKC,UAEL,EAAKC,aAAa/E,GAClB,EAAKgF,eAAiB,SAAAtC,GAAI,OAAI,SAAAuC,GAAO,EAAKX,aAAaC,SAAS7B,GAAQuC,EAAG,EAAKR,UAAUxG,QAAQ,eAAgB,EAAKqG,gBACvH,EAAKY,aAAe,SAACC,EAAMC,EAAQC,GAAf,OAAwB,EAAKC,mBAAmB,EAAKN,eAAe,cAAeG,EAAMC,GAAU,EAAGC,IAC1H,EAAKE,gBAAkB9K,YAAE+H,GAAgB,SAAC9H,EAAG8K,GAAJ,OAAU,kBAAM,EAAKC,YAAL,qBAA+BD,EAA/B,2BAAqC,sBAAArJ,EAAA,sEAAkBY,QAAQ2I,IAAIhL,EAAEC,IAAF,uCAAM,WAAM+H,GAAN,eAAAvG,EAAA,sEAC5GsG,EAAmB+C,GAAG9C,EAAtBD,GAD4G,cAC5HQ,EAD4H,OAEhI,EAAK0C,QAAQjD,EAAMO,EAAON,OAFsG,SAG1H,EAAK1E,QAAQ6D,EAAO0D,GAAGrD,UAAYc,GAHuF,2CAAN,wDAA9B,wFAK9F,EAAKsC,gBAAgBrD,IAAM,kBAAM,EAAKuD,YAAL,wCAAoC,4BAAAtJ,EAAA,6DAC/DyJ,EAAM,EAAKlB,IAAImB,YACnBrD,EAAeN,IAAIlE,SAAQ,SAAA0E,GAAI,OAAIE,IAAKkD,QAAQpD,EAAM,IAAI,SAAAC,GAAW,EAAKgD,QAAQjD,EAAMC,GAAQiD,EAAIG,MAAMjE,EAAOI,IAAIC,UAAW,CAAEO,OAAMC,aAAa,SAAAqD,GAAG,OAAI9K,YAAE,gCAAD,OAAiCM,YAAEwK,WAF7H,SAG7DpD,IAAKqD,aAHwD,uBAGpCL,EAAIM,QAHgC,6CAMrE,EAAK9B,eAAepG,SAAQ,SAAAnD,GAAC,OAAIb,OAAOmM,eAAPnM,OAAA,IAAAA,CAAA,GAA4Ba,EAAG,CAAEuL,IAAK,kBAAM,EAAKC,QAAQxL,IAAIyL,IAAK,SAAAxL,GAAC,OAAI,EAAK6K,QAAQ9K,EAAGC,SAExH,sBAAC,sBAAAqB,EAAA,sEAAoB,EAAKoK,UAAzB,cAAoC,EAAKZ,QAAQzK,YAAE,kBAAkB,GAArE,SAAyF,EAAKsL,aAA9F,kFAAD,GACA,EAAKC,sBAAuB,EA5BhB,E,+KA+BS/J,KAAKgI,IAAIgC,O,6KAElBtF,G,oEACZ1E,KAAK0E,KAAOA,EACZ1E,KAAKuH,KAAK0C,QAAQ3J,QAAQN,KAAK0E,OAC3BA,EAAKwF,M,gCAAelK,KAAKuH,KAAK4C,UAAU/J,Q,uBAAeJ,KAAKoK,0B,uBAAiCpK,KAAKqK,yC,OACtGrK,KAAKuH,KAAK7C,KAAKpE,QAAQN,KAAK0E,M,sIAGtBvG,EAAGC,GAAK,OAAO4B,KAAK+H,UAAUxG,QAAQpD,EAAGC,K,8BACzCD,GAAK,OAAO6B,KAAK+H,UAAUuC,QAAQnM,K,kGAEFoM,EAAYC,G,4FAAkBxK,KAAK+I,YAAY,aAAjB,sBAA+B,4BAAAtJ,EAAA,6DAChG4C,EAAO,6CACX7D,YAAE,cAAD,OAAe,EAAK2J,sBAAsBO,OAA1C,qBACDlK,YAAE,CAAC+L,gBACQ,EAJyF,KAKpG/L,IALoG,SAKjF0H,IAAKuE,KAAKjF,IAAIkF,SAASC,cAL0D,gCAKjGC,SALiG,qBAMtF1E,IAAKuE,KAAKjF,IAAIoF,SAASC,oBAAoBN,GAN2C,UAOjElK,QAAQ2I,IAAI,EAAKb,sBAAsBlK,IAA3B,uCAA+B,WAAM6K,GAAN,qBAAArJ,EAAA,6DAC5EjB,YAAE,eAAD,OAAgBM,YAAEgK,KACfgC,GAAI,EAAA5E,IAAKC,WAAU2C,EAAE1E,QAAjB,oBAA4B0E,EAAEhC,QAFsC,KAI9DtI,IAJ8D,KAI3D6D,EAJ2D,KAIjD0I,IAJiD,KAI7BC,KAJ6B,SAIPF,EAAEG,YAAY,CAAE5I,OAAM6I,GAAIH,MAJnB,oCAIxBI,IAJwB,UAIpB,KAJoB,WAI4CL,EAAEM,YAJ9C,MAI3D/I,KAJ2D,KAIrD6I,GAJqD,KAIlCG,IAJkC,KAIsCzM,KAJtC,MAIxE0M,GAJwE,wBAK9DpF,IAAKuE,KAAKjF,IAAI+F,gBAAgBD,GALgC,eAKxEE,EALwE,OAKtBhN,YAAE,4BAAD,OAA6BM,YAAE0M,KALV,yDAQ/D1C,GAAMrK,YAAE+M,EAAGvM,YAAE,yCARkD,IAQTwM,QAAqB,IAAbD,EAAEC,OAAkB,YAAc,YARjC,4CAA/B,kCAAAzL,KAAA,iBAPqD,QAOpG,EAAKmI,sBAP+F,oD,oJAmBjFnK,GAAI,IAAD,OAAE,sBAAC,sBAAAyB,EAAA,sEAAoB,EAAK8H,KAAKmE,OAAOtL,QAArC,OAA8CpC,IAA9C,0CAAD,K,sFAEGgI,G,4FAAchG,KAAK+I,YAAL,kBAA4B/C,EAA5B,YAA2C,kBAAM,EAAK2F,YAAY3F,EAAjB,UAA0BA,EAA1B,c,oRAE5D3F,QAAQ2I,IAAI/J,YAAE,sBAAsBhB,IAAxB,uCAA4B,WAAM6K,GAAN,SAAArJ,EAAA,kEAAW,EAAX,KAAwBqJ,EAAxB,SAAkC,EAAKd,IAAI4D,OAAOxG,EAAOI,IAAIsD,IAA7D,iDAAgBG,QAAhB,iEAA5B,wD,oPACxBjJ,KAAKwI,aAAa,G,SAAUxI,KAAK6L,mB,uBAA0B7L,KAAK8L,sB,OAAuB9L,KAAKwI,aAAa,G,mRAC5FnI,QAAQ2I,IAAR,CAAahJ,KAAK+L,iBAAlB,mBAAsCzM,YAAEU,KAAK6I,iBAAiB5K,KAAI,SAAAR,GAAC,OAAIA,QAAvE,YAAgFsG,EAAU9F,KAAI,SAAA+N,GAAC,OAAI,EAAKC,uBAAuBD,S,OAAQxN,YAAE,OAASwB,KAAKwI,aAAa,GAAIhK,YAAE,M,mSAC3J6B,QAAQ2I,IAAIhF,EAAa/F,KAAI,SAAAiO,GAAC,OAAI,EAAKC,0BAA0B,EAAK7D,eAAL,kDAA+D4D,EAAExI,YAAcwI,O,uRAClJE,EAAiBvO,YAAEmC,KAAK2J,QAAQ,gBAAgB0C,OAAOpO,KAAI,SAAAR,GAAC,MAAI,CAACA,EAAEmF,KAAMnF,O,SAC/G4C,QAAQ2I,IAAIhF,EAAa/F,KAAI,SAAAiO,GAAC,OAAI,EAAKI,iBAAiB,EAAKhE,eAAL,gCAA6C4D,EAAExI,YAAcwI,EAAGE,O,+QAExFpM,KAAK2L,YAAY,sB,OAAwB3L,KAAKwI,aAAa,EAAG,GAAG,G,ySAEnDxI,KAAK+I,YAAY,wCAAjB,sBAA0D,sBAAAtJ,EAAA,sEACxGY,QAAQ2I,IAAI,CAAC,EAAKuD,mCAAoC,EAAKC,uBAD6C,cACrB,EAAKhE,aAAa,GADG,SAExG,EAAKiE,mCAFmG,cAE/D,EAAKjE,aAAa,GAF6C,SAGxG,EAAKkE,0BAHmG,OAGxE,EAAKlE,aAAa,EAAG,GAAG,GAHgD,4C,6LAOlFmE,G,oGAAiB3M,KAAK4M,kB,UAAmBpO,YAAE,2BAAD,OAA4BmO,IAC9F5L,EAAQf,KAAK0F,mBAAmBmH,MAAK,SAAAzO,GAAC,OAAIA,EAAEQ,MAASR,EAAEQ,KAAKkO,gBAAkBH,EAAQG,oBAC1F/L,EAAQf,KAAK0F,mBAAmB3E,GAAOA,QAC1B,G,iCAA0Bf,KAAKuB,QAAQ6D,EAAOI,IAAIE,mBAAoBlH,YAAE,CAAEuC,QAAOnC,KAAM+N,K,cAA9EjG,E,OAChBqG,EAAW/M,KAAKgI,IAAImB,YACpB1I,EAAIJ,QAAQ2I,IAAIhF,EAAa/F,KAAI,SAAAiO,GAAC,OAAI,EAAKc,kBAAkBtG,EAAUwF,EAAGa,EAAU7G,S,UAClFA,IAAKqD,a,yBAAoBwD,EAASvD,Q,yBAAe/I,E,iCAChDiG,G,2IAIEuG,GACX/G,IAAKgH,WAAWD,GAChBjN,KAAKiJ,QAAQ,YAAagE,K,gDAIA,OAAOzO,YAAEgB,YAAGQ,KAAK+H,UAAUuC,QAAQ,0BAA0BrM,KAAI,SAAAR,GAAC,OAAIA,EAAEmB,QAAMuO,QAAO,SAAA3B,GAAC,OAAIA,EAAE9C,OAAS,O,8CACvG,MAAO,CAAC,wE,gKAEN1I,KAAK+H,U,SAAoC1H,QAAQ2I,IAAIhJ,KAAKoN,0BAA0BnP,KAAI,SAAAwB,GAAC,OAAIsH,GAAc3H,IAAGK,O,yBAAzF4N,a,WAANzD,I,gNAEVlD,G,yFAAYlI,YAAE,CAACkI,cAAgBA,EAASE,W,wBACnE1F,EAAMyF,GAAyBD,G,SAChB1G,KAAK+H,UAAUuC,QAAQpJ,G,UAAtCoM,E,QACA9P,YAAE8P,G,yCAAgBA,G,cAElBC,EAAM,SAAA9N,GAAC,OAAIA,EAAE+N,QAAO,SAACC,EAAKrP,GAAN,OAAYqP,EAAIC,KAAKtP,EAAEuP,SAAQ1K,YAAG,KACtD2K,E,uCAAS,WAAMjB,GAAN,SAAAlN,EAAA,kEAAiBD,IAAjB,KAAoB5B,IAApB,SAA6BuG,EAAO,MAAO3F,YAAE,kBAAD,OAAmBmO,KAA/D,8CAA4E/N,KAA5E,iCAAkFX,KAAI,SAAA4P,GACjG,IAAIC,EAAQ,SAAArO,GAAC,OAAIA,EAAExB,KAAI,SAAAR,GAAC,MAAK,CAAEkQ,MAAO1K,YAAGxF,EAAEwI,MAAO,IAAKW,YAzKvCxI,EAyKmEX,EAAEsQ,KAzKhEjL,IAAUC,OAAOX,EAAOC,KAAKjE,EAAG,UAArC,IAAAA,MAyKgF4P,EAAc,SAAAvO,GAAC,OAAInB,YAAET,YAAE4B,EAAExB,KAAI,SAAAR,GAAC,MAAI,CAACyB,YAAGzB,EAAEmJ,aAAa,SACjJqH,EAAMH,EAAMD,EAAGI,KAAMC,EAAOJ,EAAMD,EAAGK,MAAOC,EAAQH,EAAYC,GAAMG,EAAMJ,EAAYE,GACxFG,EAAeD,EAAIE,MAAK,SAAA7O,GAAC,OAAI,EAAK2N,0BAA0BmB,SAAS9O,MAErE+O,EAA2B,IAAjBL,EAAMzF,OAAeyF,EAAM,GAAK/O,IAC1CqP,EAAcL,EAAIjB,QAAO,SAAA/P,GAAC,OAAIA,IAAMoR,KAEpCE,GAD+B,IAAvBD,EAAY/F,OAAe+F,EAAY,GAAKrP,IACtC,SAAAK,GAAC,OAAI8N,EAAI9N,EAAE0N,QAAO,SAAA1P,GAAC,OAAIA,EAAEmJ,aAAeF,EAASE,iBAC/D+G,EAAQe,EAAYR,GAAMS,MAAMD,EAAYT,IAC5CW,EAAMrB,EAAIU,GAAKU,MAAMpB,EAAIW,IAC7B,OAAO,2BAAIzP,YAAEoP,EAAI5O,YAAE,eAAnB,IAAkCgP,MAAKC,OAAMP,QAAOiB,MAAKC,gBAAiBR,EAAeS,IAAiBC,WAAepB,EAAQ,EAAKmB,IAAiBE,SAAWF,IAAiBG,eAXxK,2C,gEAaIrB,EAAOlH,EAASE,Y,eAA7BsI,E,yBAEGlP,KAAK+H,UAAUxG,QAAQL,EAAK1C,YAAE,CAAE2Q,aAAc5B,EAAI2B,GAAMA,U,6QAI3DE,EAAW,SAAApJ,GAAI,MAAK,CAAEA,KAAK,GAAD,OAAKA,EAAL,aAC1BqJ,E,uCAAM,WAAMrJ,GAAN,SAAAvG,EAAA,kEAAc7B,IAAd,SAAuB,EAAK0M,QAAQlF,EAAOI,IAAIC,UAAW2J,EAASpJ,IAAnE,0CAA2EsJ,WAA3E,0BAAyF,EAAzF,iF,+DACCD,EAAI,Q,2BAAY,I,4CAAaA,EAAI,U,wBAAc,I,wDAAYrP,KAAK+I,YAAY,sCAAjB,sBAAwD,oCAAAtJ,EAAA,6DACxHyJ,EAAM,EAAKlB,IAAImB,YADyG,SAC3EjD,IAAKC,UAAUyF,SAASxF,OADmD,OAE5H,IADgCmJ,EAD4F,OAC3C7G,EAAS6G,EAAS,GAAG7G,OADsB,WAEnH3H,GAAoC4C,EAAcrC,SAAQ,SAACwH,EAAG5K,GAAJ,OAAUgL,EAAIG,MAAMjE,EAAOI,IAAIsD,GAAI,CAAE/H,QAAOnC,MAAa,IAANV,EAAUsR,SAAWnR,KAAGkR,EAASrR,GAAG6C,UAAjJA,EAAQ,EAAGA,EAAQ2H,IAAU3H,EAAtC,EAASA,GAFmH,OAG5H4C,EAAcrC,SAAQ,SAAA0E,GAAI,OAAIkD,EAAIG,MAAMjE,EAAOI,IAAIC,UAArB,2BAAoC2J,EAASpJ,IAA7C,IAAoDsJ,WAAY5G,QAH8B,UAItHQ,EAAIM,QAJkH,QAK5H7F,EAAcrC,SAAQ,SAACwH,EAAG5K,GAAJ,OAAU,EAAK+K,QAAQH,EAAGyG,EAASrR,GAAGD,KAAI,SAACW,EAAMmC,GAAP,MAAkB,CAAEA,QAAOnC,eALiC,6C,iDAM5GyB,QAAQ2I,IAAIrF,EAAc1F,KAAI,SAAA+N,GAAC,OAAI,EAAKL,YAAYK,O,gJAGrD1D,EAAgBvH,EAAO2H,EAAQC,GAAQL,EAAe,CAAEvH,QAAO2H,OAAQlL,YAAEkL,GAAUA,EAAUC,EAAO5H,EAAQ,c,kFAEtGuH,EAAgBtC,E,EAA8BoJ,EAAU3L,EAAYC,EAAWoD,EAAOoC,EAAKuG,G,+FAAnE/G,E,EAAAA,OAAQ4G,E,EAAAA,WACnDhH,GAAgBtI,KAAK4I,mBAAmBN,EAAgBgH,EAAY5G,GACpE3H,EAAQuO,GAAc,EACtBvC,EAAW7D,GAAOlJ,KAAKgI,IAAImB,YAC3BuG,EAAa7R,YAAE2B,YAAGyF,EAAcvB,GAAWwB,SAASjH,KAAI,SAAAE,GAAC,MAAI,CAACA,EAAGiR,EAASjR,QAC1EwR,E,uCAAQ,WAAOrP,GAAP,SAAAb,EAAA,yDACVsN,EAAS1D,MAAM5F,EAAf,2BAAiC2L,GAAjC,IAA2CE,WAAY5G,EAAQA,YAC1DlL,YAAE0L,GAFG,gCAES6D,EAASvD,QAFlB,OAGNlB,GAAgB,EAAKM,mBAAmBN,EAAgBI,EAAQA,GAAQ,GAC5EpI,IAJU,2C,wEAML,IAAID,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAAd,EAAA,wFAAAA,EAAA,sCAAAA,EAAA,yDACbmQ,EAAMH,GAAavJ,IACnB2J,EAAY,EACZ9O,IAAU2H,EAHG,gCAGWiH,EAAMrP,GAHjB,OAIjB,IAJiB,aAIU,IAAIwP,EAAY/O,IACzC6O,EAAIxG,QAAQpD,EAAZ,sBAAsBxG,YAAGsH,IAAzB,CAAiCgJ,IAAjC,uCAA6C,WAAMlR,GAAN,SAAAa,EAAA,yDAC3CsN,EAAS1D,MAAM3F,EAAf,2BAAgCgM,GAAhC,IAA4C3O,MAAO+O,EAAWlR,UAC1D0J,GAAgB,EAAKM,mBAAmBN,EAAgBuH,EAAWnH,KACjEmH,IAAcnH,EAAS4G,EAHc,gCAGMK,EAAMrP,GAHZ,2CAA7C,uDAIG,SAAAgJ,GAAS9K,YAAE,aAAD,OAAcwH,EAAd,2BAAqClH,YAAEwK,SAL9CvI,EAAQ2H,GAAU,IAJT,GAWZlL,YAAEiS,GAXU,kCAWUvJ,IAAKqD,aAXf,2GAYJhJ,EAAO,EAAD,IAZF,wDAAZ,0D,sMAeawP,EAAWjJ,G,+EAC3BkJ,E,uCAAgB,WAAMhE,GAAN,iBAAAvM,EAAA,gFACA,EAAAyG,IAAKC,WAAU4J,GAAf,oBAA6BvQ,YAAGsH,IAAhC,QAAwCkF,KAAG5F,OAD3C,UACdxH,EADc,QAEdzB,YAAIyB,IAAyB,IAAhBA,EAAK8J,OAFJ,sBAEwB,IAAI7J,MAAJ,6BAAgCkR,EAAhC,YAA6CjJ,EAA7C,MAFxB,iFAGH,GAHG,yD,sDAIhBkF,EAAI,E,eACAA,EAAK,GAAK,I,qCAAegE,EAAchE,G,qDAAMA,IAAM,E,uBACvDiE,EAAMjE,GAAK,EAAGkE,EAAOlE,E,aAClBkE,EAAOD,G,wBAAW/D,EAAI+D,GAAQC,EAAOD,GAAQ,G,UAAcD,EAAc9D,G,oCAAMgE,EAAOhE,E,6BAAc+D,EAAM/D,G,iBAAK+D,EAAM/D,E,2FAC5H1N,YAAE,gBAAD,OAAiB0R,EAAjB,sBAAmCH,I,kBAC7BG,G,gLAGSH,EAAWI,EAAYrJ,G,qFACnCsJ,EAAMpQ,KAAKsI,eAAL,kBAA+ByH,EAA/B,Y,SACJ/P,KAAK+I,YAAL,kBAA4BgH,EAA5B,iCAAgD,gCAAAtQ,EAAA,6DAAcjB,YAAE,gBAAD,OAAiBuR,IAChFX,EAAY,CAAEpJ,KAAMmK,GAAU,UAAOJ,EAAP,YADkB,SAElC,EAAKM,4BAA4BjL,EAAOI,IAAIC,UAAW2J,EAAUe,EAAYrJ,GAF3C,UAEhDwJ,EAFgD,OAGhD9S,YAAE8S,EAAKrK,SAAWzI,YAAE8S,EAAK5H,UAAS4H,EAAK5H,OAAS8G,SAASc,EAAKrK,QAC7DzI,YAAE8S,EAAK5H,QAJwC,iCAIX,EAAK6H,gBAAgBR,EAAWjJ,GAJrB,OAI/BwJ,EAAK5H,OAJ0B,gCAKtC,EAAK8H,mBAAmBJ,EAAKL,EAAWO,EAAMlB,EAAUhK,EAAOI,IAAIC,UAAWL,EAAOI,IAAIuK,GAAYjJ,GAL/D,eAKhDrG,EALgD,iBAM9CyF,IAAKqD,aANyC,yBAMrB9I,EANqB,6C,uBAQhDT,KAAK+I,YAAL,iBAA2BgH,EAA3B,iCAA+C,sBAAAtQ,EAAA,kEAAY,EAAZ,KAAyBsQ,EAAzB,SAA2C,EAAK/H,IAAI4D,OAAOxG,EAAOI,IAAIuK,IAAtE,iDAAiB9G,QAAjB,kE,sMAGrBxF,EAAY2L,EAAUe,EAAYrJ,G,uFACxDwI,WAAY,G,KAAM1R,I,SAASoC,KAAKsK,QAAQ7G,EAAY2L,EAAUe,GAAU,sBAAK,sBAAA1Q,EAAA,0FAAkB2P,GAAlB,aAAoCI,SAApC,SAAmDtJ,IAAKuK,QAAQN,EAAYrJ,GAA5E,oDAA4B4B,OAA5B,+F,0OAGvEhC,E,EAAqCwC,EAAKuG,GAAY,IAAD,OAAzChM,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,UACpC0L,EAAW,CAAEsB,WAAYhK,EAAS3F,OAAS+F,EAAQ,CAACJ,EAAS9H,MACjE,OAAO,IAAIyB,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAAd,EAAA,sDAA6B,IAC9CgQ,EAAUrG,QAAQ3F,EAAYqD,EAA9B,uCAAqC,WAAM4B,GAAN,SAAAjJ,EAAA,kEACnCa,EADmC,SACrB,EAAKkQ,mBAAmBpR,IAAGsE,EAAW,CAAE4L,WAAY,EAAG5G,OAAQ8G,SAAS9G,IAAW0G,EAAUhK,EAAOI,IAAI/B,GAAa2B,EAAOI,IAAI9B,GAAYoD,EAAOoC,EAAKuG,GADnI,6EAArC,uDAEG,SAAAnG,GAAG,OAAI9K,YAAE,yCAAD,OAA0CiF,EAA1C,YAAwDC,EAAxD,0BAAmFgD,EAAS9H,KAA5F,aAAqGE,YAAEwK,QAClH,MAAMA,GAAO/I,EAAO+I,GAJH,2CAAZ,2D,yFAOuBhB,E,0FAAkB7E,E,EAAAA,WAAYC,E,EAAAA,U,SAAqB1D,KAAK+I,YAAL,wCAAkDrF,EAAlD,2BAAgE,gDAAAjE,EAAA,6DACjJjB,YAAE,QAAD,OAASiF,EAAT,aAAwBC,EAAxB,MADgJ,SAEzF,EAAKiN,8BAA8BlN,EAAYC,EAA/C,OAFyF,OAKjJ,IALiJ,SAE3I4L,EAF2I,EAE3IA,WAAY5G,EAF+H,EAE/HA,OAAQkI,EAFuH,EAEvHA,oBACtBC,EAAKvB,EAAYwB,EAAY,EAAK/I,UAAUuC,QAAQ,sBAAuByC,EAAW,EAAK/E,IAAImB,YAAa0G,EAAY,EAAGpP,EAAIJ,QAAQC,UAAW8P,EAAM9H,EAC5JI,EAASoI,EAAUpI,OAJ8H,aAK3H,IAAIpD,EAAI7E,EACxBsQ,EAAI,EAAK/D,kBAAkB8D,EAAUD,KAAO,CAAEpN,aAAYC,aAAaqJ,EAAU7G,KACrFzF,EAAI,sBAAC,sBAAAhB,EAAA,sEAAoB6F,EAApB,uBAAmCyL,EAAnC,OAAsC,EAAKnI,mBAAmBwH,IAAOP,EAAWnH,GAAhF,0CAAD,IAFCmI,EAAKnI,GAAS,IAL4H,iBAS3IxC,IAAKqD,aATsI,yBASlH9I,EATkH,eAUjJ,EAAKmI,mBAAmBwH,EAAKS,EAAInI,GAVgH,UAW3IxC,IAAKqD,aAXsI,eAWxH/K,YAAE,QAAD,OAASkF,EAAT,qBAXuH,UAY3IqJ,EAASvD,QAZkI,WAYzHhL,YAAE,QAAD,OAASkF,EAAT,oBACrBmN,IAAOvB,EAbsI,kCAapH,EAAK/N,QAAQ6D,EAAOI,IAAIC,UAAxB,2BAAwCmL,GAAxC,IAA6DtB,WAAYuB,KAb2C,QAcjJrS,YAAE,QAAD,OAASiF,EAAT,aAAwBC,EAAxB,UAdgJ,6C,sMAiB/GD,EAAYC,EAAWsN,EAAMC,G,8EAC3DL,EAAsB,CAAE5K,KAAK,GAAD,OAAKvC,EAAL,YAAmBC,EAAnB,Y,KACnBuN,G,qCAAqBjR,KAAKgI,IAAIkJ,MAAMD,G,iCAA7CvI,E,UACa9K,I,UAASoC,KAAKsK,QAAQlF,EAAO4L,GAAMvL,UAAWmL,G,2CAAsBtB,W,2BAAc,E,eAA/FA,E,uBACG,CAAEA,aAAY5G,SAAQkI,sBAAqB7P,MAAOuO,I,8LAGpChH,E,EAA2C8D,G,oGAAzB3I,E,EAAAA,WAAYC,E,EAAAA,U,SACA1D,KAAK2Q,8BAA8BlN,EAAYC,EAA/C,MAAiE0B,EAAOI,IAAI9B,I,uBAAzH3C,E,EAAAA,MAAO2H,E,EAAAA,OAAQkI,E,EAAAA,oBACjB1H,EAAMlJ,KAAKgI,IAAImB,Y,mBACEnJ,KAAKgI,IAAI4D,OAAOxG,EAAOI,IAAI9B,I,oBAAayN,MAAMpQ,G,qBAAnE,2BAASwH,EAAkE,QAAMrH,EAAM,CAAEwP,WAAYnI,EAAEmI,WAAY3P,MAAOwH,EAAExH,OACtHqQ,EAAKhF,EAAe7D,EAAE3J,KAAK,IAE3BpB,YAAE4T,GAAOlI,EAAIG,MAAMjE,EAAOO,IAAIjC,GAArB,2BAAqCxC,GAArC,IAA0C+E,MAAOmL,EAAGpO,UAAUV,SAAS+O,IAAS3I,WACtFlK,YAAE,sCAAD,OAAuC+J,EAAE3J,KAAK,KACtDsK,EAAIG,MAAMjE,EAAOO,IAAIF,UAArB,2BAAqCmL,GAArC,IAA0DtB,aAAcvO,KACxEf,KAAK4I,mBAAmBN,EAAgBvH,EAAO2H,G,+CAE3CQ,EAAIM,Q,QACVxJ,KAAK4I,mBAAmBN,EAAgBI,EAAQA,GAAQ,G,iMAG9BI,G,4FAAWzI,QAAQ2I,IAAR,sBAClC/J,YAAE,wBAAwBhB,KAAI,SAAAuN,GAAC,OAAI,EAAKxD,IAAIsJ,MAAMlM,EAAO0D,GAAG0C,QAD1B,YAElCvM,YAAE,wBAAwBhB,KAAI,SAAAuN,GAAC,OAAI,EAAKxD,IAAIqB,MAAMjE,EAAO0D,GAAGrD,UAAW,CAAEO,KAAK,GAAD,OAAKwF,EAAL,WAAiB8D,WAAY,U,0QAGpFjP,QAAQ2I,IAAI1K,YAAE8G,GAAQnH,KAAI,SAAA6K,GAAC,OAAIxK,YAAE8G,EAAO0D,IAAI7K,KAAI,SAAAuN,GAAC,OAAIpG,EAAO0D,GAAG0C,SAAKa,OAAOpO,KAAI,SAAAsT,GAAC,OAAI,EAAKvJ,IAAIsJ,MAAMC,O,8HAEvHhM,EAAO3G,GAAQ,MAAM,GAAN,OAAW2G,GAAX,OAAmBtI,YAAI2B,GAAJ,YAAiBqG,EAAcM,GAAOL,QAAQjH,KAAI,SAAAwB,GAAC,OAAIb,EAAKa,MAAIgF,KAAK,KAArE,KAA+E,M,uEAE1Gc,EAAO3G,G,iFAAqBoB,KAAKgI,IAAIqB,MAAM9D,EAAO3G,G,wNAClD2G,EAAO3G,EAAMwC,G,iFAA2BpB,KAAKgI,IAAI0B,IAAInE,EAAO3G,G,oDAAWwC,G,kCAAoBpB,K,KAAauF,E,UAAanE,I,0CAArBG,Q,yRAE5FyE,EAAM5F,G,iFAAoDiG,GAASjG,G,OAAlDJ,KAAK4H,aAAaE,QAAQ9B,G,OAAkCQ,K,6IAE/E,OAAOxG,KAAK+H,UAAUuC,QAAQ,c,kCAChC,OAAOrH,YAAG,IAAIuO,IAAIxR,KAAKyR,iB,2CAInC,IAFoB,IAAD,OACfzT,EAAIgC,KAAK0R,YAAaC,EAAK3T,EAAE4T,MAAM,KAAMC,EAAc,GAAvD,EAA4E5S,YAAE,eAAehB,KAAI,SAAA6K,GAAC,OAAK,EAAKa,QAAQb,MAAK7K,KAAI,SAAA6T,GAAC,OAAKA,EAAG7T,KAAI,SAAAR,GAAC,OAAIA,EAAEmB,WAAjJ,mBAA4D4H,EAA5D,KAAkEuL,EAAlE,KACKtU,EAAI,EAAGgQ,EAAMxK,YAAG,GAAMxF,EAAIsU,EAAOrJ,SAAUjL,EAAG,CAAE,IAAIuU,EAAcL,EAAGjE,KAAKzK,YAAG8O,EAAOtU,KAAKwU,IAAIN,GAAKE,EAAYlQ,KAAK,CAAC6E,EAAK/I,GAAIgQ,EAAMA,EAAImE,MAAMI,GAAcA,IACpK,IAAIzC,EAAWsC,EAAY5T,KAAI,mCAAE6K,EAAF,KAAKP,EAAL,WAAY,CAAC,IAAKO,EAAGoJ,WAAW3J,EAAEjG,gBACjE5E,YAAG,CAAEmU,cAAatC,WAAU4C,IAAM,IAAI5C,EAASA,EAAS7G,OAAS,GAAG,GAAK,IAAM0J,YAAaF,WAAYjP,YAAG8O,EAAOA,EAAOrJ,OAAS,IAAIuJ,IAAIjU,GAAIsE,cAAgBhB,SAAQ,mCAAEnD,EAAF,KAAKC,EAAL,YAAY,EAAK6K,QAAQ9K,EAAGC,Q,0CAGhLoI,EAAM6L,EAAUC,GAClC,IAD+C,IAAI7R,EAAIT,KAAK6R,YAAa5B,EAAMoC,GAAY,EAAGnC,EAAOoC,GAAc7R,EAAEiI,OAAS,EACvHwH,EAAOD,GAAK,CAAE,IAAI/D,EAAI+D,GAAQC,EAAOD,GAAQ,GAAI,GAAIxP,EAAEyL,GAAG,GAAK1F,EAAQ0J,EAAOhE,MAAU,MAAI+D,EAAM/D,GAAqB,MAAhB+D,EAAM/D,GACpH,OAAOgE,I,6LAIHY,EAAY,GAAIyB,EAAmB,GAAIlF,EAAerN,KAAK+H,UAAUuC,QAAQ,gBAC7E5E,EAAqB1F,KAAK+H,UAAUuC,QAAQ,sBAA2B8F,EAAMpQ,KAAKsI,eAAe,6B,SACvFjI,QAAQ2I,IAAIhF,EAAa/F,IAAb,uCAAiB,WAAMuU,GAAN,SAAA/S,EAAA,sEAAkBY,QAAQ2I,IAAI,CAAC,MAAO,OAAO/K,KAAI,SAAA6K,GAAC,OAAI,EAAKd,IAAI4D,OAAOxG,EAAO0D,GAAG0J,EAAG9O,gBAAnF,mFAAjB,wD,OAAtB6E,E,OACAkK,EAAIlK,EAAEtK,KAAI,SAAAuU,GAAE,OAAIA,EAAGvU,KAAI,SAAAR,GAAC,OAAII,YAAEJ,EAAEQ,KAAI,SAAAuN,GAAC,MAAI,CAACA,EAAEkF,WAAY,cAC5DnI,EAAEjH,SAAQ,SAACkR,EAAI/S,GAAL,OAAW+S,EAAGlR,SAAQ,SAAC7D,EAAGiV,GAAJ,OAAUjV,EAAE6D,SAAQ,SAAAkK,GAAOiH,EAAEhT,GAAGiT,GAAGlH,EAAEkF,YAAY/O,KAAK6J,YAC7EqF,EAAK,E,YAAGA,EAAKnL,EAAmBgD,Q,wBAAgB1I,KAAK4I,mBAAmBwH,EAAKS,EAAInL,EAAmBgD,Q,UACtF1I,KAAK2S,oBAAoBjN,EAAmBmL,GAAKzR,IAAGqT,G,QAArE/L,E,OACJoK,EAAUnP,KAAK,CAAEZ,MAAO2E,EAAmBmL,GAAI9P,MAAO4L,QAASjH,EAAmBmL,GAAIjS,KAAMgU,gBAAiBlM,EAASkM,gBAAiB3Q,oBAAqByE,EAASzE,sBACrKyE,EAAS1E,SAASV,SAAQ,SAAAiH,GAAOgK,EAAiBhK,EAAE3F,OAAQ,K,UAHXiO,E,uBAKnD7Q,KAAKiJ,QAAQ,CAAE6H,YAAW+B,mBAAoB/B,EAAU7S,KAAI,SAAAC,GAAC,OAAIA,EAAE+D,uBAAqBoK,OAAQyG,gBAAiB/U,YAAEsP,GAAc,SAAAjP,GAAC,OAAIA,EAAE+O,QAAO,SAAA5E,GAAC,OAAKgK,EAAiBhK,EAAE3F,cACxK5C,KAAK4I,mBAAmBwH,EAAK1K,EAAmBgD,OAAQhD,EAAmBgD,Q,kNAG3BqK,G,mFAAsBvU,I,SAAQwB,KAAKgI,IAAI0B,IAAItE,EAAOI,IAAIE,mBAAoB,CAAE9G,KAAMmU,GAAc,OAAQ,CAAC,S,4KAApF,EAAgGhS,M,kOAE7I2F,EAAUsM,EAASC,G,6IACrCzV,YAAEkJ,EAAS9H,M,yCAAeQ,K,YAC5BkO,EAAStN,KAAK2J,QAAQlD,GAAmBC,K,uBAC/BlI,YAAE,U,kBAAkB8O,G,UAC7B9P,YAAEkJ,EAAS3F,O,iCAAiCf,KAAKkT,4CAA4C1U,YAAEkI,EAAS9H,O,OAAnF8H,EAAS3F,M,kBAC/BoS,EAAS,CAAEzC,WAAYhK,EAAS3F,OAEhCqS,EAAa,SAAC,GAAD,uBAAExQ,EAAF,KAAQyQ,EAAR,KAAgBC,EAAhB,KAA2BC,EAA3B,KAAmC/Q,EAAnC,WAAmD,CAAEA,UAAWgN,SAAStQ,YAAGsD,IAAaI,OAAMyQ,SAAQC,YAAWC,WAC/HC,EAAW,CAAEhO,IAAK,SAAA/H,GAAC,oBAAMsD,MAAOtD,EAAEsD,OAAUqS,EAAa3V,EAAEmB,QAAW+G,IAAK,SAAAlI,GAAC,MAAK,CAACsD,MAAOtD,EAAEsD,MAAOkF,MAAOhD,YAAGxF,EAAEwI,MAAOoL,IAAS3I,WAC9H+K,EAAa,SAAC,GAAa,IAAD,IAAD,mBAAVhB,EAAU,KAAPC,EAAO,KAAW3R,EAAQ,EAAGA,EAAQiK,KAAK0I,IAAIjB,EAAE/J,OAAQgK,EAAEhK,UAAW3H,EAAO0R,EAAE1R,GAAOkF,MAAQyM,EAAE3R,GAAOkF,MAAO,OAAOwM,IACtHjV,YAAEyV,G,sBAAYA,EAAQhV,KAAI,SAACuU,EAAImB,GAAL,OAAWF,EAAWxU,YAAE,WAAWhB,KAAI,SAAC6K,EAAG0C,GAAJ,OAAWhM,YAAGgT,EAAGhH,GAAG2H,EAAOzC,aAAczS,IAAIL,KAAIK,IAAIuV,EAAS1K,W,yCAC3IzI,QAAQ2I,IAAIhF,EAAa/F,IAAb,uCAAiB,WAAOiO,EAAGyH,GAAV,iBAAAlU,EAAA,yDAC7BmU,EAAchW,YAAG4B,YAAGwT,GAASW,IAAMR,EAAOzC,aACjClT,YAAEoW,GAFkB,qBAEHA,EAFG,mCAEahW,IAFb,SAEsB,EAAKoK,IAAI0B,IAAKtE,EAAOI,IAAK0G,EAAGzI,YAAe0P,GAFlE,0CAE6EzK,OAF7E,2BAEuF,EAFvF,iCAE7BA,EAF6B,UAG1B+K,EAH0B,UAGTpT,QAAQ2I,IAAI/J,YAAE,WAAWhB,IAAb,uCAAiB,WAAM6K,GAAN,qBAAArJ,EAAA,sDACnD,IADoEsR,EAAI,GAAI7H,EAAM,EAAKlB,IAAImB,YAAxC,WAC1CpI,GAAsCgQ,EAAEpP,KAAKvC,KAAI8J,EAAIQ,IAAItE,EAAO0D,GAAGoD,EAAExI,WAApB,2BAAqCyP,GAArC,IAA6CpS,WAAS,SAAAwH,GAAOwI,EAAEhQ,GAASwH,MAAzHxH,EAAQ,EAAGA,EAAQ2H,IAAU3H,EAAQ,EAArCA,GAD0C,gBAE7CmI,EAAIM,QAFyC,gCAEzBuH,EAAE9S,IAAIL,KAAIK,IAAIuV,EAAS1K,KAFE,2CAAjB,wDAHH,yGAAjB,0D,sDADfoG,E,KAAK2E,E,KAQVnN,EAAS2M,OAASzV,YAAG4B,YAAG0P,GAAK,IAAImE,OAE7BS,EAAY,SAAArU,GAAC,OAAI5B,YAAE4B,EAAExB,KAAI,SAAAwU,GAAC,MAAI,CAACA,EAAE7P,KAAM6P,QACvCsB,E,aAAM9R,oBAAqB6R,EAAUD,IAAWhW,YAAE,CAAC,WAAY,eAAeI,KAAI,SAACE,EAAGD,GAAJ,MAAU,CAACC,EAAG2V,EAAU5E,EAAI/B,QAAO,SAAA1P,GAAC,OAAIA,EAAE8V,SAAWzU,YAAEZ,aACzI8V,EAAUjW,YAAEgW,GAAG,SAAA3V,GAAC,OAAI,SAAAX,GAAC,OAAIW,EAAEX,EAAEmF,WAC7BqR,EAAI,CAAEjS,SAAU1C,YAAEyU,EAAE/R,UACtBC,oBAAqB3C,YAAEyU,EAAE9R,qBAAqBkL,QAAO,SAAA1P,GAAC,OAAIuW,EAAQhS,SAASvE,KAAOuW,EAAQE,YAAYzW,MACtGyW,YAAa5U,YAAEyU,EAAEG,aAAa/G,QAAO,SAAA1P,GAAC,OAAIuW,EAAQhS,SAASvE,IAAMuW,EAAQ/R,oBAAoBxE,QAG7F0W,WAAaF,EAAEjS,SAASkC,OAAO+P,EAAEC,aAAaE,MAAK,SAAC3U,EAAGiT,GAAJ,OAAUjT,EAAE+C,UAAYkQ,EAAElQ,aAC3E6R,EAAY,SAAAnW,GAAC,MAAiB,MAAbA,EAAEqV,Q,cACTU,EAAEE,Y,IAAhB,4BAASjW,EAAmB,SAAIoW,UAAYtU,KAAKuU,oBAAoBrW,EAAEsE,W,4CACzDyR,EAAEjS,U,IAAhB,2BAASuG,EAAiB,QAAMiM,EAAaR,EAAQE,YAAY3L,GAAIkM,EAAqBT,EAAQ/R,oBAAoBsG,GACpHA,EAAEkD,OAAU+I,EAAazS,EAAMC,SAAS0S,UAAaD,EAAqB1S,EAAMC,SAAS2S,mBAAqB5S,EAAMC,SAAS4S,OACzHC,EAAU7U,KAAK6R,YAAatJ,EAAEkD,SAAW1J,EAAMC,SAAS0S,UAAaF,EAAWF,UAAYtU,KAAK6R,YAAYnJ,OAAS,GAAG,GACzHoM,EAAY9U,KAAK6R,YAAYtJ,EAAE+L,WAAW,GAC9C/L,EAAEwM,eAAiBxM,EAAEtC,MACrBsC,EAAEyM,aAAgBF,EAAUG,WAAazX,YAAE+K,EAAEtC,OAAU7G,IAAImJ,EAAEtC,MAAM2L,MAAMiD,EAAQ5C,IAAI6C,IACrFvM,EAAEvF,UAAYuF,EAAEtC,MAAQsC,EAAEyM,a,4CAEdf,EAAEC,a,IAAhB,2BAASgB,EAAT,QAA6B7X,YAAEA,YAAE6X,EAAG,CAAEC,QAASnB,EAAQhS,SAASkT,KAAMzW,YAAEyW,EAAEC,QAASlW,YAAE,iC,4CACtEgV,EAAEhS,qB,IAAjB,4BAASmT,EAAT,SAAyC3J,OAASuI,EAAQE,YAAYkB,GAAMrT,EAAME,oBAAoBoT,UAAYtT,EAAME,oBAAoBqT,Q,qCAExIC,EAAY,SAAA9V,GAAC,OAAIA,EAAE+V,SAAS9H,KAAKjO,EAAEgW,WAAW9G,MAAMlP,EAAEiW,cAC1DzB,EAAE0B,YAAc,kBAAM1B,EAAE2B,eAAiB3B,EAAE2B,gBAAmB,WAAQpX,YAAE,uBAEtE,IADA,IAAIqX,EAAiB,GAAIC,GAAa,EAAGrI,EAAM,CAAE+H,SAAUvS,YAAG,GAAIwS,UAAWxS,YAAG,GAAIyS,YAAazS,YAAG,IAC3F4N,EAAK,EAAGA,EAAKoD,EAAEE,WAAWzL,SAAUmI,EAAI,CAC/C,IADiD,IAAI3S,EAAI+V,EAAEE,WAAWtD,GAC7DkF,EAAK/K,KAAKG,IAAI,EAAG2K,GAAYC,EAAK7X,EAAEoW,YAAayB,EAAI,CAAC,IAAD,cAA4B,EAAKlE,YAAYkE,GAA7C,GAAOvT,EAAP,KAAoBwT,EAApB,KACxDC,EAAQV,EAAU9H,GACtBA,EAAIgI,UAAYhI,EAAIgI,UAAU/H,KAAKuI,EAAMrE,MAAMoE,GAAMrH,MAAMsH,IAC3DJ,EAAelU,KAAKtE,YAAE,CAAEmF,YAAWyT,MAAOV,EAAU9H,IAAQA,IAE9DqI,EAAY5X,EAAEoW,UACVD,EAAUnW,GAAMuP,EAAI+H,SAAW/H,EAAI+H,SAAS9H,KAAKxP,EAAE6W,gBAA0BtH,EAAIiI,YAAcjI,EAAIiI,YAAYhI,KAAKxP,EAAE8W,cAC1H3X,YAAEa,EAAGuP,GAAKwI,MAAQV,EAAU9H,GAE9B,OAAO5P,YAAEoB,YAAE,wCAAwChB,KAAI,SAAAE,GAAC,MAAI,CAACA,EAAI8V,EAAEE,WAAWjQ,OAAO2R,GAAiB5X,KAAI,SAAAR,GAAC,MAAI,CAAC,IAAKA,EAAE+E,UAAW0T,YAAkBzY,EAAEU,aAZ1F,I,kBAevD6B,KAAK+H,UAAUxG,QAAQkF,GAAmBC,GAAWuN,I,4LAGvCvN,G,iEACrB,IACEA,EAASyP,kBAAoBC,YAAmB1P,EAAS2M,QAAQ,GACjE3M,EAASE,WAAayP,YAAmB3P,EAAS2M,QAClD3M,EAAS4P,UAAYpU,EAA0BwE,EAAS3F,OAAS,MAAQ,KACrE2F,EAASyP,kBAAkBrJ,gBAAkBpG,EAAS9H,KAAKkO,eAAetO,YAAE,aAAD,OAAckI,EAAS3F,MAAvB,kCAAsD2F,EAAS9H,KAA/D,gBAA2E8H,EAASyP,oBACnK,MAAO7M,GAAO5C,EAAS6P,QAAU,GAAI7P,EAAS8P,MAAQ,MAAO9P,EAAS4P,UAAY,M,wIAGtE5P,GAAY,OAAO1G,KAAK2H,aAAajB,GAAYlJ,YAAEwC,KAAK2H,aAAajB,IAAa1G,KAAK2H,aAAajB,GAAY1G,KAAK2S,oBAAoBjM,K,0JAEjI1G,KAAKgI,IAAIyO,Q,2GA7WhBC,KAmXf9X,GAAO,IAAIsI,K,6wjjBCzcFwP,EAAb,WACE,WAAYC,EAAgBC,EAAkBC,GAAW,IAE9CtO,EAF6C,2BACtDlL,YAAE2C,KAAM,CAAE2W,iBAAgBC,qBAC1BvZ,YAAE2C,MAAOuI,EAAmFuO,aAAaC,QAAQ/W,KAAK2W,iBAApGtZ,YAAEO,YAAGiZ,GAAWpY,YAAEM,KAAK+F,MAAMyD,GAAI,EAAKqO,mBAAqBhZ,YAAGiZ,IAHpF,sDAQIC,aAAaE,QAAQhX,KAAK2W,eAAgB7X,YAAEL,YAAEuB,KAAMA,KAAK4W,wBAR7D,M,gCCHA,iFAEIvF,EAAW,mEAEf4F,YAAUC,OAAO,CAAE7F,aAEnB,IAAIpO,EAAK,SAAC7E,EAAGsU,GAAJ,OAAU,IAAIuE,YAAU7Y,EAAGsU,K,+OCApC9Q,EAAOC,MAAQC,IAER,IAAIiJ,EAAgB,6CAIvBoM,EAAM,IAFE,WAAYA,GAAM,oBAACnX,KAAKoX,UAAYvZ,YAAEsZ,EAAIhK,QAAO,SAAA1P,GAAC,MAAe,aAAXA,EAAEuT,QAAqB/S,KAAI,SAAAR,GAAC,MAAI,CAACA,EAAEuI,KAAMvI,OAEjG,CAAQ4Z,EAAYF,KAGxBG,E,WACJ,aAAe,oBAACtX,KAAKuX,MAAQ,G,gDACzBC,EAAQpT,EAAQE,EAAQmT,EAAWC,GAAW1X,KAAKuX,MAAM5V,KAAM,CAAE6V,SAAQpT,SAAQE,SAAQmT,YAAWC,c,uEAC1FC,G,kFAIRJ,EAAQvX,KAAKuX,MAAMtZ,KAAI,SAAC2Z,EAAG1Z,GAC7B,IAAIgO,EAAIiL,EAAIC,UAAUQ,EAAExT,QACxB,MAAQ,CAAEoT,OAAQI,EAAEJ,OAAQpR,KAAK,CAAD,UAAMwR,EAAExT,OAAR,YAAkB8H,EAAE2L,OAAO5Z,KAAI,SAAAR,GAAC,OAAIA,EAAEuT,QAAMvM,KAAK,KAAjD,aAA0DyH,EAAE4L,QAAQ7Z,KAAI,SAAAR,GAAC,OAAIA,EAAEuT,QAAMvM,KAAK,KAA1F,yBAAsGmT,EAAEtT,SAASyT,QAAS7L,EAAE4L,QAAQ7Z,KAAI,SAACR,EAAGkW,GAAJ,MAAU,CAAC,GAAD,OAAIzV,EAAJ,YAASyV,GAAKtV,Y,SAG7K2Z,YAAUT,EAAO,CAAEI,SAAQM,iBAAkB,+C,OAA9DC,E,OACAC,EAAUva,YAAGA,YAAGsa,GAAUC,SAASC,SAEvCpY,KAAKuX,MAAMjW,SAAQ,SAACsW,EAAG1Z,GACrB,IACIoH,EADI6R,EAAIC,UAAUQ,EAAExT,QACd0T,QAAQ7Z,KAAI,SAACR,EAAGkW,GACxB,IAAI5C,EAAIoH,EAAQ,GAAD,OAAIja,EAAJ,YAASyV,IAExB,OADI/V,YAAGmT,GAAGsH,OAAQtH,EAAI9N,YAAG8N,EAAEsH,KAAKlH,MAAM,GAAI,IAAI7O,YACvCyO,KAGT,OAAO6G,EAAEH,UAAuB,IAAbnS,EAAEoD,OAAepD,EAAE,GAAKA,M,8GAmCtCY,EAAO,I,mGA7BLoS,GAAM,IAAD,OACdjb,YAAE2C,KAAM,CAAEsY,MAAKC,UAAW,GAAIC,QAAS,EAAGC,iBAAkB,EAAGC,cAAe,GAAIC,YAAY,EAAOC,SAAU,GAAIC,YAAa,EAAGC,OAAQ,EAAGC,UAAW,GAAIC,YAAa3Y,QAAQC,YAClLN,KAAKyK,KAAO,IAAIwO,IAAK,IAAmC,IAA9BjZ,KAAKsY,IAAIY,QAAQ,SAAiBD,IAAKE,UAAUC,kBAAoBH,IAAKE,UAAUE,cAAcrZ,KAAKsY,IAAK,CAAEgB,QAAS,OACjJtZ,KAAKmG,QAAU,kBAAO,IAAI,EAAKsE,KAAKjF,IAAI+T,SAASlC,EAAYF,IAAKpM,EAAe,CAAE1I,KAAM,EAAKA,OAASmX,W,8BAGjG7M,GAAW3M,KAAKqC,KAAOsK,I,uEAEjB8M,G,iGAAyB,EAAAvT,EAAKC,WAAUsT,EAAGrV,QAAlB,oBAA6B5E,YAAGia,EAAGnV,UAAS8B,O,iGAA+B,CAAEkD,IAAG,O,6IAE/GlF,EAAQE,EAAQmT,EAAWC,GAAY1X,KAAKuY,UAAU5W,KAAM,CAAEyC,SAAQE,SAAQmT,YAAWC,c,2JAE3FgC,EAAQ,IAAIpC,E,cACDtX,KAAKuY,UAAUpH,MAAM,EAAGnR,KAAK+Y,Y,IAA5C,2BAASU,EAAT,QAAwDC,EAAMC,IAAI5O,EAAe0O,EAAGrV,OAAQ5E,YAAGia,EAAGnV,QAASmV,EAAGhC,UAAWgC,EAAG/B,S,qCAC5H1X,KAAKuY,UAAYvY,KAAKuY,UAAUpH,MAAMnR,KAAK+Y,W,SACrCW,EAAMjJ,QAAQzQ,KAAKsY,K,8PAGOtY,KAAKuY,UAAU7P,OAAS,G,mBAElD1I,KAAK4Y,SAASlQ,SAAW1I,KAAK6Y,Y,gCAAqB7Y,KAAK4Y,SAAS,G,OAAI5Y,KAAK4Y,SAASgB,Q,OACnF5Z,KAAK4Y,SAASlQ,OAAS1I,KAAK6Y,aAAara,YAAE,MAAD,OAAOM,YAAE,CAAE4J,OAAQ1I,KAAK4Y,SAASlQ,OAAQmR,IAAK7Z,KAAK6Y,gBACjG7Y,KAAK4Y,SAASjX,KAAK3B,KAAK8Z,gB,6RAID,IAAIzZ,SAAQ,SAACC,EAASC,GAAa,IAAMwZ,YAAW,kBAAMzZ,EAAQ,EAAK0Z,sBAAqB,GAAM,MAAO1Q,GAAO/I,EAAO+I,O,6JCtEpJ,geAYI2Q,EAAyB,CAAEC,QAAS,cAAeC,SAAU,gBAE7DC,EAAe,SAACC,GAAD,OAAeC,EAAMC,SAASC,EAAMC,mBAAmBJ,EAAU5V,KAAK,QAOrFiW,EAAuB,SAAArH,GAAM,OADb,SAAAA,GAAM,OAAIsH,EAAUtH,GAAQ/Q,SAAS,OAAO6O,OAAO,IAClCyJ,CAFtB,SAAAxc,GAA8C,IAAvC,IAAIsU,EAAImI,EAAOzY,OAAO0Y,MAAM1c,EAAEsK,QAAkBxK,EAAI,EAAGA,EAAIwU,EAAEhK,SAAUxK,EAAGwU,EAAExU,GAAKE,EAAEF,GAAI,OAAOwU,EAEjEqI,CAASC,EAAUC,iBAAiB5H,GAAQ,GAAOlC,MAAM,MACxG+J,EAAuB,SAACC,EAAQC,GAAT,OAAqBC,EAAcC,SAASC,MAAM,CAAEJ,SAAQC,YAAWzO,SAC9F6O,EAAsB,SAAAC,GAAY,OAAIJ,EAAcK,OAAOC,cAAcF,GAAcG,WAEvFC,EAAa,SAAC3a,EAAK4a,EAAUC,GAAhB,OAA+BC,EAAMC,QAAQ/a,GAAK,EAAM4a,EAAUC,IAC/EG,EAAmB,SAAC7B,EAAWyB,EAAUC,GAC3C,IAAII,EAAO/B,EAAaC,GACxB,OAAQxc,YAAEoB,YAAE,wBAAwBhB,KAAI,SAAAE,GAAC,MAAI,CAACA,EAAG0d,EAAWM,EAAKhe,GAAI2d,EAAUC,SAE7EK,EAAgB,SAACC,EAAeP,EAAUC,GAA1B,OAA0Che,YAAEse,GAAe,SAAAje,GAAC,OAAI4d,EAAMM,QAAQle,EAAG0d,EAAUC,OAC3GQ,EAAgB,SAAAJ,GAAI,OAfA,SAAAA,GAAI,OAAIpe,YAAEkc,GAAwB,SAAA7b,GAAC,OAAI+d,EAAKK,WAAWpe,MAenCqe,CAAkBN,GAAMjC,QAhB1BwC,OAAO5T,GAAK,GAAG4T,OAAOjK,GAAK,GAAhD,IAAO3J,EAAG2J,GAiB3BkK,EAAqB,SAAAR,GAAI,OAAII,EAAcJ,GAAMP,WACjDgB,EAAsB,SAAAT,GAAI,OAAII,EAAcJ,GAAM5R,YAElDsS,EAAU,SAAAzf,GAAC,MAAuB,OAAlBA,EAAE+T,MAAM,EAAG,GAAe/T,EAAE+T,MAAM,GAAK/T,GACvDgZ,EAAqB,SAAC0G,EAAWC,GAAZ,OAAwBA,EAAS,KAAO,IAAMrC,EAAqBc,EAAoBX,EAAOzY,OAAOC,KAAKwa,EAAQC,GAAY,UACnJzG,EAAqB,SAAAyG,GAAS,OAAI5B,EAAqBM,EAAoBX,EAAOzY,OAAOC,KAAKwa,EAAQC,GAAY,UAClHE,EAAgB,SAAA9H,GAAC,OAAKoF,EAAM2C,gBAdLC,EAcyChI,EAAE3K,WAAWA,WAdrC8Q,EAAcK,OAAOuB,eAAeC,GAAe3S,YAcD2K,EAAEiI,UAAU5S,YAd/E,IAAA2S,GAevBE,EAAoB,kBAAMne,YAAEub,EAAM6C,sB,6ICnClCC,EAAa,SAAC/X,EAAO3G,EAAMsG,GAAd,OAA2BsG,EAAuD5M,IAAUsG,GAAWD,IAAcM,GAAOL,SAASjH,KAAI,SAAAE,GAAC,OAAIS,EAAKT,MAAnH+G,GAA8B,IAAnBA,EAAQwD,OAAe8C,EAAE/G,KAAK,IAAM+G,EAApD,IAAAA,GAGtCvD,E,WACJ,WAAYjC,GAAO,oBACjBhG,KAAKgG,KAAOA,EACZhG,KAAKud,UAAYpa,OAAOoa,WAAapa,OAAOqa,cAAgBra,OAAOsa,iBAAmBta,OAAOua,aAAeC,IAC5G3d,KAAK4d,eAAiBza,OAAOya,gBAAkBza,OAAO0a,sBAAwB1a,OAAO2a,iBACrF9d,KAAK+d,YAAc5a,OAAO4a,aAAe5a,OAAO6a,mBAAqB7a,OAAO8a,cAC5Eje,KAAKke,gBAAkBxd,cACvBV,KAAKgK,O,oLAGQhK,KAAKke,gB,SAAyC,IAAI7d,SAAQ,SAACC,EAASC,GAAV,OAAqBlD,YAAE,EAAKkgB,UAAUY,KAAK,EAAKnY,KAAM,GAAI,CACjIoY,QAAS,SAAA3L,GAAC,OAAIlS,EAAO,aAAD,OAAckS,EAAE+E,OAAOhB,SAAU6H,UAAW,SAAA5L,GAAOjU,YAAE,cAAe8B,EAAQmS,EAAE+E,OAAOjR,SACzG+X,gBAAiB,SAAA7L,GAAC,OAAI,sBAAC,8BAAAhT,EAAA,sDAAkB8e,EAAK9L,EAAE+E,OAAOjR,OAAQ/H,YAAE,iBACtDN,EAAI,EADQ,YACLA,EAAIqgB,EAAGC,iBAAiB9V,QADnB,gCACsC6V,EAAGE,kBAAkBF,EAAGC,iBAAiBE,KAAKxgB,IADpF,SAC6BA,EAD7B,uCAEfmC,QAAQ2I,IAAK1J,YAAE2F,KAAgBhH,KAAK,gBAAGsH,EAAH,EAAGA,MAAOL,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,QAASwZ,EAA5B,EAA4BA,cAA5B,OAAgD,IAAIte,SAAQ,SAACC,EAASC,GAC9G,IAAIqe,EAAKL,EAAGM,kBAAkBtZ,EAAQ,CAAEL,QAASA,GAAW,KAAMyZ,cAAeA,IAAkBnhB,YAAE0H,KACrG1F,YAAG2F,GAAS7D,SAAQ,SAAApD,GAAC,OAAI0gB,EAAGE,YAAY5gB,EAAE,GAAIA,EAAE,GAAI,CAAE6gB,OAAQ7gB,EAAE,GAAI8gB,YAAY,OAChFJ,EAAGK,YAAYC,WAAa,WAAQ7gB,YAAE,yBAAD,OAA0BG,YAAEF,YAAEsgB,MAASte,EAAQse,IACpFA,EAAGK,YAAYb,QAAU,kBAAM7d,EAAO,mBAAD,OAAoBgF,EAApB,qBANlB,QAOd/G,YAAE,6BACT8B,EAAQie,GARa,2CAAD,S,YAFoBve,KAAKue,G,YAAbje,Q,8QAcdN,KAAKke,gBAAgB9d,Q,uBAAeJ,KAAKue,GAAG9H,Q,8KACnDzQ,G,iFAAchG,KAAKue,GAAGY,eAAenZ,G,mIAE9CT,EAAO6Z,EAAO7e,GAAU,IAAIsN,EAAK7N,KAAKue,GAAGU,YAAYniB,YAAIyI,GAASA,EAAO,CAACA,GAAQ,aACtF,OAAOlI,YAAEwQ,EAAI,CAAEuQ,QAAS,kBAAoB,OAAbvQ,EAAG2I,OAAmBjW,EAAO,YAAD,OAAa6e,EAAb,gBAA0B7Z,EAA1B,aAAoCsI,EAAG2I,a,4BAE9FjR,EAAO6Z,EAAO7e,GAAU,OAAOP,KAAKqf,MAAM9Z,EAAO6Z,EAAO7e,GAAQ+e,YAAY/Z,K,0BAC9EA,EAAO6Z,EAAOG,EAAOjV,EAASvJ,GAAQ,IAAD,OAAE,OAAO,IAAIV,SAAQ,SAACC,EAASC,GAAa,IAAIqe,EAAK,EAAKY,MAAMja,EAAO6Z,EAAO7e,GACrHlC,YAAE,CAAC0C,QAAOwe,WACTxe,EAAQ6d,EAAG7d,MAAOA,GAAU6d,GAAIQ,GAAOG,GAAOlB,UAAY,SAAA5L,GAAC,OAAInS,EAAQgK,EAAQmI,U,0BAE9ElN,EAAO3G,GAAQ,OAAOoB,KAAKyf,IAAIla,EAAO,MAAO3G,GAAM,kBAAMA,O,0BACzD2G,EAAO3G,GAAQ,OAAOoB,KAAKyf,IAAIla,EAAO,MAAO3G,GAAM,kBAAMA,O,4BACvD2G,EAAO3G,GAAQ,OAAOoB,KAAKyf,IAAIla,EAAO,QAAS3G,GAAM,SAAA6T,GAAC,OAAIA,EAAE+E,OAAOjR,Y,6BAClEhB,EAAO3G,EAAMmC,EAAOmE,GAAW,OAAOlF,KAAKyf,IAAIla,EAAO,SAAW+X,EAAW/X,EAAO3G,EAAMsG,IAAW,SAAAuN,GAAC,OAAIA,EAAE+E,OAAOjR,SAAQxF,K,iCACtHwE,EAAO3G,EAAM8gB,GAAY,OAAO1f,KAAKyf,IAAIla,EAAO,aAAc3G,GAAM,SAAA6T,GAAC,OAAKmF,EAAwBnF,EAAE+E,OAAOjR,SAAvBmZ,EAAS9H,GAAnB,IAAAA,O,iCAC1ErS,EAAO3G,EAAM+gB,GAAU,OAAO3f,KAAK4f,WAAWra,EAAO3G,GAAM,SAAAgZ,GAAW+H,EAAO/H,EAAE3R,QAAQ2R,EAAEiI,gB,0BAChGta,EAAO3G,EAAMmC,EAAOmE,GAAgE,OAArD7G,YAAG,CAACif,WAAYA,EAAW/X,EAAO3G,EAAMsG,KAAoBlF,KAAKyf,IAAIla,EAAO,MAAO+X,EAAW/X,EAAO3G,EAAMsG,IAAU,SAAAuN,GAAC,OAAIA,EAAE+E,OAAOjR,SAAQxF,K,4BACxKwE,EAAO3G,GAAO,IAAD,OAAE,OAAOoB,KAAK0J,IAAInE,EAAO3G,GAAMkhB,OAAM,kBAAM,EAAKnG,IAAIpU,EAAO3G,MAAOmhB,MAAK,kBAAM,EAAKC,IAAIza,EAAO3G,Q,4BAC1G2G,GAAS,OAAOvF,KAAKyf,IAAIla,EAAO,QAASnG,IAAGf,O,kCAEpC,OAAO,IAAI4hB,EAASjgB,U,KAG9BigB,E,WACJ,WAAYjY,GAAM,oBAAC3K,YAAE2C,KAAM,CAAEgI,MAAKkY,WAAY,GAAI9a,OAAQ,GAAI2T,UAAW,O,oDAEjExT,EAAOgO,EAAQ3U,EAAM6Y,EAAWC,GAAU,IAAD,OAC/C1X,KAAKoF,OAAOG,IAAS,EACrBvF,KAAKkgB,WAAWve,KAAK,CAAE4D,QAAOgO,SAAQ3U,OAAM6Y,YAAWC,YACnD1X,KAAKkgB,WAAWxX,OAAS1I,KAAK+Y,YAChC/Y,KAAKmgB,aAAengB,KAAKmgB,aAAe9f,QAAQC,WAAWyf,KAAxC,sBAA6C,sBAAAtgB,EAAA,sEAAkB,EAAK+J,QAAvB,uF,wCAIhD,OAAOxJ,KAAKkgB,WAAWxX,S,wJAGlC1I,KAAKkgB,WAAWxX,OAAS,G,gCAAS,IAAIrI,SAAQ,SAACC,EAASC,GAC7D,IAAIE,EAAI,EAAKyf,WACb,EAAKA,WAAa,GAClB,IAAIrS,EAAK,EAAK7F,IAAIqX,MAAO/gB,YAAE,EAAK8G,QAAU,SAAS,SAAAkE,GAAS9K,YAAE,YAAaA,YAAE,CAAC8K,QAAO/I,EAAO+I,MACxF/C,EAAS,CAAE6Z,OAAQ,EAAGC,UAAW,GAAKpK,EAAQxV,EAAEiI,OACpDjI,EAAEa,SAAQ,SAAA7D,GACR,IACIqU,EADKjE,EAAGyR,YAAY7hB,EAAE8H,OACf9H,EAAE8V,QAAQ9V,EAAEmB,MACvBkT,EAAEuM,UAAY,SAAA5L,GAAO/S,YAAGjC,EAAEga,UAAL/X,CAAgB+S,EAAE+E,OAAOjR,QAAaA,EAAO6Z,UAAW7Z,EAAO8Z,YAAcpK,GAAO3V,EAAQiG,IACjHuL,EAAEsM,QAAU,SAAA3L,GAAOjU,YAAE,aAAD,OAAcM,YAAErB,GAAhB,aAAuBqB,YAAE2T,KAAO/S,YAAGjC,EAAEia,QAALhY,CAAc+S,KAAUlM,EAAO6Z,OAAS7Z,EAAO8Z,YAAcpK,GAAO3V,EAAQiG,U,sJAKlIhB,EAAO3G,GAAQoB,KAAKoJ,QAAQ7D,EAAO,MAAO3G,GAAM,kBAAMA,KAAM,SAAA0K,GAAS9K,YAAE,aAAD,OAAcM,YAAEF,KAAUJ,YAAE,CAAC8K,a,0BACnG/D,EAAO3G,GAAQoB,KAAKoJ,QAAQ7D,EAAO,MAAO3G,GAAM,kBAAMA,KAAM,SAAA0K,GAAS9K,YAAE,cAAeA,YAAE,CAAC8K,a,4BACvF/D,EAAO3G,GAAQoB,KAAKoJ,QAAQ7D,EAAO,QAAS3G,GAAM,SAAA6T,GAAC,OAAIA,EAAE+E,OAAOjR,Y,6BAC/DhB,EAAO3G,GAAQoB,KAAKoJ,QAAQ7D,EAAO,SAAW3G,GAAO,SAAA6T,GAAC,OAAIA,EAAE+E,OAAOjR,Y,0BACtEhB,EAAO3G,EAAM6Y,EAAWC,GAAW1X,KAAKoJ,QAAQ7D,EAAO,MAAO+X,EAAW/X,EAAO3G,GAAO6Y,EAAWC,K,4BAChGnS,EAAO3G,GAAO,IAAD,OAAEoB,KAAK0J,IAAInE,EAAO3G,GAAM,SAAA2J,GAAO,EAAKyX,IAAIza,EAAO3G,MAAU,WAAQ,EAAK+a,IAAIpU,EAAO3G,U,oMCrFhG0hB,E,MAAMC,GAAM,aAKX,SAASC,EAAQC,GACtB,OAAOA,EAAIC,QAAQ,MAAO,IAWrB,SAASC,EAAiBC,EAAOC,GACtC,OAAOC,kBAAgB/d,OAAO6d,EAAOC,GAOhC,SAASE,EAAiBH,EAAOC,GACtC,OAAOC,kBAAgBE,OAAOJ,EAAO,KAAOC,EAAKH,QAAQ,MAAO,KA8B3D,SAAeO,EAAtB,oC,4CAAO,WAAuBC,EAAvB,oCAAAzhB,EAAA,yDAAkC0hB,EAAlC,EAAkCA,GAAI1W,EAAtC,EAAsCA,KAAMkN,EAA5C,EAA4CA,OAAQyJ,EAApD,EAAoDA,MAAOnJ,EAA3D,EAA2DA,iBAAkBoJ,EAA7E,EAA6EA,GAAIC,EAAjF,EAAiFA,kBAChFC,EAtD0B,aAsDYf,EAAQU,IAChDG,EAFC,uBAGHf,EAAI,yBAHD,kBAII,IAAIjgB,SAAQ,SAACC,EAASC,GAa3B,SAASihB,EAAU5iB,GACG,kBAATA,IAAmBA,EAAOA,EAAKA,MAC1C,IAAM6iB,EAAO1iB,KAAK+F,MAAMlG,GACnB6iB,EAAKN,IAAMM,EAAKN,KAAOA,IAC5Bb,EAAI,gCAAiCmB,EAAKN,IAC1CO,aAAaC,GACbN,EAAGO,UAAY,KACfthB,EAAQmhB,EAAKlb,SAnBf8a,EAAGQ,KAAK9iB,KAAKC,UAAU,CACrB8iB,QAAS,MACT1d,OAAQ,WACRE,OAAQ,CACN,CACE4G,GAAI+M,EACJrZ,KAAM2iB,GAERH,GAAS,UAEXD,QAWF,IAAMQ,EAAgB5H,YAAW,WAC3BsH,EAAGO,YAAcJ,IACrBH,EAAGO,UAAY,KACfrhB,EAAO,IAAI1B,MAAM,kCAChByiB,GAEHD,EAAGO,UAAYJ,MAhCd,WAmCI/W,EAnCJ,wBAoCH6V,EAAI,6BApCD,kBAqCI7V,EAAKjF,IAAIY,KAAK,CACnB8E,GAAI+M,EACJrZ,KAAM2iB,KAvCL,eA0CHjB,EAAI,yBA1CD,UA2CuBze,IAAM8V,EAAQ,CACtCvT,OAAQ,OACRO,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAM7F,KAAKC,UAAU,CACnB8iB,QAAS,MACT1d,OAAQ,WACRE,OAAQ,CACN,CACE4G,GAAI+M,EACJrZ,KAAM2iB,GAERH,GAAS,UAEXD,GAAI,MA3DL,eA2CGY,EA3CH,iBA8DmBA,EAAYN,OA9D/B,YA8DGO,EA9DH,SA+DcA,EAAQzb,OA/DtB,uBAgEK,IAAI1H,MAAM,mFAhEf,iCAkEImjB,EAAQzb,QAlEZ,6C,mCC/BD0b,EAA2B,WAC3BC,EAA4B,WAyBlC,IAAMC,E,MAAoBC,IAvBnB,SAA4B7K,GACjC,IAAMhY,EAAS,CACbgY,EAAMtZ,KAAI,gBAAGuZ,EAAH,EAAGA,OAAQpT,EAAX,EAAWA,OAAQie,EAAnB,EAAmBA,KAAnB,EAAyBC,YAAzB,MAA2C,CACnD9K,EACAmD,aAAUvW,GAAQme,OAAO,EAAG,KACzBF,GAAQA,EAAK3Z,OAAS,EACnB8X,EAAQG,EAAiB0B,EAAKpkB,KAAI,SAAAwB,GAAC,OAAIA,EAAE,MAAK4iB,EAAKpkB,KAAI,SAAAwB,GAAC,OAAIA,EAAE,QAC9D,SAaV,OAViBkhB,EACf,CACE,CACE6B,WAAY,CAAC,CAAExR,KAAM,WAAa,CAAEA,KAAM,UAC1ChL,KAAM,OACNgL,KAAM,YAGVzR,MAKkD,sCAAI8iB,EAAJ,yBAAIA,EAAJ,uBAAatjB,KAAKC,UAAUqjB,MAEnE,SAAerK,EAA9B,oC,4CAAe,WAAyBT,EAAOL,GAAhC,uCAAAzX,EAAA,6DACb8X,EAAQxa,MAAMC,QAAQua,GAASA,EAAQ,CAACA,GAElCkL,EAAclL,EAAM/J,QAAO,SAACC,EAAD,GAA6B,IAArBrH,EAAoB,EAApBA,KAAM2R,EAAc,EAAdA,QACjCsK,EAD+C,YACvCjc,GADuC,SAE3D,GAAIic,EAAK3Z,OAAS,EAAG,CAAC,IAAD,gBACIqP,GADJ,IACnB,2BAAgC,CAAC,IAAxB2K,EAAuB,QAE9BjV,EAF8B,YAChBiV,EADgB,OAEnBL,GAHM,+BAMrB,OAAO5U,IACN,IAEH8J,EAAQA,EAAMtZ,KAAI,YAAgC,IAA7BmI,EAA4B,EAA5BA,KAAMoR,EAAsB,EAAtBA,OAAQO,EAAc,EAAdA,QAC5BP,IAAQA,EAASN,EAAOe,kBADkB,kBAEhB7R,GAAxBhC,EAFwC,KAE7Bue,EAF6B,aAGHve,EACzCwe,MAAMX,GACNhkB,KAAI,SAAA2kB,GAAK,OAAIA,EAAMzR,MAAM,GAAI,MALe,mBAGxC0R,EAHwC,KAGxBC,EAHwB,KAMzCC,EAAWF,EAAe1jB,MAAM,KAAKgO,QAAO,SAAAsF,GAAC,QAAMA,KACzDuQ,IACED,EAASra,SAAWia,EAAUja,OADvB,gGAGwB3J,KAAKC,UAAU+jB,GAHvC,0CAIkBhkB,KAAKC,UAAU2jB,GAJjC,gBAOT,IAAMN,EAAOM,EAAU1kB,KAAI,SAACglB,EAAUC,GAAX,MAAmB,CAACD,EAAUF,EAASG,OAC5DZ,EAAgBQ,EAAoBA,EAAkB3jB,MAAM,KAAO,GACzE,MAAO,CACLiF,OAAQA,EAAOwe,MAAMV,GAA2B,GAChDG,OACAC,cACA9K,SACAO,cAIEoL,EAAgBhB,EAAkB5K,GAAO,GAvClC,SAwCc0J,EAAQkC,EAAejM,GAxCrC,OAuEb,IA/BMkM,EAxCO,OAyCPC,EAAkB9L,EACrBtZ,KAAI,qBAAGqkB,eACP9U,QAAO,SAACC,EAAK6V,GAAN,OAAc7V,EAAIvJ,OAAOof,KAAM,IACnCC,EAAiBhM,EACpBtZ,KAAI,qBAAG8Z,WACPvK,QAAO,SAACC,EAAK6V,GAAN,OAAc7V,EAAIvJ,OAAOof,KAAM,IAEzCN,IACEK,EAAgB3a,SAAW6a,EAAe7a,OAC1C,wCAGI8a,EAAsBzC,EAAiB,CAAC,UAAW,WAAYqC,GAC/DK,EAAcD,EAAoB5J,QAClC8J,EAAaF,EAAoBhW,QAAO,SAACC,EAAKsD,GAWlD,OAVAA,EAAEzP,SAAQ,SAAC6W,EAAS+K,GAClB,IAAMtC,EAAQrJ,EAAM2L,GAAKZ,YACnBqB,EAAiB5C,EAAiBH,EAAOzI,GAC/C1K,EAAI9L,KAAJ,MAAA8L,EAAG,YACEkW,EAAe1lB,KAAI,SAAC8S,EAAGmS,GACxB,MAAmB,SAAftC,EAAMsC,GAAyC,SAAjBnS,EAAEzO,WAC7ByO,UAINtD,IACN,IAEGmW,EAAS,CAAEH,cAAarL,SAAU,GAAIyL,YAAa,IAEhD3lB,EAAI,EAAGA,EAAIwlB,EAAWhb,OAAQxK,IAAM,EAAD,YAChBqlB,EAAerlB,GADC,GACnC8H,EADmC,KAC7B8d,EAD6B,KAE1CF,EAAOxL,SAASpS,GAAQ0d,EAAWxlB,GACnC0lB,EAAOC,YAAY7d,QAAsB3G,IAAdykB,EAA0BA,EAAUJ,EAAWxlB,IAAMwlB,EAAWxlB,GA1EhF,yBA6EN,CAAEia,QAASyL,EAAQnB,gBA7Eb,6C,8PCxDf,qLAEIsB,EAAYnkB,YAAS,cACrBokB,EAAiBpkB,YAAS,wBAC1BqkB,EAAYrkB,YAAS,sBACrBkP,EAAmBlP,YAAS,gCAG5BskB,EAAa,SAAAzmB,GAAC,OAAIkC,YADJ,SAAAlC,GAAC,OAAI6B,YAAE7B,GAAG,GACU0mB,CAAY1mB,IAAI,IACtDe,YAAE,CAACsQ,sB,gCCTH,yHAEIsV,EAAOnhB,YAAG,IAAIuO,IAAI,GAElB6S,EAAqB,SAAAjnB,GAAC,OAAII,YAAEJ,GAAKA,EAAE6U,IAAImS,GAAM9hB,WAAalD,KAC1DklB,EAAc,SAAAlnB,GAAC,OAAIA,EAAEkF,YACrB4T,EAAoB,SAAA9Y,GAAC,OAAII,YAAEJ,GAAKA,EAAE6U,IAAImS,GAAMG,SAASnnB,GAAKgC,M,wECN9D,gGAIIolB,EAAmB,CAAE7e,IAAK8e,IAA2Bjf,IAAKif,KAC1DC,EAAmB,CAAE/e,IAAK,IAAI1E,IAAauE,IAAK,IAAIvE,KAEpD0jB,EAAyB9mB,YAAEoB,YAAE,WAAWhB,KAAI,SAAAE,GAAC,MAAI,CAACA,EAAG,SAAAkV,GAAM,OAAIqR,EAAiBvmB,GAAGmM,QAAQ+I,GAAQ,kBAAMmR,EAAiBrmB,GAAGkV,YAC7HgD,EAAqBsO,EAAuBhf,IAC5CyQ,EAAqBuO,EAAuBnf,K,8NCF5CnI,GANMN,MAAMC,QAMRM,OAAOC,QAGXC,EAAI,SAAAC,GAAC,MAAiB,qBAANA,GAChBC,EAAI,SAAAR,GAAC,OAAII,OAAOK,QAAQC,EAAGV,KAC3BW,EAAIP,OAAOQ,YACXC,EAAI,SAACb,EAAGc,GAAJ,OAAUH,EAAEH,EAAER,GAAGe,KAAI,WAASC,GAAT,uBAAEC,EAAF,KAAKC,EAAL,WAAe,CAACD,EAAGH,EAAEI,EAAGD,EAAGD,EAAGhB,SAGvDmB,EAAI,SAAAZ,GAAC,OAAIA,GACTa,EAAIhB,OAAOiB,KAKXO,EAAIC,KAAKC,UAETI,OAAIC,EACJC,EAAIhC,OAAOiC,OAIXC,EAAK,SAAAC,GAAC,OAAIA,GAAK,IAEfC,EAAK,SAAA1B,GAAC,OAAIA,GAAM,cAChBJ,EAAK,SAAAV,GAAC,OAAIA,GAAK,IACfgC,EAAK,SAAA9B,GAAC,OA5BA,SAAAA,GAAC,MAAiB,kBAANA,EA4BRD,CAAIC,GAAKA,EAAI,IAIvBuC,EAAkB,SAACxB,EAAGC,GAAQ,IAAIlB,EAAI,GAAc,OAAVA,EAAEiB,GAAKC,EAAUlB,G,ycC5BpD0nB,GAAiB,CAC1BC,eAAgBC,KAChBC,YAAaC,KACbC,SAAUC,KACVC,SAAUC,KACVC,cAAeC,KACfC,cAAeC,KACfC,OAAQC,KACRxb,MAAOyb,MCVNC,GAAkB,SAAApjB,GAAS,OAAIA,GALjB,SAAAqjB,GACf,IAAIC,EAAa,SAAA1oB,GAAC,OAAkB,IAAbA,EAAEsL,OAAgB,IAAMtL,EAAIA,GAE/CmL,EAAIxK,YADE,CAAEgoB,KAAM,UAAWC,MAAO,QAASC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,UAAWC,OAAQ,UAAWC,QAAQ,IAC7G,SAACjoB,EAAGD,GAAJ,OAAU,IAAImoB,KAAKC,eAAe,KAAxB,aAAgCF,QAAQ,GAAU1mB,YAAgBxB,EAAGC,KAAMooB,OAAOX,MAC3G,MAAM,GAAN,OAAUtd,EAAEyd,MAAZ,YAAqBzd,EAAE0d,IAAvB,aAA+B1d,EAAEwd,KAAjC,YAAyCD,EAAWvd,EAAE2d,MAAtD,YAA+DJ,EAAWvd,EAAE4d,QAA5E,YAAuFL,EAAWvd,EAAE6d,SACvDK,CAAW,IAAIvmB,KAAK,IAAOsC,K,SCStEkkB,GAAa,CACflkB,UAAW,OAAQyD,MAAO,QAASrD,KAAM,iBAAkB4S,SAAU,WAAYE,YAAa,cAAe7C,mBAAoB,sBAAuB8T,qBAAsB,yBAA0BC,aAAc,gBAAiBC,EAAG,IAIxOC,GAAY,SAAA1pB,GAAC,OAAI8B,EAAG9B,GAAGsjB,QAAQ,KAAM,KAAKqG,QAExCC,G,kDACJ,WAAYvmB,EAAGrD,EAAG6pB,GAAO,IAAD,6BAAE,cAAMxmB,GAAIpD,EAAE,eAAM,CAAE6pB,MAAM,eAAK9pB,GAAI+pB,KAAM,GAAI3lB,UAAW,KAAO,EAAK4lB,SAASloB,EAAG+nB,IAAlF,E,qDACb,OAAOjnB,KAAKqnB,IAAIrnB,KAAKsnB,MAAOtnB,KAAKknB,S,0BACxCzmB,EAAGrD,GAAK,OAAO,gC,+BACVmqB,GAAsBvnB,KAAKmnB,KAAOtpB,EAAE0pB,EAAmBpoB,MAAM,KAAKlB,KAAI,SAAAE,GAAC,MAAI,CAACA,EAAGqpB,IAAMC,mB,qCAC/EC,GAAYlqB,EAAEwC,KAAKsnB,MAAMK,YAAW3nB,KAAKsnB,MAAMK,SAASC,QAAUF,K,0CAC3D1nB,KAAK6nB,eAAe7nB,Q,6CACjBA,KAAK6nB,eAAezoB,GAAtB,oBAAwCY,KAAKwB,WAA7C,IAA0B,oCAAgCsmB,UAA1D,8BAAoE9nB,KAAK+nB,WAAY,I,iCACjG5pB,EAAGC,EAAG4pB,GACjBhoB,KAAKioB,SAAStoB,EAAgBxB,EAAGC,M,yCACdQ,EAAMsC,EAAKJ,GAAU,IAAD,OAAEd,KAAKkoB,gBAAgBtpB,EAAMsC,GAAK,SAAAqH,GAAY,EAAKwf,WAAW,EAAKI,WAAWjnB,EAAKqH,KAAMzH,K,sCAChHlC,EAAMsC,EAAKL,EAAUC,GAAWd,KAAKwB,UAAUG,KAAK/C,EAAKmJ,UAAUqgB,MAAMlnB,EAAKL,EAAUC,Q,GAXvF0mB,IAAMa,WAcnBC,G,kDAAwB,WAAY7nB,GAAI,IAAD,6BAAE,cAAMA,GAAIpD,EAAE,EAAK6pB,MAAO,CAAEqB,WAAY,IAAM7oB,EAAGe,EAAE+nB,UAAL9oB,CAAgB,EAAKwnB,MAAMqB,YAAzE,E,0DAC7BA,GAAa,IAAD,OAAMvoB,KAAKknB,MAAMqB,aAAeA,GAAYvoB,KAAKioB,SAAS,CAAEM,eAAc,kBAAM7oB,EAAG,EAAK4nB,MAAMkB,UAAd9oB,CAAyB6oB,Q,0BAC/H9nB,EAAGrD,GAAI,IAAD,OAAE,OAAO,kBAACqrB,EAAA,EAAD,CAAaC,UAAU,YAAW,kBAACC,EAAA,EAAD,CAAYC,IAAKnoB,EAAEooB,YAAczpB,EAAG0pB,aAAW,GAAG9iB,KAAK,GAAGC,MAAO7I,EAAEmrB,WAAY1nB,SAAU,SAAA4R,GAAC,OAAI,EAAKsW,cAAgBvZ,SAASiD,EAAE+E,OAAOvR,UACtLzG,EAAGiB,EAAE6K,SAASrN,KAAI,SAACR,EAAGS,GAAJ,OAAU,kBAAC8qB,EAAA,EAAD,CAAkB9nB,IAAKhD,EAAG+H,MAAO/H,EAAGkhB,MAAO3hB,EAAGwrB,QAAS,kBAACC,EAAA,EAAD,iB,GAHlElC,IAOvB,IAAImC,GAAU,CAAEC,eAAgB,CAAEC,OAAQ,EAAGC,KAAM,gBAAiBC,OAAQ,EAAGC,QAAS,EAAGC,SAAU,SAAUC,QAAS,EAAGC,SAAU,WAAYC,IAAK,GAAIC,MAAO,IAC7JC,GAAUX,GACRY,G,kKACAtpB,EAAGrD,GAAI,IACD4sB,EAA2EvpB,EAA3EupB,iBAAkBC,EAAyDxpB,EAAzDwpB,MAAOC,EAAkDzpB,EAAlDypB,QAASC,EAAyC1pB,EAAzC0pB,YAAaC,EAA4B3pB,EAA5B2pB,SAAUC,EAAkB5pB,EAAlB4pB,cAEjE,OAAO,kBAACC,EAAA,EAAD,KAAW,kBAACC,EAAA,EAAD,KACf9pB,EAAE+pB,UAAY,kBAACC,EAAA,EAAD,CAAWf,QAAQ,YAAW,kBAACgB,EAAA,EAAD,CAAUC,cAAeR,EAAc,GAAKA,EAAcC,EAAUQ,QAASR,EAAW,GAAKD,IAAgBC,EAAUvpB,SAAUmpB,EAAkBa,WAAY,CAAE,aAAc,0BAA0C,KACrQrrB,EAAGiB,EAAEkE,SAAS1G,KAAI,SAAC8V,EAAG7V,GAAQ,IAHN4sB,EAGUC,EAAgB,CAAC,MAAO,QAAQ,GAAOb,IAAYhsB,EAAI+rB,EAAQ,GAChG,OAAO,kBAACQ,EAAA,EAAD,CAAWvpB,IAAKhD,EAAG8sB,MAAOjX,EAAEkX,aAAcvB,QAAS3V,EAAEmX,eAAiB,OAAS,UAAWH,cAAeA,GAC9G,kBAACI,EAAA,EAAD,CAAgBC,OAAQlB,IAAYhsB,EAAGmtB,UAAWN,GAAiB,MAAOO,SALrDR,EAKgF5sB,EALnE,SAACqtB,GAAYlB,EAAcS,EAAUS,MAMpExX,EAAEyX,QAAStB,IAAYhsB,EAAI,0BAAMutB,MAAOtC,GAAOC,gBAA2B,IAAVa,EAAc,oBAAsB,oBAA6B,gB,GAT1HjD,IAgBd0E,G,kDACJ,WAAYjrB,GAAI,IAAD,8BAAE,cAAMA,IAASymB,MAAQ,CAAEyE,KAAM,EAAGC,YAAa,EAAGhB,QAAS,GAAIrC,WAAY,KAAMsD,UAAW,GAA9F,E,gDACXprB,EAAGrD,GAAI,IAAD,OACJuH,EAAUlE,EAAEkE,SAAWrG,EAAEV,EAAG4B,EAAGiB,EAAE7B,MAAM,KAAKX,KAAI,SAAA8V,GAAC,MAAK,CAAEqL,MAAOrL,EAAGyX,QAASzX,MAC3E+X,EAAOtsB,EAAGiB,EAAE7B,MAAMX,KAAI,SAACsK,EAAGwjB,GAAJ,oBAAeA,OAAQxjB,MAC7C/K,EAAEJ,EAAE4uB,cAAaF,EAAOA,EAAK1X,MAAK,SAAC3U,EAAGiT,GAAQ,IAAIqB,EAAIpP,EAAQvH,EAAE4uB,YAC9DvuB,GAAKsW,EAAEkY,SAAY,SAACxuB,EAAGqU,GAAJ,OAAWrU,IAAMqU,EAAI,EAAKrU,EAAIqU,GAAK,EAAI,IAAMrS,EAAEsU,EAAEqL,OAAQ1M,EAAEqB,EAAEqL,QACpF,MAAO,CAAC3hB,GAAIA,GAAGL,EAAEyuB,eAEnB,IA5BUpsB,EAAGysB,EA6BTC,EAAI,SAAC5jB,EAAGvK,GAAJ,OAAU,EAAKiqB,SAAS1f,GAAG,WAAQ7I,EAAGe,EAAEI,SAALnB,CAAe6I,GAAI7I,EAAG1B,EAAH0B,CAAM6I,OAChE6jB,EAAY,SAAA7jB,GAAC,OAAInL,EAAEwtB,QAAQriB,EAAExH,QAAQsrB,EAAa,SAAA9jB,GAAC,OAAInL,EAAEmrB,aAAehgB,EAAEwjB,KAC1EO,EAAc3nB,EAAQ+D,QAAUjI,EAAE+pB,UAAY,EAAI,GAClD+B,EAAkBnvB,EAAEwuB,YACpBY,EAASpvB,EAAEuuB,KAAOvuB,EAAEwuB,YAAmB5gB,KAAK0I,IAAIoY,EAAKpjB,OAAQ8jB,EAASpvB,EAAEwuB,aAE5E,OAAO,kBAACa,EAAA,EAAD,CAAgB/D,UAAWgE,KAAK,2BAAIjsB,EAAE+qB,SAAW,MAAS,kBAACmB,EAAA,EAAD,CAAOC,UAAW9C,GAAQvkB,MAAOsnB,kBAAiBpsB,EAAEqsB,MAAOC,KAAe,QAAqBjE,aAAYroB,EAAEqsB,OAC1K,kBAAC,GAAD,CAAOnoB,QAASA,EAASmlB,QAASA,GAASU,UAAW/pB,EAAE+pB,UAAWL,YAAa7qB,EAAElC,EAAEwtB,SAASzd,QAAO,SAAA/O,GAAC,OAAIZ,EAAEY,MAAIsK,OAAQuhB,MAAO7sB,EAAEyuB,UAAW3B,QAAS9sB,EAAE4uB,WAAYhC,iBAAkB,aAAWK,cAFjK,SAAA2B,GAAgB,EAAK/D,SAAS,CAAE+D,aAAYH,UAAW,EAAK3E,MAAM2E,WAAc,EAAK3E,MAAM8E,aAAeA,EAAc,EAAI,MAEmE5B,SAAU0B,EAAKpjB,SAC5O,kBAACskB,EAAA,EAAD,MArCMvtB,EAqCWqsB,EArCOrsB,EAAExB,KAAI,SAACwU,EAAGvU,GAAJ,MAAU,CAACuU,EAAGvU,MAAIkW,MAAK,SAAC3U,EAAGiT,GAAJ,OAAWwZ,GAAQA,EAAKzsB,EAAE,GAAIiT,EAAE,KAASjT,EAAE,GAAKiT,EAAE,MAAKzU,KAAI,SAAAwU,GAAC,OAAIA,EAAE,OAqChGtB,MAAMqb,GAASpvB,EAAEuuB,KAAO,GAAKvuB,EAAEwuB,aAAa3tB,KAAI,SAACsK,EAAGrK,GAAJ,OAAU,kBAACqsB,EAAA,EAAD,CAAUrpB,IAAKhD,EAAG+uB,OAAK,EAAC3B,QAAS,kBAAMa,EAAE,CAAE5D,WAAYhgB,EAAEwjB,OAAQmB,eAAcd,EAAU7jB,GAAI4kB,UAAW,EAAGC,SAAUf,EAAW9jB,IAC9M9H,EAAE+pB,UAAY,kBAACC,EAAA,EAAD,CAAWf,QAAQ,YAAW,kBAACgB,EAAA,EAAD,CAAUE,QAASwB,EAAU7jB,GAAIsiB,WAAY,CAAE,kBAAmB3sB,MAAsB,KACpIyG,EAAQ1G,KAAI,SAAC8V,EAAGJ,GAAJ,OAAU,kBAAC8W,EAAA,EAAD,CAAWvpB,IAAKyS,EAAGqX,MAAOjX,EAAEiX,OAAS,WAAYjX,EAAEsZ,aAAehvB,GAAGkK,EAAEwL,EAAEqL,OAAQ7W,YAEzGujB,EAAKpjB,OAAStL,EAAEwuB,YAAc,kBAAC0B,EAAA,EAAD,KAAa,kBAAC/C,EAAA,EAAD,KAAU,kBAACgD,GAAA,EAAD,CAAiB7E,UAAW+B,IAAW+C,QAAUlB,EAAc,EAAImB,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KAAOvc,MAAO4a,EAAKpjB,OAAQkjB,YAAaxuB,EAAEwuB,YAAaD,KAAMvuB,EAAEuuB,KAAM+B,aAAc,SAACjb,EAAGkZ,GAAJ,OAAaQ,EAAE,CAAER,UAASgC,oBAAqB,SAAAlb,GAAC,OAAI0Z,EAAE,CAAEP,YAAapc,SAASiD,EAAE+E,OAAOvR,MAAO,MAAO,SAAAsC,GAAC,OAAI4jB,EAAE,CAAER,KAAM3gB,KAAK0I,IAAI1I,KAAK4iB,MAAMxwB,EAAEuuB,MAAMY,EAAgBhkB,EAAEqjB,cAAe5gB,KAAK6iB,OAAO/B,EAAKpjB,OAAS,GAAGH,EAAEqjB,wBAAiD,W,GAtBjf5E,IA2BjB8G,G,kKACArtB,EAAGrD,GACL,OAAO,kBAAC2wB,GAAA,EAAD,KAAOrwB,EAAE+C,EAAEutB,MAAM/vB,KAAI,WAAmBC,GAAO,IAElC+vB,EAFiC,mBAAvBnB,EAAuB,KAAMoB,GAAN,KAAcztB,EAAEwF,QAAU/H,EAAI,YAAc,WAC/F,OAAO,kBAACiwB,GAAA,EAAD,CAAUC,QAAM,EAAC9C,QAAS,kBAAM5rB,EAAGe,EAAEI,SAALnB,CAAeN,EAAGlB,IAAIgD,IAAKhD,GAAImwB,GAAS,EAAG,CAAC,CACjF,kBAACC,GAAA,EAAD,MAAgBL,EAAuCrJ,GAAekI,GAAjDtvB,EAAEywB,GAAK,kBAACA,EAAD,CAAGC,MAAOA,IAAW,OACjD,kBAACK,GAAA,EAAD,CAAYL,MAAOA,GAAQpH,GAAUgG,MACnC,CAAC,CAAC,CAACjD,MAAO,OAAQzqB,c,GANN4nB,IAWhBwH,G,kDAA0B,WAAY/tB,GAAI,IAAD,8BAAE,cAAMA,EAAG,CAAEguB,cAAe,KAAWtH,KAAKuH,WAAa,GAAzD,E,4DAC3B,OAAO1uB,KAAKmnB,KAAKuH,WAAW9G,U,0BAC1CnnB,EAAGrD,GAAI,IAAD,OAAKuxB,GAAYnxB,EAAEiD,EAAEguB,eAAiBhuB,EAAEguB,cAAgBrxB,EAAEqxB,gBAAkB,EAEhF5F,GADcrrB,EAAEiD,EAAEmuB,cAAenuB,EAAEmuB,YACtBnuB,EAAEooB,YACfgG,EAAY,CAAE5oB,MAAO0oB,EAAU9tB,SAAU,SAAC4R,EAAGgc,GAAJ,OAAsB,EAAKxG,SAAS,CAAEwG,iBAAiB/uB,EAAGe,EAAEquB,sBAALpvB,CAA4B+uB,MAC5HT,EAAOvtB,EAAEsuB,YAActuB,EAAEsuB,YAAYF,GAAa,kBAACG,GAAA,EAAD,eAAMC,eAAe,UAAUC,UAAU,WAAcL,EAAvD,CAAkE/F,aAAW,OAAOqG,UAAQ,IAAEzxB,EAAE+C,EAAEutB,MAAM/vB,KAAI,WAAmBC,GAAnB,uBAAE4uB,EAAF,iBAAyB,kBAACsC,GAAA,EAAD,CAAKluB,IAAKhD,EAAGkhB,MAAO0H,GAAUgG,GAAQuC,SAAWzxB,EAAG6C,EAAE6uB,UAAUxC,SAEvPyC,EAAYjxB,EAAEmC,EAAEutB,MAAMtlB,OAAS,EAAI8e,IAAMgI,cAAclwB,EAAEmB,EAAEutB,MAAMW,GAA9B,2BAA8CluB,EAAEgvB,aAAhD,IAA6D9H,SAAU3nB,KAAKmnB,KAAKuH,cAAgB,KACxI,OAAOL,GAAS,EAAGxF,EAAa,CAAC,CAACmF,EAAMuB,IAAc,CAAC,CAACvB,GAAO,CAACuB,IAAa1G,EAAa,CAAC,CAAC,CAACgB,MAAO,OAAQ6F,cAAe,OAAQtwB,IAAM,CAAC,CAACA,GAAI,CAACA,S,GAT3H4nB,IAarBoH,GAAS,SAAC5C,EAASF,EAAS4C,GAAnB,OAA6B,kBAACyB,GAAA,EAAD,CAAQC,QAAQ,YAAY1B,MAAO,CAAC,UAAW,aAAaA,GAAS,GAAI5C,QAASA,GAAUE,IAEhIqE,G,kDAA2B,WAAYpvB,GAAI,IAAD,8BAAE,cAAMA,EAAG,CAAEguB,cAAe,KAAWtH,KAAK2I,WAAatI,IAAMC,YAAa,EAAKN,KAAKuH,WAAa,GAAnG,E,4DAC5B,OAAO1uB,KAAKmnB,KAAK2I,WAAWlI,U,sCAC5B,OAAO5nB,KAAKmnB,KAAKuH,WAAW9G,U,0BAC1CnnB,EAAGrD,GAAI,IACDF,EADA,OAAM6yB,EAAO,SAAC7xB,EAAGhB,GAAJ,OAAWgB,IAAOI,EAAEpB,GAAGwL,OAAS,GAUrD,OAAO,kBAAC,GAAD,CAAYomB,sBAAuB,SAAAL,GAAa,OAAI,EAAKxG,SAAS,CAACwG,mBAAiBA,cAAerxB,EAAEqxB,cAAeuB,IAAKhwB,KAAKmnB,KAAK2I,WAAY9B,MAT9I9wB,EASsJU,EAAG6C,EAAEutB,MATtJjwB,EAAEb,GAAG,SAACoC,EAAGnB,EAAGD,GAAP,OAAa,kBAAMmwB,GAAS,GAAK,CAAC,CAAC,kBAAC3B,EAAA,EAAD,KAAK,kBAACptB,EAAD,iBAAOmB,EAAEgvB,YAAT,CAAsB9H,SAAU,EAAKR,KAAKuH,gBAAsB,CAAC,kBAAChC,EAAA,EAAD,KAAM2B,GAAS,GAAK,CAAC,CAC9I5tB,EAAEwvB,UAAY7B,GAAO,SAAU1uB,EAAGe,EAAEwvB,WACnC/xB,EAAI,GAAMkwB,GAAO,cAAc,kBAAM,EAAKnG,SAAS,CAAEwG,cAAe,QACpEsB,EAAK7xB,EAAGhB,IAAMkxB,GAAO,QAAQ,WAAQ,IAAIrd,EAAI,EAAKmf,gBAAgBC,WAAgBpf,GACjF,EAAKkX,SAAW,CAAEwG,cAAerxB,EAAEqxB,cAAgB,IAAM,kBAAO3lB,EAA0C,EAAKonB,gBAA1CxwB,EAAGoJ,EAAEsnB,oBAAoBC,KAAKvnB,EAA9BpJ,CAAiCqR,GAAtC,IAAAjI,QAElEinB,EAAK7xB,EAAGhB,IAAMkxB,GAAO3tB,EAAE6vB,YAAc,UAAU,WAAQ,IAAIC,EAAK,EAAKL,gBAAiB,GAAIK,EAAI,CAAE,IAAIxf,EAAIwf,EAAGJ,WAAc,UAAD,OAAWrxB,EAAEiS,IAAaA,GAAIrR,EAAIe,EAAE+vB,SAAN9wB,CAAiBqR,QACvK5D,OAAO9O,cAEkKixB,SAAUvxB,EAAG0C,EAAEutB,MAAO,SAAC5vB,EAAGD,EAAGD,GAAP,OAAcA,IAAOd,EAAEqxB,iBAAkBgB,YAAahvB,EAAEgvB,kB,GAbnOzI,IA0BpByJ,G,kDACJ,WAAYhwB,EAAGrD,EAAG+pB,GAAO,uCAAO1mB,EAAR,aAAalB,OAAQ,GAAI6gB,OAAQ,IAAOhjB,GAAK+pB,G,sDAC3D/G,GAAS,IAAD,OAA8E,OAA5EpgB,KAAKioB,SAAS,CAAE7H,WAAU,iBAAQ,gBAAD,OAAiBthB,EAAE,EAAKooB,MAAM9G,YAAwD,IAAjC9hB,EAAE8hB,GAAQjT,OAAO9O,GAAIqK,S,iCAClH,OAAO,I,mCACPvK,EAAGsC,GAAI,IAAD,OAAMrD,EAAI4C,KAAKknB,MAAO,OAAO,kBAACwJ,GAAA,EAAD,eAAWla,MAAQhZ,EAAEJ,EAAEgjB,OAAOjiB,IAAMyxB,QAAQ,WAAWI,IAAKhwB,KAAKmnB,KAAKhpB,GAAIgjB,GAAIhjB,EAAGihB,MAAO0H,GAAU3oB,GAAI0C,SAAU,SAAA4R,GAAC,OAAI,EAAKwV,SAAU,CAAE1oB,OAAO,2BAAMnC,EAAEmC,QAAWI,EAAgBxB,EAAGsU,EAAE+E,OAAOvR,UAAW,WAAYzI,EAAE,EAAK8pB,MAAMkB,YAAY,EAAKlB,MAAMkB,UAAU,EAAKtB,MAAM3nB,YAAa0G,MAAO/G,EAAG9B,EAAEmC,OAAOpB,KAASsC,EAArT,CAAwTkwB,WAAYvzB,EAAEgjB,OAAOjiB,IAAMP,EAAG6C,GAAGkwB,kB,GAJ7W3J,IAO1BqH,GAAW,SAACuC,EAAeC,EAAOC,GAAvB,OAAsC,2BAAOrF,MAAO,CAACmF,cAAc,GAAD,OAAKA,GAAiB,EAAtB,QAA8B,+BAAQC,EAAM5yB,KAAI,SAAC8S,EAAG7S,GAAJ,OAAU,wBAAIgD,IAAKhD,GAAI6S,EAAE9S,KAAI,SAAC2Z,EAAGjE,GAAJ,OAC5J,wBAAIzS,IAAKyS,EAAG8X,MAAOqF,GAAclzB,EAAG4B,EAAGA,EAAGsxB,GAAY5yB,IAAIyV,KAAMiE,aAC9DmZ,GAAY,SAAAF,GAAK,OAAIxC,GAAS,IAAKwC,IACnCG,GAAO,SAACC,EAAUJ,GAAX,OAAqB,0BAAMK,YAAU,EAACC,aAAa,OAAOF,EAAUF,GAAUF,KAEnFO,G,kKAA8B3wB,EAAGrD,GAAI,IAAD,OAEpC6wB,EAAIxtB,EAAEyrB,KAAU/K,EAAK2F,GAAUrmB,EAAE0gB,IACrC,OAAO,kBAACkQ,GAAA,EAAD,CAAQxE,kBAAiB1L,EAAIhD,KAAM1d,EAAE0d,KAAMmT,QAAS,WAAQ5xB,EAAGe,EAAE6wB,QAAL5xB,GAAiB,EAAKuoB,SAAS,CAAE9J,MAAM,MAAa,4BAAKgD,GAAQ,kBAAC8M,EAAD,iBAAOxtB,EAAEgvB,YAAT,CAAsBQ,SAAUxvB,EAAEwvB,SAAUO,SAAU/vB,EAAE+vB,iB,GAHrKxJ,IAMnBuK,G,kDAAgC,WAAY9wB,EAAGrD,GAAI,uCAAOqD,EAAR,2BAAgBrD,GAAhB,IAAmB+gB,MAAM,K,gDAC3E1d,EAAGrD,GAAI,IAAD,OAAE,OAAO,oCAAGgxB,GAAOtH,GAAUrmB,EAAE0gB,KAAK,kBAAM,EAAK8G,SAAS,CAAE9J,MAAM,OACxE,kBAAC,GAAD,CAAYA,KAAM/gB,EAAE+gB,KAAM+N,KAAMzrB,EAAEyrB,KAAM/K,GAAI1gB,EAAE0gB,GAAIqP,SAAU,SAAAjoB,GAAO9H,EAAE+vB,SAASjoB,GAAI,EAAK0f,SAAS,CAAE9J,MAAM,KAAa8R,SAAU,WAAQvwB,EAAGe,EAAEwvB,SAALvwB,GAAkB,EAAKuoB,SAAS,CAAE9J,MAAM,KAAasR,YAAahvB,EAAEgvB,mB,GAFhLzI,IAKzBwK,G,kDACJ,WAAY/wB,EAAGrD,GAAI,uCAAOqD,EAAGrD,EAAG,Y,gDAC5BqD,EAAGrD,GAAK,OAAO2zB,GAAU,CAAC,CAACE,GAAS,wCAAD,yCAA4ExwB,EAAEgxB,WAA9E,OAA+F,CAAC,kBAAC,KAAD,CAAUC,SAAU,WACzJ,CAAC1xB,KAAK2xB,aAAa,WAAY,CAAE3gB,KAAM,kB,iCAC5B,OAAOhR,KAAKknB,MAAM3nB,W,GAJHkxB,IAOxBmB,G,kKACAnxB,EAAGrD,GAAK,OAAO,kBAAC,GAAD,CAAY+gB,MH9IxBzL,EG8IiCjS,EAAE0d,KH9I9BzL,IAAK,GG8IgCwZ,KAAM,kBAAM,kBAAC,GAAD,CAAa8B,KAAM,CAACwD,oBAAkBC,WAAYhxB,EAAEgxB,WAAYjB,SAAU/vB,EAAE+vB,SAAUP,SAAUxvB,EAAEwvB,cH9IxJ,IAAAvd,M,GG6IuBsU,IAI1B6K,G,kKAAkCpxB,EAAGrD,GAAK,IAAI+jB,EAAK2F,GAAUrmB,EAAEqsB,OACnE,OAAO,kBAACuE,GAAA,EAAD,CAAQxE,kBAAiB1L,EAAIhD,KAAM1d,EAAE0d,KAAMmT,QAAS5xB,EAAGe,EAAE6wB,UAAU,4BAAKxK,GAAU3F,IAAUkN,GAAS,EAAG,CAAC,CAAC,kBAACyD,GAAA,EAAD,CAAmB7rB,MAAOxF,EAAEoH,mB,GADlHmf,IAMzB+K,GAAkB,SAAA3zB,GAAC,OAAI,yBAAKqtB,MAAO,CAAEuG,aAAc,WAAYvI,SAAU,SAAUwI,WAAY,WAAY7zB,IAE3G8zB,GAAQ,SAACC,EAAK3G,GAAN,OAAkBuG,GADd,SAACK,EAAM5G,GAAP,OAAmB,uBAAGhU,OAAO,SAAS6a,IAAI,sBAAsBC,KAAMF,GAAO5G,GAC/C+G,CAAUJ,EAAK3G,KAIzDgH,GAAW,SAACjqB,EAAG+C,GAAJ,OAAgB,kBAAC,GAAD,eAAU1M,KAAM2J,EAAG5D,QAASrF,EAAEmzB,GAAWlqB,KAAS+C,KAE7EonB,GAAiB,SAACjzB,EAAGiT,GAAJ,OAAUjT,EAAEkzB,cAAcjgB,IAC3CkgB,GAAa,SAACnzB,EAAGiT,GAAJ,OAAUjT,EAAEozB,WAAWngB,IACpCogB,GAAkB,CACpBjkB,gBAAiB,CAAE2c,QAAS,OAAQ6B,YAAa,SAAA5vB,GAAC,OAAIqpB,GAAU5nB,EAAGZ,EAAEV,EAAGH,IAAI,OAC5Es1B,OAAQ,CAAEvH,QAAS,QAAS6B,YAAamF,IACzC5rB,WAAY,CAAE4kB,QAAS,cAAe6B,YAAa,SAAAjvB,GAAC,OAAI8zB,GAAM,6CAAD,OAA8C9zB,GAAKA,IAAI6tB,QAASyG,IAC7H3f,WAAY,CAAEyY,QAAS,cAAe6B,YAAa,SAAAjvB,GAAC,OAAI8zB,GAAM,gCAAD,OAAiC9zB,GAAKA,IAAI6tB,QAASyG,IAChHM,MAAO,CAAExH,QAAS,sBAAuB6B,YAAa,SAAAjvB,GAAC,OAAI8zB,GAAM,wCAAD,OAAyC9zB,GAAKA,IAAI6tB,QAASyG,IAC3Hrf,OAAQ,CAAEmY,QAAS,aAAc6B,YAAa0E,GAAiB9F,QAASyG,IACxEjnB,OAAQ,CAAE+f,QAAS,SAAU6B,YAAavG,GAAWmF,QAASyG,IAC9DO,YAAa,CAAEzH,QAAS,eAAgBR,MAAO,QAASC,aAAc,QAASoC,YAAa,SAAA5vB,GAAC,OAAI4mB,aAAmB5mB,IAAIwuB,QAAS2G,IACjIjtB,IAAK,CAAE6lB,QAAS,eAAgBR,MAAO,QAASC,aAAc,QAASoC,YAAa,SAAA5vB,GAAC,OAAI6mB,aAAY7mB,IAAIwuB,QAAS2G,KAEhHM,GAAqBn1B,EAAE,CAAE6E,KAAM,CAAEoO,KAAM,SAAWpK,WAAY,CAAEoK,KAAM,cAAgBxC,QAAS,CAAEgd,QAAS,mBAAoBxa,KAAM,cAAgBmiB,MAAO,CAAE3H,QAAS,iBAAkBxa,KAAM,cAAgB+B,WAAY,CAAE/B,KAAM,cAAgBqC,OAAQ,CAAErC,KAAM,UAAYhO,UAAW,CAAEgO,KAAM,eAAiB+D,eAAgB,CAAEyW,QAAS,wBAAyBxa,KAAM,eAAkBgE,aAAc,CAAEwW,QAAS,sBAAuBxa,KAAM,eAAiBpC,IAAK,CAAE4c,QAAS,MAAOxa,KAAM,eAAiBrD,MAAO,CAAE6d,QAAS,QAASxa,KAAM,eAAiB/K,MAAO,CAAE+K,KAAM,eAAiBvF,OAAQ,CAAEuF,KAAM,UAAY/C,IAAK,CAAEud,QAAS,SAAUxa,KAAM,UAAY9C,KAAM,CAAEsd,QAAS,UAAWxa,KAAM,UAAYoiB,mBAAoB,CAAE5H,QAAS,uBAAwBxa,KAAM,cAAehK,WAAY,CAAEwkB,QAAS,kBAAmBxa,KAAM,UAAYnO,eAAgB,CAAE2oB,QAAS,mBAAoBxa,KAAM,cAAgBmF,kBAAmB,CAAEqV,QAAS,sBAAuBxa,KAAM,cAAgBxO,UAAW,CAAEgpB,QAAS,OAAQR,MAAO,OAAQC,aAAc,OAAQoC,YAAazH,IAAmBpf,KAAM,CAAEglB,QAAS,OAAQR,MAAO,OAAQC,aAAc,OAAQoC,YAAazH,MAAqB,SAAAxnB,GAAC,kCAAUZ,EAAEY,EAAE4S,MAAQ8hB,GAAgB10B,EAAE4S,MAAQ,IAAQ5S,MAE/sCi1B,GAAmB,SAACtf,EAAGuf,GAAyD,OAA7C51B,EAAE41B,GAAMhyB,SAAQ,mCAAEnD,EAAF,KAAKC,EAAL,YAAYf,EAAEO,EAAGmW,EAAE5V,IAAKC,MAAY2V,GACvF0e,GAAa,SAAAlqB,GAAC,OAAI8qB,GArBD,SAAA9qB,GAAC,OAAI1K,EAAES,EAAEV,EAAG4B,EAAG+I,GAAG,KAAKtK,KAAI,SAAA8V,GAAC,MAAI,CAACA,EAAG,CAAEqL,MAAOrL,EAAGyX,QAASzX,QAqBvCwf,CAAehrB,GAAI2qB,KAatDjC,GAAW,SAACnE,EAAOjoB,EAAM2uB,GAAd,OAA0B,oCAAE,wBAAI/H,MAAO,CAACgI,UAAW,SAAU3G,GAAW,uBAAGrB,MAAO,CAACgI,UAAW,SAAU5uB,GAAS,uBAAG4mB,MAAO,CAACgI,UAAW,OAAQvF,MAAO,YAAasF,KAC9KE,GAAmB,SAAC90B,EAAMgZ,GAAP,OAAapa,EAAEoB,GAAQgZ,EAAKyW,GAAS,EAAG,CAAC,CAAC,kBAACyD,GAAA,EAAD,UAE7D6B,GAAc,SAACpiB,EAAG3S,EAAMg1B,GAAV,OAAwBrrB,EAGtC/I,EAAGZ,GAHwCyvB,GAAS,EAAE,EAAG,CAAC,CAAC,aAAD,OAAc9c,EAAd,MAAqBhJ,EAAEG,QAAS,CAAC,SAAD,OAAU6I,EAAV,WAAsB8S,aAAmB9b,EAAEiF,QAAO,SAAC/M,EAAGmX,GAAJ,OAAUnX,EAAEiN,KAAMkK,EAAEgc,GAAY,gBAAgB3wB,aAAG,MACjM,CAAC,iBAAD,OAAkBsO,EAAlB,KAAwBqU,GAAgBrd,EAAEiF,QAAO,SAAC/M,EAAGmX,GAAJ,OAAUpa,EAAEiD,GAAKuK,KAAK0I,IAAIjT,EAAGmX,EAAEpV,WAAaoV,EAAEpV,YAAWpD,KAC1G,CAAC,gBAAD,OAAiBmS,EAAjB,KAAuBqU,GAAgBrd,EAAEiF,QAAO,SAAC/M,EAAGmX,GAAJ,OAAUpa,EAAEiD,GAAKuK,KAAKG,IAAI1K,EAAGmX,EAAEpV,WAAaoV,EAAEpV,YAAWpD,OAFjE,IAAAmJ,G,SCnNpCsrB,G,kLACkB7zB,KAAK8zB,mBAAmB,M,yCAC3BC,GAAaA,EAAMrtB,WAAa1G,KAAKsnB,MAAM5gB,UAAU1G,KAAKg0B,eAAeh0B,KAAKsnB,MAAM5gB,c,GAFzEsgB,IAI1BiN,G,6KACWvtB,GAAgBA,IAAY1G,KAAKk0B,mBAAmBt1B,KAAM6H,aAAmBC,IAAY9H,KAAK+T,oBAAoBjM,M,wCAC7G,OAAO9I,YAAGoC,KAAKsnB,MAAM5gB,UAAY1G,KAAKknB,MAAMzgB,aAAmBzG,KAAKsnB,MAAM5gB,gB,GAFxDmtB,IAKlCM,G,6KACWztB,GAAgBA,IAAY1G,KAAKk0B,mBAAmBt1B,KAAM+H,aAAyBD,IAAY9H,KAAKw1B,2BAA2B1tB,M,8CACpH,OAAO9I,YAAGoC,KAAKsnB,MAAM5gB,UAAY1G,KAAKknB,MAAMvgB,aAAyB3G,KAAKsnB,MAAM5gB,gB,GAFpEmtB,IAKlCQ,G,kKAA8B5zB,EAAGrD,GAAK,IAAIc,EAAIN,YAAG6C,EAAEiG,UAAW,OAAO2nB,GAAS,EAAE,EAAG,CACvF,CAAC,aAAcnwB,EAAEmV,QAAU,KAC3B,CAAC,yBAA0Byf,GAAgB/f,WAAWsa,YAAYnvB,EAAEU,OAAS,KAC7E,CAAC,uBAAwBk0B,GAAgBlsB,WAAWymB,YAAYnvB,EAAE0I,aAAe,W,GAH1DogB,IAMnBsN,G,kKAAkD7zB,EAAGrD,GAAK,IAAIc,EAAI8B,KAAKu0B,kBACvE5vB,EAAU9G,YAAEoB,YAAE,4CAA4ChB,KAAI,SAAAE,GAAC,MAAI,CAACA,EAAGs0B,GAAWv0B,EAAEC,SAExF,OADAwG,EAAU5G,YAAE4G,GAAS,SAAAvG,GAAC,OAAIkB,YAAElB,GAAG+O,QAAO,SAAA4G,GAAC,OAAKtT,EAAEujB,eAAewQ,WAAcv1B,YAAE,4DAA4DsP,SAASwF,EAAEqL,aAC7I,kBAAC,GAAD,CAAYqM,MAAO,CAAEgJ,QAASj3B,YAAEiD,EAAEiG,UAAY,QAAU,QAAU8kB,QAAO,mBAAc5tB,YAAG6C,EAAEiG,UAAU9H,MAAQovB,KAAMjwB,YAAE4G,GAAS,SAACvG,EAAGD,GAAJ,OAAU,kBAChJkwB,GAAS,GAAK,CAAC,CAACsF,GAAYx1B,EAAEgT,MAAM,GAAI,GAAIjT,EAAEC,GAAI,iBAAkB,CAAC,kBAAC,GAAD,CAAMS,KAAMV,EAAEC,GAAIwG,QAASvG,iB,GAJ1E61B,IAOlBS,G,kLAAkD10B,KAAKk0B,mBAAmBt1B,KAAM,wB,0BAChF6B,EAAGrD,GACL,IAAI2W,EAAI0e,GAAWr1B,EAAEsI,oBAErB,OADArI,YAAEO,YAAGmW,EAAEnV,MAAN,aAAe4sB,QAAS,WAAcsH,GAAgB/f,aAChD,kBAAC,GAAD,CAAMyY,QAAS/qB,EAAE+qB,SAAW,YAAa5sB,KAAMxB,EAAEsI,mBAAoBf,QAASrF,YAAEyU,GAAIlT,SAAU,SAAA0H,GAAC,OAAI7I,YAAGe,EAAEk0B,0BAALj1B,CAAgCF,YAAGpC,EAAEsI,oBAAoB6C,EAAEggB,oB,GAJ9IvB,I,SCCvB4N,GAAS,I,kDAhCX,aAAe,IAAD,6BAAE,cAAM,SAAU,CAAC,YAAa,CAAEhqB,SAAU,KAAOpM,YAAE,mCAArD,E,gGAEGq2B,EAAOD,G,2FACRxY,aAAc3d,YAAEm2B,EAAQ31B,YAAE,yBAA0B41B,EAAMC,U,cAApE5f,E,OACAiH,EAAOa,aAAc9H,GACrB6f,EAAMpY,aAAmBR,G,kBACrB,CAAE5R,WAAY2K,EAAE3K,WAAY4S,UAAWjI,EAAEiI,UAAWvB,UAAWmZ,EAAIzyB,SAAS,OAAQsE,WAAYsU,aAAqBM,aAAoBuZ,IAAOhiB,WAAY2H,aAAqBqa,K,uKAGjLF,EAAOxa,G,2FACD6B,aAAiB7B,EAAWwa,EAAMC,U,cAA5C5f,E,gBACUlV,KAAKg1B,WAAWH,EAAO3f,G,UAAjC3M,E,QACA4T,EAAO/B,aAAaC,IACf9P,WAAWjI,SAAS,SAAWiG,EAAEgC,WAAWA,WAAWjI,SAAS,O,sBAAc5D,YAAE,2C,UACrFyd,EAAKgB,UAAU7a,SAAS,SAAWiG,EAAE4U,UAAU5S,WAAWjI,SAAS,O,uBAAc5D,YAAE,yC,eACvFsB,KAAK4K,SAASiqB,EAAMI,QAApB,yBAAgCjvB,KAAM6uB,EAAMI,QAAW/f,GAAMzW,YAAE8J,EAAGtJ,YAAE,qCACpEe,KAAKoI,U,kBACEpI,KAAKk1B,UAAYl1B,KAAK4K,SAASiqB,EAAMI,S,uLAG1BJ,G,uFACJ70B,KAAKg1B,WAAWH,EAAO70B,KAAK4K,SAASiqB,EAAMI,S,cAArD1sB,E,yBACGqU,aAAoBI,aAAczU,IAAIjG,SAAS,Q,2KAG7CuyB,G,uFACK70B,KAAKg1B,WAAWH,EAAO70B,KAAK4K,SAASiqB,EAAMI,S,cAArD1sB,E,OACHlL,YAAE2C,KAAK4K,SAASiqB,EAAMI,QAArB,aAAgCjvB,KAAM6uB,EAAMI,QAAWx2B,YAAE8J,EAAGtJ,YAAE,sC,kBACzDe,KAAKk1B,UAAYl1B,KAAK4K,SAASiqB,EAAMI,S,mHA7B3Bve,ICYfye,G,kDAA+C,WAAY10B,EAAGrD,EAAGg4B,EAAYC,GAAgB,IAAD,6BAAE,cAAM50B,EAAGrD,GAAIC,YAAE,eAAM,CAAE+3B,aAAYC,kBAArC,E,uDACnF,OAAOr1B,KAAKsnB,MAAMtnB,KAAKq1B,iB,0BAChC50B,EAAGrD,GAAK,IAAImL,EAAI/I,YAAGiB,EAAET,KAAKq1B,gBAAiB9jB,EAAIvR,KAAKo1B,WACtD,OAAOpE,GAAKC,GAAS,WAAD,OAAY1f,EAAZ,sDAA4DA,EAA5D,OAAoE,CACtF,CAAC,qBAAD,OAAsBA,EAAtB,MAA6BhJ,EAAEG,QAC/B,CAAC,SAAD,OAAU6I,EAAV,WAAsB8S,aAAmB9b,EAAEiF,QAAO,SAAC/M,EAAGmX,GAAJ,OAAUnX,EAAEiN,KAAMkK,EAAE5U,aAAaC,aAAG,MACtF,CAAC,iBAAD,OAAkBsO,EAAlB,KAAwBqU,GAAgBrd,EAAEiF,QAAO,SAAC/M,EAAGmX,GAAJ,OAAUpa,YAAEiD,GAAKuK,KAAK0I,IAAIjT,EAAGmX,EAAEpV,WAAaoV,EAAEpV,YAAWpD,OAC1G,CAAC,gBAAD,OAAiBmS,EAAjB,KAAuBqU,GAAgBrd,EAAEiF,QAAO,SAAC/M,EAAGmX,GAAJ,OAAUpa,YAAEiD,GAAKuK,KAAKG,IAAI1K,EAAGmX,EAAEpV,WAAaoV,EAAEpV,YAAWpD,a,GAP5EqxB,IAY7B6E,G,kDAAqD,WAAY70B,EAAGrD,GAAI,uCAAOqD,EAAGrD,EAAG,UAAW,mB,UAAlE+3B,IAC9BI,G,kDAAwD,WAAY90B,EAAGrD,GAAI,uCAAOqD,EAAGrD,EAAG,aAAc,sB,UAArE+3B,IAEjCK,G,kKAAgD/0B,EAAGrD,GACvD,OAAO,kBAAC,GAAD,CAAa4wB,KAAM,CAAEsH,0BAAyBhF,WAAW,UAAUE,SAAU/vB,EAAE+vB,SAAUP,SAAUxvB,EAAEwvB,SAAUR,YAAa,CAAC3c,gBAAiBrS,EAAEqS,uB,GAD9GkU,IAIrCyO,G,kKAAmDh1B,EAAGrD,GAC1D,OAAO,kBAAC,GAAD,CAAa4wB,KAAM,CAAEuH,6BAA4BjF,WAAW,UAAUE,SAAU/vB,EAAE+vB,SAAUP,SAAUxvB,EAAEwvB,SAAUR,YAAa,CAACiG,mBAAoBj1B,EAAEi1B,0B,GADjH1O,IAI1C2O,GAAY,SAAC7I,GAAD,MAAY,CAAEA,UAC1B8I,GAAe,SAACC,EAAcC,GAChC,yDAAuC,WAAYr1B,EAAGrD,GAAI,uCAAOqD,EAAGrD,EAAG04B,EAAGzpB,OAAOpO,KAAI,SAAAR,GAAC,OAAIA,EAAEqvB,SAAOroB,KAAK,MAAxG,gDACMhE,EAAGrD,GAAI,IAAD,OAAE,OAAO4zB,GAAKC,GAAS4E,GAAeC,EAAG73B,KAAI,SAAAwB,GAAC,OAAIA,EAAExB,KAAI,SAAA83B,GAAE,OAAI,EAAKpE,aAAaoE,EAAGjJ,gBAD/F,iCAEe,OAAO9sB,KAAKknB,MAAM3nB,WAFjC,GAAqBkxB,KAMnBuF,GAAkB,CACpBC,MAAOL,GAAa,6BAA8B,CAAC,CAACD,GAAU,YAC9DO,IAAKN,GAAa,2BAA4B,CAAC,CAACD,GAAU,UAC1DQ,SAAUP,GAAa,gCAAiC,CAAC,CAACD,GAAU,eACpES,WAAYR,GAAa,2BAA4B,CAAC,CAACD,GAAU,iBACjEU,aAAcT,GAAa,oCAAqC,CAAC,CAACD,GAAU,mBAC5EW,KAAMV,GAAa,4BAA6B,CAAC32B,YAAE,kBAAkBhB,IAAI03B,MACzEY,qBAAsBX,GAAa,4CAA6C,CAAC,CAACD,GAAU,2BAC5Fa,YAAaZ,GAAa,mCAAoC,CAAC,CAACD,GAAU,mBAIxEc,GAAe14B,YAAEi4B,IADO,SAAAh4B,GAAC,OAAI,SAAAyC,GAAC,OAAI,kBAAC,GAAD,CAAautB,KAAM,CAAE0I,GAAI14B,GAAKwyB,SAAU/vB,EAAE+vB,SAAUP,SAAUxvB,EAAEwvB,eAGhGjuB,G,kLACkBhC,KAAKk0B,mBAAmBt1B,KAAM,kB,0BAChD6B,EAAGrD,GAAK,OAAOs2B,GAAiBt2B,EAAEiQ,aAAc,kBAAC,GAAD,CAAY2gB,KAAMnwB,YAAEH,YAAEN,EAAEiQ,cAAcpP,KAAI,WAASC,GAAT,uBAAKE,GAAL,iBAAe,CAAC,oBAAD,OAAqBF,GAAK,kBAAM,kBAAC,GAAD,CAAMU,KAAMR,EAAGuG,QAASrF,YAAEmzB,GAAWr0B,mB,GAF7J4oB,IAKjB2P,G,kKACAl2B,EAAGrD,GAAI,IAAD,OAAE,OAAOixB,GAAS,EAAE,EAAG,CAAC,CAAC,kBAAC,GAAD,CAAcsG,0BAA2B,SAAAjuB,GAAQ,OAAI,EAAKuhB,SAAS,CAAEvhB,cAAasd,eAAgBvjB,EAAEujB,kBACrI,CAACxmB,YAAEJ,EAAEsJ,UAAY,kBAAC,GAAD,CAAWA,SAAUtJ,EAAEsJ,SAAUsd,eAAgBvjB,EAAEujB,iBAAqBqK,GAAS,EAAE,EAAG,CAAC,CAAC,kBAACE,GAAA,EAAD,KAAa,2D,GAFlGvH,IAKpB4P,GAAS,SAACxyB,EAAQE,GAAT,OAAoB1F,KAAKuJ,sBAAsBxG,KAAKnD,YAAE,IAAIqI,KAAYzC,EAAQE,MACrFuyB,G,oKACEtuB,GAAKquB,GAAO,oBAAqB,CAAC3zB,aAAGsF,EAAC,OAAWjG,e,0BACnDiG,GAAKquB,GAAO,SAAU,CAAC3zB,aAAGsF,EAAC,KAASqJ,MAAMhT,KAAK8S,aAAapP,e,+BACvDiG,GAAKquB,GAAO,cAAe,CAAC3zB,aAAGsF,EAAC,UAAcqJ,MAAMhT,KAAK8S,aAAapP,e,iCACpEiG,GAAKquB,GAAO,gBAAiB,CAAC3zB,aAAGsF,EAAC,YAAgBjG,e,mCAChDiG,GAAKquB,GAAO,eAAgB,CAAE3zB,aAAGsF,EAAC,cAAkBqJ,MAAMhT,KAAK8S,aAAcolB,UAAUx0B,e,2BAC/FiG,GAAKA,EAAIxK,YAAEwK,GAAG,SAAA9K,GAAC,OAAIwF,aAAGxF,GAAG6E,cAAas0B,GAAO,SAAU,CAACruB,EAAC,KAAUA,EAAC,KAAUA,EAAC,S,2CAC/DA,GAAKquB,GAAO,wBAAyB,CAACruB,EAAC,yB,kCAChDA,GAAKquB,GAAO,gBAAiB,CAACruB,EAAC,gB,0BAEvC9H,EAAGrD,GAAI,IAAD,OAAE,OAAOixB,GAAS,EAAE,EAAG/uB,YAAEvB,YAAE04B,IAAc,SAACr4B,EAAGD,GAAJ,MAAU,CAAC,kBAAC,GAAD,CAAkBgjB,GAAIhjB,EAAG+tB,KAAM9tB,EAAGoyB,SAAU,SAAAjoB,GAAC,OAAI,EAAKpK,GAAGoK,IAAI0nB,SAAU5xB,gB,GAV7G2oB,IAapB+P,G,kLAAsD/2B,KAAKk0B,mBAAmBt1B,KAAM,qB,iCAC7Eo4B,GAAO,IAAD,GAAE,EAAAp4B,KAAKuJ,uBAAsBxG,KAA3B,oBAAmCq1B,EAAK/4B,KAAI,SAAAsK,GAAC,OAAI,IAAI1B,KAAY,eAAgB,CAACuP,aAAmB7N,EAAE8K,QAAQ,GAAO9K,EAAE3F,KAAM2F,EAAE8K,OAAQ,Y,0BACvJ5S,EAAGrD,GAAI,IAAD,OAAM0V,EAAkBtT,YAAGF,YAAE1B,YAAGR,EAAE0V,kBAAkB,IAE5D,OADAtU,YAAE,4BAAD,OAA6BM,YAAElB,YAAG6C,EAAEm0B,QAAQM,aACtCxB,GAAiBt2B,EAAE0V,gBAAiBub,GAAS,EAAE,EAAG,CACvD,CAAC,kBAAC,GAAD,CAAkBlN,GAAG,+BAA+BsO,YAAa,CAAE3c,mBAAmBoZ,KAAMsJ,GAA8BhF,SAAU,SAAAjoB,GAAC,OAAI,EAAK0uB,WAAW1uB,OAC1J,CAAC,kBAAC,GAAD,CAAYylB,KAAMnwB,YAAEH,YAAEN,EAAE0V,iBAAiB7U,KAAI,WAASC,GAAT,uBAAKE,GAAL,iBAAe,CAAC,oBAAD,OAAqBF,GAAK,kBAAM,kBAAC,GAAD,CAAMU,KAAMR,EAAGuG,QAASrF,YAAEmzB,GAAWr0B,gBAClI+O,OAAO9O,W,GAPkB2oB,IAWzB/kB,G,kLAAyDjC,KAAKk0B,mBAAmBt1B,KAAM,wB,iCAChFs4B,GAAQ,IAAD,GAAE,EAAAt4B,KAAKuJ,uBAAsBxG,KAA3B,oBAAmCu1B,EAAMj5B,KAAI,SAAAsK,GAAC,OAAI,IAAI1B,KAAY,mBAAoB,CAACuP,aAAmB7N,EAAE8K,QAAQ,GAAO9K,EAAE3F,KAAM2F,EAAE8K,OAAQ,Y,0BAC7J5S,EAAGrD,GAAI,IAAD,OAAOs4B,EAAqBl2B,YAAGpC,EAAEyV,oBACzC,OAAO6gB,GAAiBt2B,EAAEyV,mBAAoBwb,GAAS,EAAE,EAAG,CAC5D,CAAC,kBAAC,GAAD,CAAkBlN,GAAG,kCAAkCsO,YAAa,CAAEiG,sBAAsBxJ,KAAMuJ,GAAiCjF,SAAU,SAAAjoB,GAAC,OAAI,EAAK0uB,WAAW1uB,OACnK,CAAC,kBAAC,GAAD,CAAM3J,KAAMxB,EAAEyV,mBAAoBlO,QAASrF,YAAGmzB,GAAWr1B,EAAEyV,+B,GAL9BmU,IAS5BmQ,G,kLACkBn3B,KAAKk0B,mBAAmBt1B,KAAM,2B,oCACtCi2B,GAAQ,IAAD,OAAEr2B,YAAE,mBAAD,OAAoBM,YAAE+1B,KAC3C70B,KAAKioB,SAAS,CAAEmP,oBAAoB,EAAMC,oBAAqB,yBAA0B,kBAAMtd,WAAU,sBAAC,sBAAAta,EAAA,sEAAkB,EAAK63B,wBAAwBzC,GAA/C,mFAAuD,U,uFAEtIA,G,8FACLD,GAAO2C,cAAc1C,G,OAAxCtqB,E,OACJvK,KAAKioB,SAAS,CAAEmP,oBAAoB,EAAMC,oBAAqB,4BAA6B,kBAAMtd,WAAU,sBAAC,sBAAAta,EAAA,sEACrGb,KAAK44B,mCAAmCjtB,GAD6D,OAE3G3L,KAAKuJ,sBAAwBvJ,KAAKuJ,sBAAsBlK,KAAI,SAAAR,GAAC,kCAAUA,GAAV,IAAagO,OAAQ,iBAClF,EAAKwc,SAAS,CAAEmP,oBAAoB,EAAOK,kBAAkB,IAH8C,2CAI1G,Q,iIAEDh3B,EAAGrD,GAAI,IAAD,OAAM63B,EAASr3B,YAAGA,YAAG6C,EAAEm0B,QAAQM,WAAWlvB,KAClD,OAAOqoB,GAAS,EAAE,EAAG,CACnB,CAAC,oCAAGD,GAAO,uCAAuC,kBAAM,EAAKnG,SAAS,CAAEwP,kBAAkB,OAAS,kBAAC,GAAD,CAAgBtZ,KAAM/gB,EAAEg6B,qBAAsB,EAAOtK,MAAO1vB,EAAEi6B,oBAAqBxvB,SAAUzI,MAChM,kBAAC,GAAD,CAAmB+e,KAAM/gB,EAAEq6B,iBAAkBhG,WAAYwD,EAAQzE,SAAU,SAAAqE,GAAK,OAAI,EAAK6C,cAAL,2BAAwB7C,GAAxB,IAA+BI,aAAWhF,SAAU,kBAAM,EAAKhI,SAAS,CAAEwP,kBAAkB,SAChL,CAAC,kBAAC,GAAD,CAAM74B,KAAMxB,EAAE+K,sBAAuBxD,QAASrF,YAAGmzB,GAAWr1B,EAAE+K,iC,GAjB/B6e,IAsBzB9c,GAAb,kKACMzJ,EAAGrD,GACL,OAAO,kBAAC,GAAD,CAAY4wB,KAAM,CAAE2I,aAAW10B,uBAAqBD,YAAU+0B,oBAAkBF,eAAaM,4BAA2B1H,YAAa,CAAEmF,OAAQn0B,EAAEm0B,OAAQ5Q,eAAgBvjB,EAAEujB,sBAFtL,GAA2BgD,I,4BCjHrB2Q,G,kDACJ,WAAYl3B,EAAGrD,GAAI,IAAD,8BAAE,cAAMqD,EAAGrD,IACtBw6B,qBACL,EAAKxQ,SAAS9oB,YAAE,EAAK4oB,OAAOziB,KAAK,MACjC,EAAKozB,aAAc,EAHH,E,iEAOf,IADA,IAAIt4B,EAAS,GACJ+F,EAAI,EAAGA,EAAI,KAAMA,EAAG/F,EAAOS,KAAK83B,OAAOxyB,IAAMpG,YAAGM,YAAGQ,KAAKsnB,MAAMyQ,cAAczyB,IACjFtF,KAAK63B,YAAe73B,KAAKioB,SAAS,CAAE1oB,WAAoBS,KAAKknB,MAAM3nB,OAASA,I,uCAElEy4B,GAAW,IAAD,OACzB,OAAOh4B,KAAKi4B,UAAUp6B,YAAEmC,KAAKk4B,WAAWj6B,KAAI,SAACiX,EAAGhX,GAAJ,OAAa85B,EAASzpB,SAAS2G,GAAgD9V,IAArE,gBAAqC8V,EAArC,iCAAwE/H,OAAO9O,KAAGJ,KAAI,SAAC8S,EAAG7S,GAAJ,MAAU,CAAC,EAAK45B,OAAO55B,GAAK6S,U,sCAE1JonB,GAAgB,IAAD,OAAMC,EAAWp4B,KAAKk4B,WACnD,OAAOl4B,KAAKi4B,UAAUp6B,YAAEu6B,EAASn6B,KAAI,SAACiX,EAAGhX,GAAJ,OAAcgX,IAAMijB,EAAcj6B,GAAvB,4BAA4DkB,OAAG+N,OAAO9O,KAAGJ,KAAI,SAAC8S,EAAG7S,GAAJ,MAAU,CAAC,EAAK45B,OAAO55B,GAAI6S,U,yCAEvIgjB,GAAaA,EAAMgE,eAAiB/3B,KAAKsnB,MAAMyQ,cAAc/3B,KAAK43B,uB,6BAC9En6B,GAAK,MAAM,QAAN,OAAeA,K,iCACG,IAAjB,IAAI8I,EAAS,GAAajB,EAAI,EAAGA,EAAI,KAAMA,EAAGiB,EAAO5E,KAAK3B,KAAKknB,MAAM3nB,OAAOS,KAAK83B,OAAOxyB,KAAO,OAAOiB,I,0BAC/G9F,EAAGrD,GAAI,IAAD,OAAE,OAAO2zB,GAAU,CAAC,EAAG,EAAG,GAAG9yB,KAAI,SAAAwB,GAAC,MAAI,CAAC,EAAG,EAAG,EAAG,GAAGxB,KAAI,SAAAyU,GAAC,OAAI,EAAKif,aAAa,EAAKmG,OAAO,EAAEr4B,EAAIiT,GAAI,CAAE2c,SAAU5uB,EAAE4uB,sB,GApBvGoB,IAuBjB4H,G,kDAAyC,WAAY53B,EAAGrD,GAAI,uCAAOqD,EAAGrD,EAAG,oC,gDACzEqD,EAAGrD,GAAK,OAAO4zB,GAAKC,GAAS,iBAAkB,2FACjD,CAAC,CAACjxB,KAAK2xB,aAAa,WAAY,CAAC3xB,KAAK2xB,aAAa,WAAY,CAAE3gB,KAAM,cAAgB,CAAChR,KAAK2xB,aAAa,mBAAoB,CAAE3gB,KAAM,kB,iCAC3H,IAAIyB,EAAI,GAInB,OAHIzS,KAAKknB,MAAM3nB,OAAOu1B,WAAa90B,KAAKknB,MAAM3nB,OAAO+4B,mBAAoB7lB,EAAC,SAAe,wBAAyBA,EAAC,iBAAuB,yBACtIvT,YAAGc,KAAKknB,MAAM3nB,OAAOu1B,UAAUpsB,OAAS,IAAG+J,EAAC,SAAe,oCAC3DvT,YAAGc,KAAKknB,MAAM3nB,OAAO01B,QAAQvsB,OAAS,IAAG+J,EAAC,OAAa,wCAClDzS,KAAKi4B,UAAUxlB,IAAQzS,KAAKknB,MAAM3nB,W,GAPlBkxB,IAWvB8H,G,kDAA4C,WAAY93B,EAAGrD,GAAI,uCAAOqD,EAAGrD,EAAG,mB,gDAC5EqD,EAAGrD,GAAK,OAAO2zB,GAAU,CAAC,CAACE,GAAS,qBAAsB,sDAAuD,CAAC,kBAAC,KAAD,CAAUS,SAAU,WACxI,CAAC1xB,KAAK2xB,aAAa,WAAY,CAAC3xB,KAAK2xB,aAAa,WAAY,CAAE3gB,KAAM,kB,iCAC3D,IAAIyB,EAAI,GAGnB,OAFIvT,YAAGc,KAAKknB,MAAM3nB,OAAOu1B,UAAUpsB,OAAS,IAAG+J,EAAC,SAAe,8BAC3DvT,YAAGc,KAAKknB,MAAM3nB,OAAO01B,QAAQvsB,OAAS,IAAG+J,EAAC,OAAa,0BACpDzS,KAAKi4B,UAAUxlB,IAAM,CAAEoiB,MAAO70B,KAAKknB,MAAM3nB,Y,GANpBkxB,IAU1B+H,G,kDAAsC,WAAY/3B,EAAGrD,GAAI,uCAAOqD,EAAGrD,EAAG,Y,uDAC7D,MAAO,CAAEy3B,MAAO70B,KAAKknB,MAAM2N,MAAO4D,MAAOz4B,KAAKknB,MAAMuR,S,0CAC3C,4EAA2Bz4B,KAAKioB,SAAS,CAAEwQ,MAAOrb,mB,yCACrDyX,GAAS70B,KAAKioB,SAAS,CAAE4M,Y,0BACxCp0B,EAAGrD,GACL,OAAO,0BAAM8zB,YAAU,EAACC,aAAa,OAClCF,GAAS,cAAe,uIAAwI,qFACjK,kBAAC,GAAD,CAAUjB,IAAKhwB,KAAKmnB,KAAKuR,SAAUX,aAAc36B,EAAEq7B,MAAOpJ,UAAU,S,GAPhDoB,IAWpBkI,G,kDAAsC,WAAYl4B,EAAGrD,GAAI,uCAAOqD,EAAGrD,EAAG,Y,+DACvDmiB,GAASvf,KAAKioB,SAAL,eAAmB1I,M,iCACG,OAA5Bvf,KAAKmnB,KAAKuR,SAAS9Q,QAAmBgR,gBAAgBp5B,YAAGQ,KAAKknB,MAAMuR,SAAW,CAAE5D,MAAO70B,KAAKknB,MAAM2N,MAAOxa,UAAWra,KAAKknB,MAAMuR,S,0BAClJh4B,EAAGrD,GACL,OAAO,0BAAM8zB,YAAU,EAACC,aAAa,OAAOF,GAAS,cAAe,6FAClE,kBAAC,GAAD,CAAUjB,IAAKhwB,KAAKmnB,KAAKuR,gB,GALLjI,IASpBoI,G,kDAAqC,WAAYp4B,EAAGrD,GAAI,uCAAOqD,EAAGrD,EAAG,Y,+DACtDy3B,GAAS70B,KAAKioB,SAAS,CAAE4M,Y,iCAC/B,IAAIiE,EAAK94B,KAAKmnB,KAAKuR,SAAS9Q,QAAS,OAAOkR,EAAGC,iBAAiBve,aAAgBwe,UAAY,CAAEnE,MAAO70B,KAAKknB,MAAM2N,MAAOxa,UAAWye,EAAGZ,c,0BAC9Iz3B,EAAGrD,GAAK,OAAO,0BAAM8zB,YAAU,EAACC,aAAa,OAAOF,GAAS,aAAc,2DAA4D,qFACzI,kBAAC,GAAD,CAAUjB,IAAKhwB,KAAKmnB,KAAKuR,gB,GAJJjI,IAQnBpL,G,kKAAiC5kB,EAAGrD,GAAK,OAAO,kBAAC,GAAD,CAAa4wB,KAAM,CAAEuK,sBAAqB/H,SAAU/vB,EAAE+vB,SAAUP,SAAUxvB,EAAEwvB,SAAUK,WAAW,e,GAA3HtJ,IACtBzB,G,kKAAiC9kB,EAAGrD,GAAK,OAAO,kBAAC,GAAD,CAAa4wB,KAAM,CAAEqK,kBAAgBG,eAAaG,gBAAenI,SAAU/vB,EAAE+vB,SAAUP,SAAUxvB,EAAEwvB,e,GAA7HjJ,IACtBiS,G,kKAA8Bx4B,EAAGrD,GAAK,OAAO,kBAAC,GAAD,CAAa4wB,KAAM,CAAEqK,kBAAgBQ,eAAcrI,SAAU/vB,EAAE+vB,SAAUP,SAAUxvB,EAAEwvB,e,GAA/GjJ,IAEZkS,GAAb,kKAAsCz4B,EAAGrD,GAAK,OAAO,kBAAC,GAAD,CAAY4wB,KAAM,CAAE3I,iBAAeE,iBAAe0T,eAAcxJ,YAAa,CAAEe,SAAU/vB,EAAE+vB,SAAUP,SAAUxvB,EAAEwvB,gBAAtK,GAA2BjJ,IClFrBmS,G,kLACiB,IAAD,OAAEr1B,KAAUxC,SAAQ,SAAAtD,GAAC,OAAI,EAAKk2B,mBAAmBt1B,KAAMZ,Q,0BACvEyC,EAAGrD,GAAK,OAAOixB,GAAS,EAAE,EAAG,CAC/B,CAACA,GAAS,EAAE,EAAG,CAAC,CAAC,UAAWhrB,SAC5B,CAAC,kBAAC,GAAD,CAAMzE,KAAOkF,KAAU7F,KAAI,SAAA+H,GAAI,MAAK,CAAEA,OAAMC,MAAOnH,YAAElB,YAAGR,EAAE4I,IAAOO,eAClE,CAAC6nB,GAAO,UAAWxvB,KAAKiK,gBAAL,Y,GALWme,IAS5BoS,G,kLACiB,IAAD,OAAEv1B,KAAmBK,OAAOD,MAAgBC,OAAO,CAAC,cAAc5C,SAAQ,SAAAtD,GAAC,OAAI,EAAKk2B,mBAAmBt1B,KAAMZ,Q,0BAC7HyC,EAAGrD,GACL,OAAOixB,GAAS,EAAE,EAAG,CACnB,CAACA,GAAS,EAAE,EAAG,CAAC,CAAC,UAAWjxB,EAAEi8B,cAC9B,CAAC,kBAAC,GAAD,CAAMz6B,KAAMqF,KAAehG,KAAI,SAAA+H,GAAI,MAAK,CAAEA,OAAMC,MAAOnH,YAAElB,YAAGR,EAAE4I,YAC/D,CAACooB,GAAO,UAAWxvB,KAAKiK,gBAAL,MACnB,CAACwlB,GAAS,EAAE,EAAG,CAACxqB,KAAmB5F,KAAI,SAAAE,GACrC,IAAI4V,EAAI0e,GAAWr1B,EAAEe,IAErB,OADAd,YAAEO,YAAGmW,EAAEnV,MAAO,CAAE4sB,QAAS,UAAW6B,YAAayF,GAAgBlsB,WAAWymB,cACrEgB,GAAS,EAAE,EAAG,CAAC,CAAC,kBAAC,GAAD,CAAM7C,QAAS9E,GAAWvoB,GAAIS,KAAOY,YAAGpC,EAAEe,IAAMwG,QAASrF,YAAEyU,MAAS,CAACqa,GAAO,WAAW,kBAAMxvB,KAAKqN,uBAAuB9N,qB,GAVrH6oB,IAgBtBsS,GAAb,kKAAwC74B,EAAGrD,GAAK,OAAO,kBAAC,GAAD,CAAY4wB,KAAO,CAAEmL,uBAAqBC,+BAAjG,GAA6BpS,I,UCzBvBuS,G,kLACiB,IAAD,OACdC,EAAe,IAAKC,EAAcv5B,KAAKC,MAAQq5B,EACnDx5B,KAAKkoB,gBAAgBtpB,KAAM,gBAAgB,SAAA86B,GACzC,IAAI9xB,EAAe8xB,EACfC,EAAcz5B,KAAKC,MAAOy5B,EAAUD,EAAcF,EAAaI,EAAS,WAI1E,OAHA,EAAKC,eAAgB,EACrBN,EAAexuB,KAAK0I,IAAI,IAAM,KAAO8lB,GACrCC,EAAaE,GACL,EAAK5R,WAAa,EAAKE,SAAS,CAAErgB,aAAa,eAAMA,MAE1DgyB,GAAUJ,EAAiBK,IAAuB,EAAKC,gBAAkB,EAAKA,cAAgB/f,WAAW8f,EAAQL,EAAeI,S,iCAI7H,IAAD,EAAMrxB,EAAI3K,YAAE,UAACoC,KAAKknB,MAAMtf,oBAAZ,aAAC,EAAyBC,UAAU,cAAe,OAAOrK,YAAC,OAAC+K,QAAD,IAACA,OAAD,EAACA,EAAGG,SAAYH,EAAExH,QAAUwH,EAAEG,W,GAf9Ese,IAkB9B7B,G,kKACA1kB,EAAGrD,GAAK,OAAOixB,GAAS,GAAK,CAC/B,CAACA,GAAS,GAAK3wB,YAAGE,YAAGA,YAAGR,EAAEwK,cAAcC,WAAY5J,KAAI,mCAAEiD,EAAF,KAAOqH,EAAP,WAAc,CAACrH,EACvE1D,YAAE+K,EAAExH,OAASstB,GAAS,EAAE,EAAG,CAAC,CAAC,UAAG9lB,EAAExH,MAAL,cAAgBvD,YAAE+K,EAAEG,QAAUH,EAAEG,OAAS,MAASlL,YAAE+K,EAAEG,QAAJ,YAAmBsC,KAAK4iB,MAAWrlB,EAAExH,MAAMwH,EAAEG,OAAf,KAA9B,MAA4D,KACtI,CAAC,kBAACqxB,GAAA,EAAD,CAAgBnK,QAASpyB,YAAE+K,EAAEG,QAAU,cAAgBtJ,IAAG6G,MAAOzI,YAAE+K,EAAEG,QAAY,IAAIH,EAAExH,MAAOwH,EAAEG,OAAUtJ,SADhH,UAEKN,YAAEyJ,GAFP,aAIF,CAAC,kBAAC,GAAD,CAAM3J,KAAMlB,YAAGE,YAAGA,YAAGR,EAAEwK,cAAcE,UAAW7J,KAAI,mCAAEiD,EAAF,KAAOtC,EAAP,WAAkB,CAAEsC,MAAK84B,OAAO,GAAD,OAAKl7B,YAAEF,GAAP,oB,GAP/D26B,IAWjBU,G,kKAAmDx5B,EAAGrD,GAAI,IAAD,EAAMmL,EAAI3K,YAAE,OAACR,QAAD,IAACA,GAAD,UAACA,EAAGwK,oBAAJ,aAAC,EAAiBC,UAAU,cACrG,OAAQ7H,KAAKk6B,WAAoK,KAAvJ7L,GAAS,GAAK,CAAC,CAAC,cAAe,CAAC,kBAAC0L,GAAA,EAAD,CAAgBnK,QAASpyB,YAAC,OAAC+K,QAAD,IAACA,OAAD,EAACA,EAAGG,QAAU,cAAgBtJ,IAAG6G,MAAOzI,YAAC,OAAC+K,QAAD,IAACA,OAAD,EAACA,EAAGG,QAAY,IAAIH,EAAExH,MAAOwH,EAAEG,OAAUtJ,a,GAD3Im6B,I,0CCpClBY,GAAWh3B,OAAOi3B,YAAcj3B,OAAOi3B,WAAW,gCAAgCC,QAClFC,GAAmB,SAACC,EAAIC,GAAL,OAAch9B,YAAEg9B,GAAMA,EAAKL,IAAYI,EAAM,EAAI,GACpEE,GAAe,SAACF,EAAIC,GAAL,MAAY,CAAC,OAAQ,QAAQF,GAAiBC,EAAIC,KACjEE,GAAe,SAAAC,GAAI,MAAK,CAAEzM,MAAOuM,IAAa,EAAME,GAAOC,gBAAiBH,IAAa,EAAOE,KAChGE,GAAe,SAAC38B,EAAGy8B,GAAJ,MAAa,CAAC,UAAD,+BAA6Cz8B,EAAI,ICapF48B,GAAQ,SAAChO,EAAOiO,EAAaC,EAAOL,GAA5B,OAAqC,kBAAC,KAAD,CAAiBM,gBAAiB,aAAcC,WAAYC,KAAY7vB,QAAS,CAChI8vB,cAAe,CAAChO,SAAU,GAAIN,MAAO,CAAEjoB,KAAMioB,GAASuO,UAAW,CAACC,SAAS,GAAOC,QAAS,CAACD,SAAS,GACrGR,MAAM,yBAAGU,SAAU,KAAQd,GAAaC,IAAnC,IACJc,OAAQ,CAAEC,KAAM,gBAGjBC,YAAa,CAAEC,WAAY,CAAEC,UAAU,kBAAD,OAAoB,IAAIvB,IAAiB,EAAMK,GAA/C,aACtCmB,MAAO,CAAC,CAAEC,OAAQ,CAAEC,UAAW,WAAc,OAAOh8B,KAAKi8B,KAAKC,sBAAsB91B,KAAKpG,MAAQ+6B,MACjGoB,MAAO,CAAEV,OAAQ,CAAEW,gBAAiB,SAAS3pB,OAC7C4pB,OAAQrB,EAAM/8B,KAAI,SAACo+B,EAAQn+B,GAAT,MAAgB,CAAE8H,KAAMq2B,EAAOr2B,KAAMgL,KAAM,aAAcsrB,QAAS,CAAEvB,eAAe7M,MAAO2M,GAAa38B,GAAUU,KAAMy9B,EAAOz9B,MAAQ,WAGtJ29B,GAAgB,SAACv2B,EAAMpH,GAAP,MAAiB,CAAEoH,OAAMpH,SAEvC49B,G,kLAAoDx8B,KAAKk0B,mBAAmBt1B,KAAM,c,0BAClF6B,EAAGrD,GAAK,OAAO,kBAACsvB,EAAA,EAAD,KAAMoO,GAAM,aAAc,KAAM,CAACyB,GAAc,MAAOn/B,EAAEmS,WAAY9O,EAAEk6B,W,GAD9D3T,IAIhBjC,GAAb,kLACuB,IAAD,OAAE,4EAA2B9gB,KAAeC,OAAOjF,YAAE,6BAA6BhB,KAAI,SAAAE,GAAC,OAAI,EAAK+1B,mBAAmBt1B,KAAMT,QAD/I,0BAGMsC,EAAGrD,GAAK,IAAIq/B,EAAa,SAAAr+B,GAAC,OAAIZ,YAAEY,GAAF,UAAUA,GAAK,EAAI,IAAM,KAAzB,OAA+BA,EAA/B,KAAsC,IAClEs+B,EAAQ18B,KAAKu0B,kBACboI,EAAe,CAAEvqB,YAAaqqB,EAAYG,IAAK,SAAAx+B,GAAC,gBAAOoR,SAASpR,GAAG4M,KAAKwG,IAAI,GAAIpU,EAAEy/B,UAAlC,UAChDC,EAAQ,SAAAr8B,GAAC,OAAIA,EAAExC,KAAI,SAACwU,EAAGvU,GAAJ,OAAU,uBAAGgD,IAAKhD,GAAIuU,OAC7C,OAAO4b,GAAS,EAAE,EAAG,CAAC5tB,EAAEs8B,UAAUvyB,SAAW,CAAC,kBAAC,GAAD,CAAY9D,SAAUjG,EAAEiG,YAAetH,IACnF,CAACivB,GAAS,EAAE,EAAG,CAAC,CAACA,GAAS,EAAE,EAAG,CAAC,CAACyO,EAAMt/B,YAAEk/B,EAAM9pB,iBAAoB,CAAC,GAAD,OAAIyR,aAAmBqY,EAAM9pB,iBAA7B,4BAA2E,KAAM,CAACkqB,EAAM,CAACL,EAAWr/B,EAAE+U,KAAd,WAAgC,kBAAC,GAAD,CAAgBwoB,KAAMl6B,EAAEk6B,WACnN,CAACtM,GAAS,EAAE,EAAG,CAACpvB,YAAE,4BAA4BhB,KAAI,SAACG,EAAGF,GAAJ,gBAAaE,EAAb,cAAoBu+B,EAAav+B,IAAMC,KAAGjB,EAAEgB,WAC9F,CAACs+B,EAAM/mB,aAAemlB,GAAM,yBAA0B,OAAQ77B,YAAE,wCAAwChB,KAAI,SAAAE,GAAC,OAAIo+B,GAAcp+B,EAAGuB,YAAGg9B,EAAM/mB,YAATjW,GAAwBvB,OAAMsC,EAAEk6B,OAClK,CAAC,kBAAC,GAAD,CAAWj0B,SAAUjG,EAAEiG,SAAUsd,eAAgBvjB,EAAEujB,mBACpD7W,OAAO3P,UAZb,GAAiCy2B,I,8BCpB3B+I,G,kKAA8Bv8B,EAAGrD,GAAK,OAAO,kBAAC,GAAD,CAAa4wB,KAAM,CAAEiP,YAAUC,UAAQC,SAAQlN,SAAUxvB,EAAEwvB,SAAUO,SAAU/vB,EAAE+vB,e,GAA3GxJ,IASrBoW,GAAyB,SAAC38B,GAAD,OTyJT+J,ESzJ6B/J,EAAEs8B,UAAUvyB,STyJ/ByjB,ESzJyC,kBAAM,kBAAC,GAAD,CAAYvnB,SAAUjG,EAAEiG,YTyJhE8D,EAAW,yBAAKihB,MAAO,CAAC4R,YAAa,SAAUC,YAAa,MAAOC,aAAa,UAAYC,YAAa,SAAS,kBAACvP,EAAD,OAAa,KAAjJ,IAACzjB,EAAUyjB,GSvJxBwP,G,kKACAh9B,EAAGrD,GAAI,IAAD,OAAMsgC,EAAc19B,KAAK29B,wBAA0BC,EAAahgC,YAAG4B,YAAGk+B,EAAWxuB,KAAK9R,EAAEwgC,aAGhG,OADJp/B,YAAE,CAACk/B,eACQrP,GAAS,EAAE,EAAG,CAAC,CAACA,GAAS,EAAE,EAAG,CAAC,CAAC,gBAAiBqF,GAAiBgK,EAAWvuB,aAAc2jB,GAAgBG,YAAY5F,YAAYqQ,EAAWvuB,mBACrJ,CAACqjB,GAASh0B,YAAEgB,YAAGk+B,EAAWxuB,KAAKjR,KAAI,SAAA4P,GAAE,OAAIpP,YAAEoP,EAAI5O,YAAE,iCAAgC,CAAE4B,SAAU,SAAA+8B,GAAU,OAAI,EAAK3V,SAAS,CAAE2V,mBAC3H,CAACvP,GAAS,EAAE,EAAG,CAAC,CAACmE,GAASoL,EAAW3vB,KAAMukB,GAASoL,EAAW1vB,gB,GAN7CimB,IAUhB0J,G,kKAAqCp9B,EAAGrD,GAAKoB,YAAE,cAAD,OAAeM,YAAE2B,EAAEiG,YAAc,IAAIE,EAAa1H,YAAGtB,YAAG6C,EAAEiG,UAAUE,YAClHk3B,EAASl3B,EAAW8B,OAAS,EAAK,IAAIq1B,KAAO,CAAE/b,QAASpb,EAAYo3B,IAAK,IAAKnU,MAD2D,IAC/CN,OAD+C,IAClC9kB,MAAM,EAAMw5B,UAAW,cAAeC,gBAAgB,IAAUC,MAAQ/+B,IACnL,OAAOivB,GAAS,EAAE,EAAG,CAAC,CAACyP,EAAS,yBAAKrS,MAAO,CAAC5B,MAAO,OAAQN,OAAQ,QAAS6U,wBAAyB,CAAEC,OAAQP,KAAe,MAAO,CAAC99B,KAAK2xB,aAAa,sCAAuC,CAAE1rB,MAAOW,EAAYyoB,UAAU,W,GAF5MoB,IAKf0M,G,kKAAmC18B,EAAGrD,GAAK,OAAO,kBAACsvB,EAAA,EAAD,U,GAArC+D,IACbyM,G,kKAAqCz8B,EAAGrD,GAAK,OAAO,kBAACsvB,EAAA,EAAD,U,GAArC+D,IACfwM,G,kKAAuCx8B,EAAGrD,GAAK,OAAO4zB,GAAK,KAAM,CAAC,CAAChxB,KAAK2xB,aAAa,KAAM,iCAAkC,CAAC3xB,KAAK2xB,aAAa,SAAU,sBAAuB,CAAC3xB,KAAK2xB,aAAa,e,GAAnLlB,IAEV5L,GAAb,kKAA+CpkB,EAAGrD,GAAK,IAAIsJ,EAAW9I,YAAG6C,EAAEiG,UAGzE,OAFKlJ,YAAEkJ,EAASE,aAAepJ,YAAEkJ,EAAS2M,UAAS3M,EAASE,WAAayP,aAAmB3P,EAAS2M,UAChG7V,YAAEkJ,EAASqM,aAAevV,YAAEkJ,EAAS2M,UAAS3M,EAASqM,WAAaqD,aAAmB1P,EAAS2M,SAC9F,oCAAGgb,GAAS,EAAE,EAAG,CAAC,CAAC+O,GAAuB38B,IAC/C,CAAC,kBAAC,GAAD,CAAYutB,KAAM,CAAEyP,WAASI,UAAQb,eAAcvN,YAAW,aAAG/oB,YAAcjI,YAAEgC,EAAGxB,YAAE,yBACzF,CAACwB,EAAEujB,eAAiB,kBAAC,GAAD,CAAWtd,SAAUA,EAAUsd,eAAgBvjB,EAAEujB,iBAAoB,aAL3F,GAAoCgD,I,SClBhC1O,GAAM,IAAIgmB,IAAIn7B,OAAOC,SAASkvB,MAC9BiM,GAAc,SAAApgC,GAAC,OAAgB,QAAXC,EAAyBka,GAAIkmB,aAAa90B,IAAIvL,IAA5BiB,IAAIhB,EAAtB,IAAAA,GACpB2+B,GAAYl/B,YAAEoB,YAAE,yCAAyChB,KAAI,SAAAE,GAAC,MAAI,CAACA,EAAGogC,GAAYpgC,QACtF4+B,GAAUvyB,SAAWhN,YAAEgB,YAAE+/B,GAAY,sE,IAoCjCE,GAlCExZ,G,kLACgB7mB,GAAKQ,KAAKyJ,aAAa9E,KAAiBnF,M,0BACxDqC,EAAGrD,GAAI,IAAD,OACR,OAAOixB,GAAS,EAAE,EAAG,CACnB,CAAC,kBAAC,GAAD,CAAU/iB,QAAS/H,KAAkBilB,UAAW,SAAApqB,GAAC,OAAI,EAAKsgC,oBAAoBtgC,OAC/E,CAACgwB,GAAO,gBAAgB,WAAQxvB,KAAK+/B,mC,GALpB3X,IAUjB4X,G,kLACgBxgC,GAAKQ,KAAKyJ,aAAa9E,KAAiBnF,M,0BACxDqC,EAAGrD,GACL,OAAOixB,GAAS,EAAE,EAAG,CACnB,CAACD,GAAO,mBAAD,sBAAqB,sBAAA3uB,EAAA,sEAAoBb,KAAKigC,aAAzB,6CAC5B,CAACzQ,GAAO,kCAAD,sBAAoC,sBAAA3uB,EAAA,sEAAoBb,KAAKkgC,sBAAsB,OAA/C,6CAC3C,CAAC1Q,GAAO,8CAAD,sBAAgD,sBAAA3uB,EAAA,sEAAoBb,KAAKkgC,sBAAsB,OAA/C,mD,GANzC9X,IAYd+X,G,kKACAt+B,EAAGrD,GAAI,IAAD,OAAM4wB,EAAO3wB,YAAE,CAAEwnB,kBAAgBE,gBAAetkB,EAAEsjB,UAAU7Z,MAAS,CAAEib,YAAUjb,SAAOovB,WAASrU,YAAU2Z,UAAY,IAE/H,OAAO,oCAAE,kBAAC,GAAD,MAAmBn+B,EAAEsjB,UAAUib,OAASxhC,YAAEiD,EAAEiG,UAAa,kBAAC,GAAD,CAAO8pB,SAAU,SAAAjoB,GAAC,OAAI,EAAK02B,cAAc12B,MAC3G,yBAAKukB,MAAM,OAAOrB,MAAO,CAAC5B,MAAO,OAAQN,OAAQ,SAAS,oCAAE,kBAAC2V,EAAA,EAAD,CAAQvV,SAAS,UAAS,kBAACwV,EAAA,EAAD,KAAU1+B,EAAEujB,eAAewQ,UAAY,kBAAC,GAAD,CAAkBrT,GAAG,QAAQ+K,KAAMgN,GAAO1I,SAAU,SAAAjoB,GAAC,OAAI,EAAK02B,cAAc12B,MAAQ,KAC9M/K,YAAEiD,EAAEiG,UAAY,2EAAmCjG,EAAEiG,SAASV,KAA9C,KAAuDooB,GAAO,WAAW,iBAAQ,OAAY,0BAEhH,kBAAC,GAAD,CAAYJ,KAAMA,EAAMyB,YAAW,eAAMhxB,YAAEgC,EAAGxB,YAAE,sDAAwD8vB,YAAa,SAAAzH,GAAK,OAC1H+G,GAAS,EAAG,CAAC,CAAC,kBAAC+Q,EAAA,EAAD,KAAO,yBAAKC,IAAI,cAAc5T,MAAO,CAAC5B,MAAO,OAAQN,OAAQ,QAAS4I,IAAI,iBAAyB,CAAC,8BAAQ,CAAC,kBAAC,GAAD,eAASnE,KAAMA,GAAU1G,QAAauB,YAAY,IAC7K,kBAAC,GAAD,CAAgB1K,KAAM/gB,EAAEg6B,qBAAsB,EAAOtK,MAAK,UAAK1vB,EAAEkiC,gBAAP,cAAoCz3B,SAAUzK,EAAEmiC,6B,GATvFhG,IAanBwD,GAAUyC,eAAcf,GAAiB,CAAE7/B,KAAMm+B,GAAUyC,eAC3DzC,GAAU0C,cAAahB,GAAiB,CAAE7/B,KAAMJ,YAAE,KAAO4X,aAAmB2mB,GAAU0C,cAAepsB,OAAQ0pB,GAAU0C,YAAa74B,WAAYpI,YAAE6X,aAAmB0mB,GAAU0C,gBAEnLjhC,YAAE,8BAAD,OAA+BM,YAAE2/B,M,IAiB5BiB,G,kDAAuC,WAAYj/B,EAAGrD,GAAI,IAAD,yCAAQqD,EAAR,2BAAerD,GAAf,IAAkBuiC,cAAc,UAAAviC,EAAEw3B,cAAF,eAAUM,YAAa93B,EAAEsJ,WAAW,mC,gDAC7HjG,EAAGrD,GAAK,OAAOixB,GAAS,EAAE,EAAG,CAAC,CAACruB,KAAK2xB,aAAa,aAAc3xB,KAAK2xB,aAAa,cAAe3xB,KAAK2xB,aAAa,mB,iCAC7F,OAAS3xB,KAAKi4B,UAAlB,KAAoCj4B,KAAKknB,MAAM3nB,W,GAF3CkxB,IAKrBmP,G,kDAAmB,WAAYn/B,GAAI,IAAD,8BAAE,cAAMA,EAAN,aAAWm0B,UAAQ6J,mBAAmB1gC,YAAE,CAACimB,oBAAgBD,eAAWE,gBAAYC,SAAoBgD,MAAM2Y,MAAQ,EAAKC,cAAzH,E,0DACxBR,EAAiBthC,GAAI,IAAD,OAAEgC,KAAKioB,SAAS,CAAEqX,kBAAiBlI,oBAAoB,IAAQ,kBAAMrd,WAAU,sBAAC,sBAAAta,EAAA,sEAAoBzB,IAApB,OAAyB,EAAKiqB,SAAS,CAAEmP,oBAAoB,GAAS,EAAK2I,sBAA3E,2CAAoG,U,+KACjLnhC,KAAK2I,KAAK4C,UAAU/J,Q,uBACjDxB,KAAKohC,QAAQjc,KAAUib,M,uBAAapgC,KAAK2I,KAAK7C,KAAKtE,Q,QACzD,UAAIJ,KAAKknB,MAAMyY,oBAAf,aAAI,EAAyB/gC,OAAMA,KAAKqhC,wBAAL,UAA6BjgC,KAAKknB,MAAMyY,oBAAxC,aAA6B,EAAyB/gC,M,iJAErE,IAAD,SAAEoB,KAAKioB,SAAS,CAAEvhB,UAAU,UAAA1G,KAAKknB,MAAM0N,cAAX,eAAmBM,YAAal1B,KAAKknB,MAAMuX,iBAAkB,kBAAM,EAAKyB,4B,uCACxGhiC,GAAI,IAAD,OAAEM,YAAE,gBAAD,OAAiBM,YAAEZ,KAAWV,YAAEU,KAAMA,EAAEU,KAAOV,EAAEU,MAAQV,EAAE6U,WAAY/S,KAAKioB,SAAS,CAAEwW,eAAgBvgC,GAAhC,sBAAqC,sBAAAuB,EAAA,+EAAY,EAAKsgC,sBAAjB,+C,kCACvHx3B,GAAI,IAAD,OAGb,OAFIA,EAAE8R,UAAara,KAAKmgC,cAAc,cAAc,kBAAMvL,GAAOjb,IAAIpR,EAAEssB,MAAOtsB,EAAE8R,WAAW,SAAA5O,GAAM,OAAI,EAAKwc,SAAS,CAAEsX,oBAAqB9zB,EAAO20B,gBAC1IpgC,KAAKmgC,cAAc,cAAc,kBAAMvL,GAAOzW,KAAK5V,EAAEssB,OAAO,SAAAppB,GAAM,OAAI,EAAKwc,SAAS,CAAEsX,oBAAqB9zB,EAAO20B,iBAClH,I,yCAEUC,EAAWC,GAAiBA,EAAUvc,YAAc/jB,KAAKknB,MAAMnD,WAAWnlB,KAAKohC,QAAQhgC,KAAKknB,MAAMnD,a,+BAC1G,IAAI3mB,EAAI4C,KAAKknB,MAAO,OAAQ1pB,YAAGJ,EAAE6mB,YAAe7mB,EAAE6mB,UAAUsc,QAAUpG,GAAW38B,YAAEJ,EAAE6mB,UAAUuc,Q,oCAC1F,IAAI7F,EAAO36B,KAAKygC,SAE9B,OADApjC,YAAEqjC,SAAS97B,KAAK6mB,MAAO,CAAEyC,MAAOuM,IAAa,EAAME,GAAOC,gBAAiBH,IAAa,EAAOE,KACxFgG,YAAe,CAAEC,QAAS,CAAE5vB,KAAM2pB,EAAO,OAAS,a,0BAEvDl6B,EAAGrD,GAAI,IAAD,OACR,OAAO,yBAAK0vB,MAAM,MAAMrB,MAAO,CAAC5B,MAAO,OAAQN,OAAQ,SAAS,kBAACsX,EAAA,EAAD,CAAehB,MAAOziC,EAAEyiC,OAAQ9C,GAAUvyB,SAAW,oCAClH6jB,GAAS,EAAE,EAAG,CAAC,YAAI3wB,YAAE,CAACqmB,eAAWC,oBAAgBC,iBAAYhmB,KAAI,mCAAEE,EAAF,KAAKC,EAAL,YAAY,kBAAC,GAAD,CAAUkN,QAAShN,YAAEF,GAAGH,IAAI6oB,IAAY+B,YAAY,EAAML,UAAW,SAAAtqB,GAAC,OAAI,EAAK+pB,SAAUtoB,YAAgBxB,EAAGwB,YAAgBrB,YAAEF,GAAGF,GAAIoB,YAAElB,GAAGF,MAAO,kBAAM,EAAK+pB,SAAS,CAAE4X,MAAO,EAAKC,4BACjQ,kBAAC,GAAD,eAActU,QAAS,wCAAyCmJ,0BAA2B,SAAAjuB,GAAQ,OAAI,EAAKuhB,SAAU,CAAEvhB,eAAmBjI,YAAErB,EAAG6B,YAAE,+BAClJ,kBAAC,GAAD,CAAYyH,SAAUtJ,EAAEuiC,gBACpB,KACLtR,GAAS,EAAE,EAAG,CAAC,CAAC,kBAAC,GAAD,CAAc7F,UAAW,SAAAsY,GAAc,OAAI,EAAK7Y,SAAS,CAAE6Y,sBAAsB1S,GAAO,YAAY,kBAAM,EAAK2S,iBAAiB3jC,EAAE0jC,sBACnJ,6ECxHiB,IDwHjB,gIACA,6BACA,kBAAC,GAAD,iBAAeriC,YAAErB,EAAG6B,YAAE,sCAAtB,CAA8DggC,cAAe,SAAA12B,GAAC,OAAI,EAAKy4B,aAAaz4B,IAAIw0B,UAAWA,GAAWpC,KAAM36B,KAAKygC,kB,GA5B3HzZ,IElFEia,QAEa,cAA7B99B,OAAOC,SAASF,UAAyD,UAA7BC,OAAOC,SAASF,UAAwBC,OAAOC,SAASF,SAAS0f,MAAM,2DCRvHse,IAASC,OAAQ,kBAAC,IAAMC,WAAP,KAAkB,kBAAC,GAAD,CAAKtU,MAAM,SAFtC,SAAChkB,EAAGrI,GAAQ,IAAIgS,EAAIiuB,SAASlR,cAAc1mB,GAAsB,OAAlBrI,EAAE4gC,YAAY5uB,GAAWA,EAEJ6uB,CAAE,MAAOZ,SAAS97B,ODgHxF,kBAAmBy2B,WACrBA,UAAUkG,cAAcC,MACrBzhB,MAAK,SAAA0hB,GACJA,EAAaC,gBAEd5hB,OAAM,SAAAtJ,GACLmrB,QAAQnrB,MAAMA,EAAMorB,c","file":"static/js/main.ef4efdfc.chunk.js","sourcesContent":["// Type-checking\nlet isA = Array.isArray;\nlet isF = f => typeof f === \"function\";\nlet isP = o => D(o.then) && isF(o.then);\nlet isO = o => typeof o === \"object\" && o != null && !isA(o);\nlet isS = s => typeof s === \"string\";\n\nlet A = Object.assign;\nlet B = (a, k, t) => { let r = {}; a.forEach(b => { let y = r[b[(t || I)(k)]]; if (y) { y.push(b); } else { r[b[(t || I)(k)]] = [b]; } }); return r; }\nlet C = x => x && P(x, K(x));\nlet D = x => typeof x !== \"undefined\";\nlet E = o => Object.entries(oO(o));\nlet F = Object.fromEntries; \nlet G = (o, f) => F(E(o).map(([k, v], i) => [k, f(v, k, i, o)]));\nlet GA = async (o, f) => F(await E(oO(o)).map(async ([k, v], i) => [k, await f(v, k, i, o)]));\nlet H = (f, o) => G(o, (v, k, i, o) => isO(v) ? H(f, v) : f(v, k, i, o));\nlet I = x => x;\nlet K = Object.keys;\nlet LL = x => { console.log(S(x)); return x; }\nlet L = x => {  if (process.env.NODE_ENV === \"development\") LL(x); return x; }\nlet P = (o, keys) => F(keys.map(k => [k, o[k]]));\nlet R = (msg, data) => A(new Error(msg), oO(data));\nlet S = JSON.stringify;\nlet T = s => oS(s).split(\" \");\nlet U = undefined;\nlet V = Object.values; \nlet W = async o => F(await Promise.all(E(o).map(async ([k, v]) => [k, await v])));\n\n// Optionals\nlet oA = a => a || [];\nlet oB = b => b || false;\nlet oF = f => f || (() => {});\nlet oO = o => o || {};\nlet oS = s => isS(s) ? s : \"\"; \n\nlet asA = a => (b => isA(b) ? b : [b])(oA(a))\n\nlet singleKeyObject = (k, v) => { let o = {}; o[k] = v; return o; }\nlet makeEnum = soo => Object.freeze(F(T(soo).map(k => [k, singleKeyObject(k, true)]))); \n\nclass Future { \n  constructor() { A(this, { creationTime: Date.now(), promise: new Promise((resolve, reject) => A(this, { resolve: x => { this.resolveTime = Date.now(); resolve(x) }, reject })) }); } \n  async resolveWithPromise(p) { try { return this.resolve(await p); } catch(e) { return this.reject(e); } }\n}\nlet future = () => new Future();\n\nexport { A, B, C, D, E, F, G, GA, H, I, K, L, LL, P, R, S, T, U, V, W, oA, oB, oO, oS, oF, isA, isO, isF, isS, isP, asA, Future, future, singleKeyObject, makeEnum }","import { A, D, E, oA } from './tools.mjs';\n\nclass Observer {\n  constructor(observable, onChange, context, index) { A(this, { observable, onChange, context, index }); }\n  detach() { this.observable.remove(this); }\n}\n\nclass Observable {\n  constructor() { A(this, { observers: {}, observerIx: 0 }); }\n  watch(key, onChange, context) {\n    let obs = new Observer(this, onChange, context, this.observerIx++);\n    (this.observers[key] = oA(this.observers[key])).push(obs);\n    if (D(this.data[key])) obs.onChange(this.data[key], context);\n    return obs;\n  }\n  observe(key, data) { oA(this.observers[key]).forEach(o => o.onChange(data, o.context)); return data; }\n  remove(obs) {\n    if (D(this.observers[obs.index])) delete this.observers[obs.index];\n  }\n}\n\nclass SyncCache extends Observable {\n  constructor() { super(); A(this, { data: {} }); }\n  setData(key, data) { this.observe(key, this.data[key] = data); return data; } //  L(`syncCache.setData(${key}, ${S(data)})`);\n  getData(key, retriever) { return this.data[key] = (D(this.data[key]) ? this.data[key] : (retriever && this.observe(key, retriever()))); }\n  set(obj) { E(obj).forEach(([k, v]) => this.setData(k, v)); }\n}\n\nexport { SyncCache } ","/* eslint no-unused-vars: 0 */\n/* eslint no-loop-func: 0 */\nimport amfeixCjson from '../amfeixC.json'; \n// eslint-disable-next-line\nimport { A, D, E, F, G, H, I, K, L, S, T, P, U, V, W, oA, oO, oF, oS, isO, isA, isS, future, singleKeyObject, makeEnum } from '../common/tools'; \nimport { IndexedDB } from './db'; \nimport { Persistent } from './persistent';\nimport { BN, ALPHABET }  from './bignumber';\nimport JSONBig from 'json-bigint'; \n//import Accounts from 'web3-eth-accounts';\n//import aggregate from './aggregate.js';\nimport { satoshiToBTCFloat } from './satoshi';\nimport { pubKeyToEthAddress, pubKeyToBtcAddress } from \"../common/pubKeyConvertor\";\nimport { SyncCache } from '../common/syncCache'; \nimport { ETransactionType } from './enums.js';\nimport { amfx, amfeixAddress } from './amfeixContract';\nimport bs58check from 'bs58check';  \nimport nodeFetch from 'node-fetch';\nimport crossFetch from 'cross-fetch';\n\nglobal.fetch = nodeFetch;\n\n//global.document = {}\n//global.window = { document: {}, location: \"localhost\" }\n\nlet newDB = false; // || true;   \n \nlet stati = { Deposits: makeEnum(\"Active Withdrawn Pending_Withdrawal\"), Pending_Withdrawals: makeEnum(\"Pending Processed\") }; \n\nlet anomalousInvestorIndexMap = F([2339, 74, 418, 419, 424, 464, 515, 3429, 515, 1061, 3428, 3429, 3437, 3438].map(i => [(i), true]));\n\nlet b64ToHex = v => Buffer.from(v, 'base64').toString('hex');\nlet hexToBtcAddress = v => bs58check.encode(Buffer.from(v, 'hex'));\nlet decodeFundDeposit = s => (([timestamp, amountX, transactionX, fromPubKeyX]) => { let fromPubKey = b64ToHex(fromPubKeyX);\n  return {timestamp, txId: b64ToHex(transactionX), fromPubKey, fromBtcAddress: pubKeyToBtcAddress(fromPubKey), satoshiBN: BN(b64ToHex(amountX), 16)}; } )(T(s)); \nlet decodeDeposit = s => (([timestamp, amountX, transactionX, fromBtcAddressX]) => {  \n  return {timestamp, txId: b64ToHex(transactionX), fromBtcAddress: fromBtcAddressX && bs58check.encode(Buffer.from(fromBtcAddressX, 'base64')), satoshiBN: BN(b64ToHex(amountX), 16)}; } )(T(s)); \n  \nlet hostname = window.location.hostname, amfeixUK  = \"amfeix.uk\";\nif (hostname === \"localhost\") hostname = amfeixUK;\nconst btcRpcUrl = `https://btc.${amfeixUK}/`, ethInterfaceUrl = `https://eth.${amfeixUK}/`; //\"ws://46.101.6.38/ws\";  \nconst ethInterfaceUrls = [ethInterfaceUrl, ethInterfaceUrl + 'ganache/']; //\"ws://46.101.6.38/ws\";  \n//ethInterfaceUrl = \"http://46.101.6.38:8547/\";  \n//const web3 =  new Web3(new Web3.providers.HttpProvider(\"https://mainnet.infura.io/v3/efc3fa619c294bc194161b66d8f3585e\"));\nlet invMap = (countTable, dataTable) => ({countTable, dataTable}); \nlet timeAndAmount = T(\"time amount\"), amfeixFeeFields = T(\"fee1 fee2 fee3\"), amfeixAddressLists = T(\"fundDepositAddresses feeAddresses\"), btcFields = T(\"blockcount connectioncount difficulty blockchaininfo\");\nlet indexMaps = amfeixAddressLists, investorMaps = [invMap(\"ntx\", \"fundTx\"), invMap(\"rtx\", \"reqWD\")]; \nlet ethBasicFields = T(\"owner aum decimals btcPrice\").concat(amfeixFeeFields).concat(amfeixAddressLists.map(k => `${k}Length`));\n\nlet btcRpc = async (method, func, params) => JSONBig.parse((await ((await fetch(`${btcRpcUrl}${func}/${method === \"GET\" && params ? `?${E(oO(params)).map(x => x.map(encodeURIComponent).join(\"=\")).join(\"&\")}` : ''}`, \n { method, mode: 'cors', headers: { \"content-type\": \"application/json\" }, ...(method === \"POST\" ? { body: S({params}) }: {}) })).text())));\n\nlet invMapDBStruc = ({countTable, dataTable}) => ({ ...singleKeyObject(countTable, struc([\"investorIx\"])), ...singleKeyObject(dataTable, struc([\"investorIx\", \"index\"], [[\"investorIx\", \"investorIx\", false]])) })\n \nexport let tableStrucMap = {}\nlet hierName = (o, p) => F(E(o).map(([k, v]) => { let q = p ? [p, k].join(\"-\") : k; return [k, isA(v) ? (tableStrucMap[q] = {...v[0], table: q}, q) : hierName(v, q)]; }));\nlet struc = (keyPath, indices) => [{ keyPath, indices }];\nlet tables = hierName({ \n  eth: { constants: struc([\"name\"], [[\"name\", \"name\", true]]),  ...invMapDBStruc(investorMaps[0]), ...invMapDBStruc(investorMaps[1]), \n  ...F(timeAndAmount.concat(indexMaps).map(k => [k, struc([\"index\"])])), investorsAddresses: struc([\"index\"], [[\"data\", \"data\", true]])  }, \n  btc: { constants: struc([\"name\"], [[\"name\", \"name\", true]]), ...invMapDBStruc(investorMaps[0]), ...invMapDBStruc(investorMaps[1]) },\n  queue: { ethTransactions: struc([\"index\"]) }\n}); \n\nlet constantFields = { btc: btcFields, eth: ethBasicFields };\nlet constantRetrievers = { \n  btc: name => async () => ({ name, value: await btcRpc(\"GET\", `get${name}`) }),\n  eth: name => async () => ({ name, value: await amfx.amfeixM()[name]().call() })\n} \n\nlet timeFunc = async f => {\n  let startTime = Date.now();\n  let result = await f();\n  return { result, time: Date.now() - startTime };\n}\n \nlet getInvestorDataKey = investor => `investor_${investor.data}`;\nlet getInvestorWalletDataKey = investor => `investor_Wallet_${investor.btcAddress}`; \n\nclass Transaction { constructor(method, parms) { A(this, { method, parms }); } }\n\nclass Scheduler {\n  constructor(interval, onUpdate) {\n    this.intervalHandle = setInterval(async () => { await onUpdate(); this.lastUpdate = Date.now(); }, interval);\n  }\n}\n\nlet fetchDeposits = async (fromPubKey, toAddr) => L(oA(oO(await btcRpc(\"GET\", L(`getdeposits/toAddress/${toAddr || '_'}/fromPublicKey/${fromPubKey || '_'}`))).data).map(decodeDeposit));\n\nclass Data extends Persistent {\n  constructor() { super(\"data\", [\"localData\"], { localData: { dbix: 1173 } }); L('Creating Data class instance.'); \n    if (newDB) this.localData.dbix++; \n    let f = T(\"dbInit basicLoad loadBasicFields loadTimeData investorsAddressesLoad computePerformance computeAllInvestorData loadTransactionsForMonitoredInvestors updateRegisteredEthTransactions updateRegisteredBtcTransactions fetchFundDeposits\");\n    this.futStack = []; \n    this.computeFuture = k => async () => await this.futs[k].resolveWithPromise((async () => { this.futStack.push(k); L(`> ${this.futStack.join(\"\\\\\")}`); await this[k](); L(`# ${this.futStack.join(\"\\\\\")}`); this.futStack.pop();  })());\n    f.forEach(k => this[\"_\" + k] = async () => await this.computeFuture(k)()); \n    this.futs = F(f.concat(T(\"mode modeSet\")).map(k => [k, future()]));\n    this.dataProperties = T(\"time amount queuedEthTransactions feeAddresses fundDepositAddresses investorsAddresses performance\");\n    A(this, { tables, tableStrucMap, investorData: {}, observers: {}, data: {}, loadProgress: { progress: {}, timings: {} }, syncCache: new SyncCache(), idb: new IndexedDB(S(this.localData.dbix)), adminLoadInitiated: false, queuedEthTransactions: [] }); \n    this.persist(); \n     \n    this.setEthRPCUrl(ethInterfaceUrl); \n    this.onLoadProgress = name => d => { this.loadProgress.progress[name] = d; this.syncCache.setData(\"loadProgress\", this.loadProgress); };\n    this.onGlobalLoad = (step, length, done) => this.updateLoadProgress(this.onLoadProgress(\"Loading...\"), step, length || 3, done);\n    this.updateConstants = G(constantFields, (f, t) => () => this.measureTime(`Constants (${t})`, async () => await Promise.all(f.map(async name => { \n      let result = (await constantRetrievers[t](name)());\n      this.setSync(name, result.value); \n      await this.setData(tables[t].constants, (result));\n    }))));\n    this.updateConstants.eth = () => this.measureTime(`Constants (eth)`, async () => { \n      let buf = this.idb.newBuffer();\n      constantFields.eth.forEach(name => amfx.queueOp(name, [], value => { this.setSync(name, value); buf.write(tables.eth.constants, { name, value }); }, err => L(`Eth constant retrieval error ${S(err)}`))); \n      await amfx.flushBatch(); await buf.flush();\n    }); \n\n    this.dataProperties.forEach(k => Object.defineProperty(this, k, { get: () => this.getSync(k), set: v => this.setSync(k, v) }));\n\n    (async () => { await this._dbInit(); this.setSync(L(\"dbInitialized\"), true); return await this._basicLoad(); })(); \n    this.constructorCompleted = true; \n  }\n\n  async dbInit() { await this.idb.init(); }\n\n  async setMode(mode) { \n    this.mode = mode; \n    this.futs.modeSet.resolve(this.mode);\n    if (mode.Admin) { await this.futs.basicLoad.promise; await this._investorsAddressesLoad(); await this._loadTransactionsForMonitoredInvestors(); } \n    this.futs.mode.resolve(this.mode);\n  }\n\n  setSync(k, v) { return this.syncCache.setData(k, v); }\n  getSync(k) { return this.syncCache.getData(k); } \n\n  async signAndSubmitQueuedEthTransactions(privateKey, testMode) { await this.measureTime(\"Basic Load\", async () => {\n    let from = \"0xADBfBEd800B49f84732F6D95fF5C924173C2C06A\";\n    L(`Generating ${this.queuedEthTransactions.length} transactions...`);\n    L({privateKey});\n    testMode = true;\n    L({accounts: await amfx.web3.eth.personal.getAccounts()})\n    let account = amfx.web3.eth.accounts.privateKeyToAccount(privateKey); \n    this.queuedEthTransactions = await Promise.all(this.queuedEthTransactions.map(async t => {\n      L(`Pending tx: ${S(t)}`);\n      let u = amfx.amfeixM()[t.method](...t.parms); \n//      L(`u = ${S(u)}`);\n      let options = L({from, to: amfeixAddress, gas: Math.max(25000, await u.estimateGas({ from, to: amfeixAddress })), data: u.encodeABI() });\n      let z = await amfx.web3.eth.sendTransaction(options); L(`Sendtransaction result = ${S(z)}`); \n//      let x = await account.signTransaction(options); L(`Signed tx: ${S(x)}`);\n  //    let z = await w3.web3.eth.sendSignedTransaction(x.rawTransaction); L(`Submitted tx: ${S(z)}`);\n      return ({ ...t, ...P(z, T(\"gasUsed blockNumber transactionHash\")), status: z.status === true ? \"Submitted\" : \"Failed\" });\n    })); \n  })}\n\n  runWhenDBInitialized(f) { (async () => { await this.futs.dbInit.promise; f(); })(); }\n\n  async updateFixedLengthArray(name) { await this.measureTime(`Update '${name}' array`, () => this.updateArray(name, `${name}Length`)) }\n\n  async updateSyncCache() { await Promise.all(T(\"investorsAddresses\").map(async t => this.setSync(t, (await this.idb.getAll(tables.eth[t]))))); } \n  async basicLoad() { this.onGlobalLoad(0); await this._loadBasicFields(); await this._computePerformance(); this.onGlobalLoad(3); } \n  async loadBasicFields() { await (Promise.all([this._loadTimeData(), ...V(this.updateConstants).map(x => x()), ...indexMaps.map(l => this.updateFixedLengthArray(l))])); L('L1a');  this.onGlobalLoad(1); L('L1');  }\n  async updateRegisteredEthTransactions() { await Promise.all(investorMaps.map(m => this.updateInvestorMappedArray(this.onLoadProgress(`Smart contract registered transactions: ${m.dataTable}`), m)));  }\n  async updateRegisteredBtcTransactions() { let fundDepositObj = F(this.getSync(\"fundDeposits\").flat().map(x => [x.txId, x]));\n    await Promise.all(investorMaps.map(m => this.updateBitcoinTxs(this.onLoadProgress(`Bitcoin transactions: ${m.dataTable}`), m, fundDepositObj))); \n  }\n  async investorsAddressesLoad() { await (this.updateArray(\"investorsAddresses\")); this.onGlobalLoad(4, 7, false); }\n\n  async loadTransactionsForMonitoredInvestors() { await this.measureTime(\"loadTransactionsForMonitoredInvestors\", async () => {\n    await Promise.all([this._updateRegisteredEthTransactions(), this._fetchFundDeposits()]); this.onGlobalLoad(5);\n    await this._updateRegisteredBtcTransactions(); this.onGlobalLoad(6);\n    await this._computeAllInvestorData(); this.onGlobalLoad(7, 7, true);\n //   for (let q of oA(this.functionsToPerformAfterGenericLoad)) await q();\n  }); } \n\n  async registerInvestorAddress(address) { await this.updateSyncCache(); L(`registerInvestorAddress ${address}`);\n    let index = this.investorsAddresses.find(v => v.data && (v.data.toLowerCase() === address.toLowerCase())) \n    index = this.investorsAddresses[index].index;\n    if (index >= 0) { let investor = await this.setData(tables.eth.investorsAddresses, L({ index, data: address }));\n      let localBuf = this.idb.newBuffer();\n      let p = Promise.all(investorMaps.map(m => this.updateInvestorTxs(investor, m, localBuf, amfx))); \n      await amfx.flushBatch(); await localBuf.flush(); await p;\n      return investor;\n    } \n  }\nf\n  setEthRPCUrl(newRPCUrl) { //L(`nweRPCURL: ${newRPCUrl}`)\n    amfx.setWeb3Url(newRPCUrl);\n    this.setSync(\"ethRPCUrl\", newRPCUrl);\n//    (async() => L(`Personal accounts: ${S(await oF(oO(w3.web3.eth.personal).getAccounts)())}`))();\n  }\n\n  getFundDepositAddresses() { return L(oA(this.syncCache.getData(\"fundDepositAddresses\"))).map(x => x.data).filter(z => z.length > 0); }\n  getFundDepositPubKeys() { return [\"03f1da9523bf0936bfe1fed5cd34921e94a78cac1ea4cfd36b716e440fb8de90aa\"]; }\n\n  async fetchFundDeposits() { this.syncCache.set({ fundDeposits: await Promise.all(this.getFundDepositAddresses().map(a => fetchDeposits(U, a))) }); };\n\n  async retrieveInvestorWalletData(investor) { L({investor}); if (investor.btcAddress) {\n    let key = getInvestorWalletDataKey(investor);\n    let cached = await this.syncCache.getData(key);\n    if (D(cached)) return cached;  \n    \n    let sum = a => a.reduce((acc, v) => acc.plus(v.delta), BN(0));\n    let getTxs = async address => oA(oO(await btcRpc(\"GET\", L(`gettxs/address/${address}`))).data).map(tx => {\n      let ioMap = a => a.map(x => ({ delta: BN(x.value, 10), btcAddress: hexToBtcAddress(x.addr) })), uniqueAddrs = a => K(F(a.map(x => [oS(x.btcAddress), true])));\n      let ins = ioMap(tx.ins), outs = ioMap(tx.outs), froms = uniqueAddrs(ins), tos = uniqueAddrs(outs); \n      let isInvestment = tos.some(a => this.getFundDepositAddresses().includes(a));\n//      L({tos, isInvestment, fda: this.getFundDepositAddresses()});\n      let fromBTC = froms.length === 1 ? froms[0] : U;\n      let filteredTos = tos.filter(s => s !== fromBTC);\n      let toBTC = filteredTos.length === 1 ? filteredTos[0] : U;\n      let filteredSum = a => sum(a.filter(x => x.btcAddress === investor.btcAddress));\n      let delta = filteredSum(outs).minus(filteredSum(ins));\n      let fee = sum(ins).minus(sum(outs));\n      return {...P(tx, T(\"time txId\")), ins, outs, delta, fee, btcTransferType: isInvestment ? ETransactionType.Investment : ((delta < 0) ? ETransactionType.Outgoing : ETransactionType.Incoming) };\n    });\n    let txs = (await getTxs(investor.btcAddress));\n\n    return this.syncCache.setData(key, L({ finalBalance: sum(txs), txs })); \n  } }\n\n  async loadTimeData() {  \n    let countKey = name => ({ name: `${name}.counts` });\n    let sIx = async name => oO(await this.getData(tables.eth.constants, countKey(name))).startIndex || 0;\n    if ((await sIx(\"time\") === 0) && (await sIx(\"amount\") === 0)) { await this.measureTime(\"Fund Index chart data (single step)\", async () => {\n      let buf = this.idb.newBuffer(), timeData = await amfx.amfeixM().getAll().call(), length = timeData[0].length;\n      for (let index = 0; index < length; ++index) timeAndAmount.forEach((t, i) => buf.write(tables.eth[t], { index, data: (i === 0 ? parseInt : I)(timeData[i][index]) }));\n      timeAndAmount.forEach(name => buf.write(tables.eth.constants, {...countKey(name), startIndex: length }));\n      await buf.flush();\n      timeAndAmount.forEach((t, i) => this.setSync(t, timeData[i].map((data, index) => ({ index, data }))));\n    }) } else { await Promise.all(timeAndAmount.map(l => this.updateArray(l))); }\n  }\n\n  updateLoadProgress(onLoadProgress, index, length, done) { onLoadProgress({ index, length: D(length) ? length : (done ? index : \"unknown\") }); }\n\n  async updateGenericArray(onLoadProgress, name, { length, startIndex }, countKey, countTable, dataTable, parms, buf, w3Batcher) {\n    if (onLoadProgress) this.updateLoadProgress(onLoadProgress, startIndex, length);\n    let index = startIndex || 0;\n    let localBuf = buf || this.idb.newBuffer();\n    let masterKeys = F(oA(tableStrucMap[dataTable].keyPath).map(k => [k, countKey[k]]));\n    let final = async (resolve) => { //L('final');\n      localBuf.write(countTable, ({ ...countKey, startIndex: length, length })); //L('I'); \n      if (!D(buf)) await localBuf.flush();\n      if (onLoadProgress) this.updateLoadProgress(onLoadProgress, length, length, true);\n      resolve();\n    } \n    return new Promise(async (resolve, reject) => { try {\n      let w3b = w3Batcher || amfx;\n      let completed = 0;\n      if (index === length) await final(resolve);\n      while ((index < length)) { let currentIx = index++; \n        w3b.queueOp(name, [...oA(parms), currentIx], async data => {\n          localBuf.write(dataTable, ({ ...masterKeys, index: currentIx, data })); //L('D');\n          if (onLoadProgress) this.updateLoadProgress(onLoadProgress, completed, length);\n          if (++completed === length - startIndex) { await final(resolve); }\n        }, err => { L(`Error in '${name}' array update: ${S(err)}`) });  \n      }\n      if (!D(w3Batcher)) { await amfx.flushBatch(); }\n    } catch(err) { reject(err) } }); \n  }\n\n  async findArrayLength(arrayName, parms) {  \n    let exceedsLength = async l => { try {//L(`Processing item ${index} for ${name} (${dataTable}) with parms = ${S(parms)}`);\n      let data = await (amfx.amfeixM()[arrayName](...oA(parms), l).call()); //L('C');\n      if (isS(data) && data.length === 0) throw new Error(`Empty response for ${arrayName}(${parms})`);\n    } catch { return true; } }\n    let l = 1;\n    while ((l < (1 << 52)) && !await exceedsLength(l)) { l <<= 1; }\n    let low = l >> 1, high = l;\n    while (high > low) { let m = low + ((high - low) >> 1); if (await exceedsLength(m)) { high = m; } else if (low < m) { low = m; } else break; }\n    L(`Found length ${high} for array ${arrayName}`);\n    return high;\n  }\n\n  async updateArray(arrayName, lengthName, parms) { \n    let olp = this.onLoadProgress(`Update '${arrayName}' array`);\n    await this.measureTime(`Update '${arrayName}' array`, async () => { L(`update array ${arrayName}`);\n      let countKey = ({ name: lengthName || `${arrayName}.counts` }); \n      let alsi = (await this.getArrayLengthAndStartIndex(tables.eth.constants, countKey, lengthName, parms)); \n      if (D(alsi.value) && !D(alsi.length)) alsi.length = parseInt(alsi.value);\n      if (!D(alsi.length)) alsi.length = await this.findArrayLength(arrayName, parms);\n      let p = await this.updateGenericArray(olp, arrayName, alsi, countKey, tables.eth.constants, tables.eth[arrayName], parms);//, U, U, () => dp.resolve());\n      await amfx.flushBatch(); await p;\n    });\n    await this.measureTime(`Cache '${arrayName}' array`, async () => this.setSync(arrayName, (await this.idb.getAll(tables.eth[arrayName]))));  \n  } \n\n  async getArrayLengthAndStartIndex(countTable, countKey, lengthName, parms) { \n    return ({ startIndex: 0, ...oO(await this.getData(countTable, countKey, lengthName && (async () => ({ ...countKey, length: parseInt(await amfx.execute(lengthName, parms)) })))) });\n  } \n\n  updateInvestorTxs(investor, { countTable, dataTable }, buf, w3Batcher) { \n    let countKey = { investorIx: investor.index }, parms = [investor.data]; \n    return new Promise(async (resolve, reject) => { try {\n      w3Batcher.queueOp(countTable, parms, async length => {\n        resolve(await this.updateGenericArray(U, dataTable, { startIndex: 0, length: parseInt(length) }, countKey, tables.eth[countTable], tables.eth[dataTable], parms, buf, w3Batcher));\n      }, err => L(`Error while getting array length for '${countTable}-${dataTable}' for investor ${investor.data}: ${S(err)}`));\n    } catch(err) { reject(err); } }); //L(`uima ${dataTable} final`);\n  }\n\n  async updateInvestorMappedArray(onLoadProgress, { countTable, dataTable }) { await this.measureTime(`Update invsetor mapped array '${dataTable}'`, async () => {\n    L(`uima(${countTable}, ${dataTable})`);\n    let { startIndex, length, investorMapCountKey } = await this.getInvestorMapUpdateCountData(countTable, dataTable, `eth`);\n    let ix = startIndex, investors = this.syncCache.getData(\"investorsAddresses\"), localBuf = this.idb.newBuffer(), completed = 0, p = Promise.resolve(), olp = onLoadProgress;\n    length = investors.length;\n    while (ix < length) { let q = p;\n      let r = this.updateInvestorTxs(investors[ix++], { countTable, dataTable }, localBuf, amfx);\n      p = (async () => { await q; await await r; this.updateLoadProgress(olp, ++completed, length); })();\n    };\n    await amfx.flushBatch(); await p;\n    this.updateLoadProgress(olp, ix, length);\n    await amfx.flushBatch(); L(`uima ${dataTable} local buf flush`);\n    await localBuf.flush(); L(`uima ${dataTable} local buf done`);\n    if (ix !== startIndex) await this.setData(tables.eth.constants, ({...investorMapCountKey, startIndex: ix }));\n    L(`uima(${countTable}, ${dataTable}) end`);\n  }); }\n\n  async getInvestorMapUpdateCountData(countTable, dataTable, type, lengthTable) {\n    let investorMapCountKey = { name: `${countTable}-${dataTable}.counts` };\n    let length = lengthTable && await this.idb.count(lengthTable);\n    let startIndex = oO(await this.getData(tables[type].constants, investorMapCountKey)).startIndex || 0;\n    return { startIndex, length, investorMapCountKey, index: startIndex };\n  }\n\n  async updateBitcoinTxs(onLoadProgress, { countTable, dataTable }, fundDepositObj) { //L(`uima(${name}, ${countTable}, ${dataTable})`);\n    let { index, length, investorMapCountKey } = await this.getInvestorMapUpdateCountData(countTable, dataTable, `btc`, tables.eth[dataTable]);\n    let buf = this.idb.newBuffer();\n    for (let d of (await this.idb.getAll(tables.eth[dataTable])).slice(index)) { let key = { investorIx: d.investorIx, index: d.index };\n      let fd = fundDepositObj[d.data[0]];\n//      L({fd})\n      if (D(fd)) { buf.write(tables.btc[dataTable], {...key, value: fd.satoshiBN.toString(ALPHABET.length) }); }\n      else { L(`Bitcoin fund deposit not found for ${d.data[0]}`); }\n      buf.write(tables.btc.constants, { ...investorMapCountKey, startIndex: ++index });\n      this.updateLoadProgress(onLoadProgress, index, length); \n    } \n    await buf.flush();\n    this.updateLoadProgress(onLoadProgress, length, length, true);\n  }\n \n  async clearTransactionCache(t) { await Promise.all([\n    ...T(\"ntx fundTx rtx reqWD\").map(z => this.idb.clear(tables[t][z])),\n    ...T(\"ntx-fundTx rtx-reqWD\").map(z => this.idb.write(tables[t].constants, { name: `${z}.counts`, startIndex: 0 }))\n  ]); }  \n\n  async clearCache() { await Promise.all(K(tables).map(t => K(tables[t]).map(z => tables[t][z])).flat().map(n => this.idb.clear(n))); }\n\n  getKey(table, data) { return (`${table}${isO(data) ? `:[${tableStrucMap[table].keyPath.map(a => data[a]).join(\",\")}]` : ''}`) }\n\n  async setData(table, data) { return await this.idb.write(table, data); }\n  async getData(table, data, retriever) { return (await this.idb.get(table, data)) || (retriever && (await this.setData(table, await retriever()))); } \n\n  async measureTime(name, promise) { this.loadProgress.timings[name] = (await timeFunc(promise)).time; } \n\n  getDecimals() { return this.syncCache.getData('decimals'); } \n  getFactor() { return BN(10).pow(this.getDecimals()); } \n\n  computePerformance() {  \n    let f = this.getFactor(), ff = f.times(100), performance = [], [time, amount] = T(\"time amount\").map(t => (this.getSync(t))).map(y => (y).map(x => x.data));  \n    for (let x = 0, acc = BN(1.0); x < amount.length; ++x) { let deltaFactor = ff.plus(BN(amount[x])).div(ff); performance.push([time[x], acc = acc.times(deltaFactor), deltaFactor]); }\n    let timeData = performance.map(([t, d]) => [1000*t, parseFloat(d.toString())]);\n    E(({ performance, timeData, roi: (100*timeData[timeData.length - 1][1] - 100), dailyChange: parseFloat((BN(amount[amount.length - 1]).div(f)).toString()) })).forEach(([k, v]) => this.setSync(k, v));\n  }\n\n  getPerformanceIndex(time, lowIndex, highIndex) { let p = this.performance, low = lowIndex || 0, high = highIndex || (p.length - 1); // L(`gpi(${time}, ${low}, ${high})`)\n    while (high > low) { let m = low + ((high - low) >> 1); if (p[m][0] > time) { high = m; } else if (low < m) { low = m; } else break; }\n    return high;\n  }\n\n  async computeAllInvestorData() { \n    let investors = [], approvedDeposits = {}, fundDeposits = this.syncCache.getData(\"fundDeposits\"); \n    let investorsAddresses = this.syncCache.getData(\"investorsAddresses\"); let olp = this.onLoadProgress(\"Computing data structures\");  \n    let d = await Promise.all(investorMaps.map(async im => await Promise.all(['eth', 'btc'].map(t => this.idb.getAll(tables[t][im.dataTable])))));\n    let e = d.map(im => im.map(x => F(x.map(z => [z.investorIx, []]))));\n    d.forEach((im, a) => im.forEach((x, b) => x.forEach(z => { e[a][b][z.investorIx].push(z); } ))); \n    for (let ix = 0; ix < investorsAddresses.length; ++ix) { this.updateLoadProgress(olp, ix, investorsAddresses.length);\n      let investor = await this.computeInvestorData(investorsAddresses[ix], U, e); \n      investors.push({ index: investorsAddresses[ix].index, address: investorsAddresses[ix].data, investmentValue: investor.investmentValue, Pending_Withdrawals: investor.Pending_Withdrawals });\n      investor.Deposits.forEach(d => { approvedDeposits[d.txId] = true; });\n    }   \n    this.setSync({ investors, withdrawalRequests: investors.map(i => i.Pending_Withdrawals).flat(), pendingDeposits: G(fundDeposits, v => v.filter(d => !approvedDeposits[d.txId])) });  \n    this.updateLoadProgress(olp, investorsAddresses.length, investorsAddresses.length);\n  };\n\n  async getInvestorIndexFromInvestorsAddressesTable(ethAddress) { return (L(await this.idb.get(tables.eth.investorsAddresses, { data: ethAddress }, \"data\", [\"data\"])))?.index; }\n\n  async computeInvestorData(investor, lengths, allData) { //L(`retrieveInvestorData = ${S(investor)}`);  \n    if (!(D(investor.data))) return U;\n    let cached = this.getSync(getInvestorDataKey(investor));\n    if (cached) { L('cached'); return cached; }\n    if (!D(investor.index)) { investor.index = await this.getInvestorIndexFromInvestorsAddressesTable(L(investor.data)); }\n    let invKey = { investorIx: investor.index }; //L(`Retrieving investor ${investor} data`);\n//    L(`invKey = ${S(invKey)}`);\n    let ethDataMap = ([txId, pubKey, signature, action, timestamp]) => ({ timestamp: parseInt(oS(timestamp)), txId, pubKey, signature, action });\n    let dataMaps = { eth: x => ({index: x.index, ...ethDataMap(((x.data)))}), btc: x => ({index: x.index, value: BN(x.value, ALPHABET.length) }) }\n    let linkValues = ([e, b]) => { for (let index = 0; index < Math.min(e.length, b.length); ++index) e[index].value = b[index].value; return e; };\n    let [txs, reqWD] = (D(allData)) ? allData.map((im, j) => linkValues(T('eth btc').map((t, z) => (oA(im[z][invKey.investorIx])).map(oO).map(dataMaps[t]))))\n    : await Promise.all(investorMaps.map(async (m, j) => {  \n        let fastLength = (oO(oA(lengths)[j]))[(invKey.investorIx)];\n        let length = D(fastLength) ? (fastLength) : ((oO(await this.idb.get((tables.eth[(m).countTable]), (invKey)))).length || 0);\n        return linkValues(await Promise.all(T('eth btc').map(async t => { let r = [], buf = this.idb.newBuffer();\n          for (let index = 0; index < length; ++index) { r.push(U); buf.get(tables[t][m.dataTable], ({...invKey, index}), d => { r[index] = d; }); }\n          await buf.flush(); return r.map(oO).map(dataMaps[t]);\n    }))); }));\n    investor.pubKey = oO(oA(txs)[0]).pubKey;\n    \n    let txIdToObj = a => F(a.map(e => [e.txId, e])); // XXX: does not check if duplicates are identical -- only retains one of them with same txId   \n    let h = { Pending_Withdrawals: txIdToObj(reqWD), ...F([\"Deposits\", \"Withdrawals\"].map((k, i) => [k, txIdToObj(txs.filter(x => x.action === S(i)))])) };\n    let txIdMap = G(h, v => x => v[x.txId]);\n    let g = { Deposits: V(h.Deposits), \n      Pending_Withdrawals: V(h.Pending_Withdrawals).filter(x => txIdMap.Deposits(x) && !txIdMap.Withdrawals(x)), \n      Withdrawals: V(h.Withdrawals).filter(x => txIdMap.Deposits(x) && txIdMap.Pending_Withdrawals(x)) \n    };\n\n    g.investment = g.Deposits.concat(g.Withdrawals).sort((a, b) => a.timestamp - b.timestamp);  \n    let isDeposit = i => i.action === \"0\";\n    for (let i of g.investment) { i.perfIndex = this.getPerformanceIndex(i.timestamp); }\n    for (let d of g.Deposits) { let withdrawal = txIdMap.Withdrawals[d], pending_withdrawal = txIdMap.Pending_Withdrawals[d];\n      d.status = (withdrawal ? stati.Deposits.Withdrawn : (pending_withdrawal ? stati.Deposits.Pending_Withdrawal : stati.Deposits.Active)); \n      let endPerf = this.performance[(d.status === stati.Deposits.Withdrawn) ? withdrawal.perfIndex : this.performance.length - 1][1];\n      let startPerf = this.performance[d.perfIndex][1]; // (startPerf[0] >= d.timestamp) ? startPerf[1] : endPerf; \n      d.depositedValue = d.value;\n      d.currentValue = (startPerf.isZero() || !D(d.value)) ? U : d.value.times(endPerf.div(startPerf));\n      d.satoshiBN = d.value = d.currentValue; \n    } \n    for (let w of g.Withdrawals) A(A(w, { deposit: txIdMap.Deposits(w)}), P(w.deposit, T(\"depositedValue currentValue\"))); \n    for (let wr of g.Pending_Withdrawals) wr.status = txIdMap.Withdrawals(wr) ? stati.Pending_Withdrawals.Processed : stati.Pending_Withdrawals.Pending;\n//    for (let i of g.investment) i.accCurrentValue = (currentValueAcc = D(currentValueAcc) && D(i.currentValue) ? currentValueAcc[isDeposit(i) ? \"plus\" : \"minus\"](i.currentValue) : U); \n    let calcTotal = a => a.deposits.plus(a.interests).minus(a.withdrawals);  \n    g.valueSeries = () => g.computedValues = g.computedValues || (() => { L('Computing series...')\n      let interestEvents = [], lastIndex = -1, acc = { deposits: BN(0), interests: BN(0), withdrawals: BN(0) };\n      for (let ix = 0; ix < g.investment.length; ++ix) { let i = g.investment[ix];\n        for (let pi = Math.max(0, lastIndex); pi < i.perfIndex; ++pi) { let [timestamp, , perf] = this.performance[pi];\n          let total = calcTotal(acc);\n          acc.interests = acc.interests.plus(total.times(perf).minus(total));\n          interestEvents.push(A({ timestamp, total: calcTotal(acc) }, acc));\n        } \n        lastIndex = i.perfIndex;\n        if (isDeposit(i)) { acc.deposits = acc.deposits.plus(i.depositedValue); } else { acc.withdrawals = acc.withdrawals.plus(i.currentValue); }\n        A(i, acc).total = calcTotal(acc);\n      }\n      return F(T(\"deposits interests withdrawals total\").map(k => [k, (g.investment.concat(interestEvents)).map(x => [1000*x.timestamp, satoshiToBTCFloat(x[k])])]))\n    })(); \n//    L(P(g, T(\"investmentValue\")));\n    return this.syncCache.setData(getInvestorDataKey(investor), g);\n  }\n\n  async checkConsistency(investor) {\n    try {\n      investor.derivedEthAddress = pubKeyToEthAddress(investor.pubKey, true); \n      investor.btcAddress = pubKeyToBtcAddress(investor.pubKey);   \n      investor.anomalous = anomalousInvestorIndexMap[investor.index] ? \"Yes\" : \"No\";\n      if (investor.derivedEthAddress.toLowerCase() !== investor.data.toLowerCase()) L(`Investor (${investor.index}): Address discrepancy ${investor.data} !== ${investor.derivedEthAddress}`)\n    } catch (err) { investor.pubKeys = []; investor.error = \"Yes\"; investor.anomalous = \"Yes\"; } \n  }\n\n  getInvestorData(investor) { return this.investorData[investor] = D(this.investorData[investor]) ? this.investorData[investor] : this.computeInvestorData(investor); }\n\n  async destroy() { await this.idb.close(); }\n}\n\n//L(`032b54175dac49b86d33528488dc1770223be678fe9e283ff210d6841f109230c7 ==> ${S({btc: pubKeyToBtcAddress(\"032b54175dac49b86d33528488dc1770223be678fe9e283ff210d6841f109230c7\"),\n//eth: pubKeyToEthAddress(\"032b54175dac49b86d33528488dc1770223be678fe9e283ff210d6841f109230c7\")})}`)\n\nlet data = new Data(), createData = () => data = new Data(), resetData = () => { return data ? data.destroy().then(createData()) : (createData()); }\n//createData();\n  \nexport { Transaction, stati, ethInterfaceUrls, btcRpcUrl, btcFields, ethBasicFields, getInvestorDataKey, getInvestorWalletDataKey, data, resetData, amfeixFeeFields, amfeixAddressLists };","// eslint-disable-next-line\nimport { A, L, P, S, oO } from '../common/tools'\n\nexport class Persistent {\n  constructor(persistanceKey, storedFieldNames, defaults) {\n    A(this, { persistanceKey, storedFieldNames })\n    A(this, (d => d ? A(oO(defaults), P(JSON.parse(d), this.storedFieldNames)) : oO(defaults))((localStorage.getItem(this.persistanceKey))));\n    //L(`Loaded ${persistanceKey}: ${S(P(this, L(this.storedFieldNames)))}`)\n  }\n\n  persist() { \n    localStorage.setItem(this.persistanceKey, S(P(this, this.storedFieldNames))); \n  }\n}","import { BigNumber } from 'bignumber.js'\n\nlet ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$@';\n\nBigNumber.config({ ALPHABET }); //DECIMAL_PLACES: 20 });\n\nlet BN = (v, b) => new BigNumber(v ,b);\n//let bnClone = d => BigNumber.clone(d);\n\nexport { BN, ALPHABET }","import Web3 from 'web3';\nimport amfeixCjson from '../amfeixC.json';\nimport { A, F, I, L, S, oA, oO } from '../common/tools';\nimport { BN } from './bignumber';\nimport aggregate from '../lib/multicall/src/aggregate';\nimport nodeFetch from 'node-fetch';\nglobal.fetch = nodeFetch;\n\nexport let amfeixAddress = \"0xb0963da9baef08711583252f5000Df44D4F56925\";\n \nclass ABI { constructor(abi) { this.methodMap = F(abi.filter(x => x.type === \"function\").map(x => [x.name, x])); } }\n\nlet abi = new ABI(amfeixCjson.abi);\n//L(`abi keys = ${K(abi)}`);\n//\nclass MultiCallBatch {\n  constructor() { this.calls = []; }\n  add(target, method, params, onSuccess, onError) { this.calls.push(({ target, method, params, onSuccess, onError })); }\n  async execute(rpcUrl) {\n    // L(`Executing multicall length: ${this.calls.length}`)\n    //L(`I = ${S(I)}`);\n    //    L(`MultiCallBatch input = ${S(this.calls)}`);\n    let calls = this.calls.map((c, i) => {\n      let m = abi.methodMap[c.method];\n      return ({ target: c.target, call: [`${c.method}(${m.inputs.map(x => x.type).join(\",\")})(${m.outputs.map(x => x.type).join(\",\")})`, ...c.params], returns: m.outputs.map((x, j) => [`${i}_${j}`, I]) });\n    });\n    //    L({calls});\n    let response = await aggregate(calls, { rpcUrl, multicallAddress: '0x5e227AD1969Ea493B43F840cfF78d08a6fc17796' });\n    let results = oO(oO(response).results).original;\n    //L(`MultiCallBatch results = ${S(results)}`)\n    this.calls.forEach((c, i) => {\n      let m = abi.methodMap[c.method];\n      let q = m.outputs.map((x, j) => {\n        let r = results[`${i}_${j}`];\n        if (oO(r)._hex) { r = BN(r._hex.slice(2), 16).toString(); }\n        return r;\n      });\n      //      L({method: c.method, parms: c.params, q});\n      return c.onSuccess(q.length === 1 ? q[0] : q);\n    });\n  }\n}\n\nclass AmfeixContract {\n  setWeb3Url(url) {\n    A(this, { url, queuedOps: [], batchIx: 0, processedOpCount: 0, queuedBatches: [], processing: false, inFlight: [], maxInFlight: 4, nextIx: 0, batchSize: 32, activeBatch: Promise.resolve() });\n    this.web3 = new Web3(new (this.url.indexOf(\"ws://\") === 0 ? Web3.providers.WebsocketProvider : Web3.providers.HttpProvider)(this.url, { timeout: 60000 }));\n    this.amfeixM = () => (new this.web3.eth.Contract(amfeixCjson.abi, amfeixAddress, { from: this.from })).methods;\n  }\n\n  setFrom(address) { this.from = address; }\n\n  async execute(op) { try { return await amfx.amfeixM()[op.method](...oA(op.params)).call(); } catch (err) { return { err }; } }\n\n  queueOp(method, params, onSuccess, onError) {  this.queuedOps.push(({ method, params, onSuccess, onError })); }\n  async executeBatch() {\n    let batch = new MultiCallBatch();\n    for (let op of this.queuedOps.slice(0, this.batchSize)) batch.add(amfeixAddress, op.method, oA(op.params), op.onSuccess, op.onError);\n    this.queuedOps = this.queuedOps.slice(this.batchSize);\n    await batch.execute(this.url);\n  }\n\n  async actualFlushBatch() { while (this.queuedOps.length > 0) {\n      //      L({length: this.inFlight.length, queued: this.queuedOps.length, mif: this.maxInFlight});\n      if (this.inFlight.length === this.maxInFlight) { await this.inFlight[0]; this.inFlight.shift(); }\n      if (this.inFlight.length > this.maxInFlight) L(`>> ${S({ length: this.inFlight.length, mif: this.maxInFlight })}`);\n      this.inFlight.push(this.executeBatch());\n      //      await Promise.all(this.inFlight);\n  } }\n\n  async flushBatch() { await new Promise((resolve, reject) => { try { setTimeout(() => resolve(this.actualFlushBatch()), 0); } catch (err) { reject(err); } }); }\n}\n\nexport let amfx = new AmfeixContract();","/* eslint no-unused-vars: 0 */\nimport bip32 from 'bip32';\nimport bip38 from 'bip38';\nimport bip39 from 'bip39';\nimport bitcoinJS_Lib from 'bitcoinjs-lib';\nimport keccak256 from 'keccak256';\nimport secp256k1 from 'secp256k1';\nimport { D, F, G, T, oO } from './tools.mjs'; \nimport buffer from 'buffer';\n\n//let g = {}; g.Buffer  = Buffer || buffer.Buffer;\n\nlet defaultDerivationPaths = { bitcoin: \"m/44'/0'/0'\", ethereum: \"m/44'/60'/0'\" };\n//02f1b2a982dbe744305a37f9dfd69d7d7c6eeaa5c34c1aba3bd277567df5b972fb\nlet rootFromSeed = (seedWords) => bip32.fromSeed(bip39.mnemonicToSeedSync(seedWords.join(\" \")));\nlet deriveFromNode = (node, t, e) => node.derive(t || 0).derive(e || 0);\nlet coinNodesFromRoot = root => G(defaultDerivationPaths, v => root.derivePath(v));\n// eslint-disable-next-line\nlet xpubsFromCoinNodes = coinNodes => G(coinNodes, v => bip32.fromPublicKey(v.publicKey, v.chainCode));\nlet toBuffer = v => { var b = buffer.Buffer.alloc(v.length); for (var i = 0; i < b.length; ++i) b[i] = v[i]; return b; };\nlet getEthAddress = pubKey => keccak256(pubKey).toString('hex').slice(-40);\nlet ethAddressFromPubKey = pubKey => getEthAddress(toBuffer(secp256k1.publicKeyConvert(pubKey, false).slice(1)));\nlet btcAddressFromPubKey = (pubkey, network) => bitcoinJS_Lib.payments.p2pkh({ pubkey, network }).address;\nlet pubKeyBufferToPoint = pubKeyBuffer => bitcoinJS_Lib.ECPair.fromPublicKey(pubKeyBuffer).publicKey;\nlet privKeyBufferToPoint = privKeyBuffer => bitcoinJS_Lib.ECPair.fromPrivateKey(privKeyBuffer).privateKey;\nlet encryptKey = (key, password, onProgress) => bip38.encrypt(key, true, password, onProgress);\nlet encryptSeedWords = (seedWords, password, onProgress) => {\n  let root = rootFromSeed(seedWords);\n  return (F(T(\"privateKey chainCode\").map(k => [k, encryptKey(root[k], password, onProgress)])));\n};\nlet decryptWallet = (encryptedKeys, password, onProgress) => (G(encryptedKeys, v => bip38.decrypt(v, password, onProgress)));\nlet getAmfeixNode = root => (deriveFromNode(coinNodesFromRoot(root).bitcoin));\nlet getAmfeixPublicKey = root => getAmfeixNode(root).publicKey;\nlet getAmfeixPrivateKey = root => getAmfeixNode(root).privateKey;\n//let hexToUI8A = h => new Uint8Array(h.match(/.{1,2}/g).map(b => parseInt(b, 16))); \nlet hexOnly = s => (s.slice(0, 2) === \"0x\") ? s.slice(2) : s;\nlet pubKeyToEthAddress = (pubKeyHex, prefix) => (prefix ? \"0x\" : \"\") + ethAddressFromPubKey(pubKeyBufferToPoint(buffer.Buffer.from(hexOnly(pubKeyHex), 'hex')));\nlet pubKeyToBtcAddress = pubKeyHex => btcAddressFromPubKey(pubKeyBufferToPoint(buffer.Buffer.from(hexOnly(pubKeyHex), 'hex')));\nlet getWalletRoot = w => (bip32.fromPrivateKey(privKeyBufferToPoint(w.privateKey.privateKey), w.chainCode.privateKey));\nlet generateSeedWords = () => T(bip39.generateMnemonic());\n\nexport { generateSeedWords, pubKeyToEthAddress, pubKeyToBtcAddress, rootFromSeed, ethAddressFromPubKey, btcAddressFromPubKey, pubKeyBufferToPoint, encryptSeedWords, decryptWallet, getAmfeixPublicKey, getAmfeixPrivateKey, getWalletRoot }; ","import { A, D, I, K, L, S, U, V, oA, oF, isA, future } from '../common/tools';\nimport { tableStrucMap } from './data';\nimport fakeIndexedDB from 'fake-indexeddb/auto';\n\nlet computeKey = (table, data, keyPath) => (z => keyPath && keyPath.length === 1 ? z.join(\"\") : z)(data && ((keyPath || tableStrucMap[table].keyPath).map(k => data[k]))); \n\n//L({tables}); L({tableStrucMap});\nclass IndexedDB {\n  constructor(name) {\n    this.name = name;\n    this.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB || fakeIndexedDB \n    this.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction;\n    this.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\n    this.whenInitialized = future();\n    this.init();\n  }\n\n  async init() { this.whenInitialized.resolve(this.db = await (new Promise((resolve, reject) => A(this.indexedDB.open(this.name, 5), {\n    onerror: e => reject(`DB Error: ${e.target.error}`), onsuccess: e => { L(\"DB opened.\"); resolve(e.target.result); },\n    onupgradeneeded: e => (async () => { let db = e.target.result; L(\"Upgrading db.\");\n      for (let i = 0; i < db.objectStoreNames.length; ++i) await db.deleteObjectStore(db.objectStoreNames.item(i));\n      await Promise.all((V(tableStrucMap)).map((({ table, keyPath, indices, autoIncrement }) => new Promise((resolve, reject) => { // L({ table, keyPath, indices, autoIncrement });\n        let os = db.createObjectStore(table, ({ keyPath: keyPath || \"id\", autoIncrement: autoIncrement || !D(keyPath) }));\n        oA(indices).forEach(i => os.createIndex(i[0], i[1], { unique: i[2], multiEntry: true }));\n        os.transaction.oncomplete = () => { I(`Object store created: ${L(K(os))}`); resolve(os); };\n        os.transaction.onerror = () => reject(`Creating table '${table}' failed`);\n      })))); L(\"DB structure initialized.\");\n      resolve(db);\n    })()\n  })))); }\n \n  async close() { await this.whenInitialized.promise; await this.db.close();  }\n  async deleteDB(name) { await this.db.deleteDatabase(name); }\n\n  getTx(table, label, reject) { let tx = this.db.transaction(isA(table) ? table: [table], \"readwrite\"); \n    return A(tx, { onerror: () => (tx.error !== null) && reject(`Error on ${label} for ${table}: ${tx.error}`) }); \n  }\n  getOS(table, label, reject) { return this.getTx(table, label, reject).objectStore(table); }\n  act(table, label, input, getData, index) { return new Promise((resolve, reject) => { let os = this.getOS(table, label, reject);\n    I({index, input});\n    (index ? os.index((index)) : os)[label](input).onsuccess = e => resolve(getData(e)); \n  }); }\n  add(table, data) { return this.act(table, \"add\", data, () => data); }\n  put(table, data) { return this.act(table, \"put\", data, () => data); }\n  count(table, data) { return this.act(table, \"count\", data, e => e.target.result); }\n  getAll(table, data, index, keyPath) { return this.act(table, \"getAll\", (computeKey(table, data, keyPath)), e => e.target.result, index); }\n  openCursor(table, data, onCursor) { return this.act(table, \"openCursor\", data, e => (c => c && onCursor(c))((e.target.result))); }\n  iterateAll(table, data, onData) { return this.openCursor(table, data, c => { if (onData(c.value)) c.continue(); }); }\n  get(table, data, index, keyPath) { I( {computeKey: computeKey(table, data, keyPath)} ); return this.act(table, \"get\", computeKey(table, data, keyPath), e => e.target.result, index); }\n  write(table, data) { return this.get(table, data).catch(() => this.add(table, data)).then(() => this.put(table, data)); }\n  clear(table) { return this.act(table, \"clear\", U, I); }\n\n  newBuffer() { return new IDBuffer(this) }\n}\n\nclass IDBuffer {\n  constructor(idb) { A(this, { idb, pendingOps: [], tables: {}, batchSize: 1024 }); }\n\n  queueOp(table, action, data, onSuccess, onError) {\n    this.tables[table] = true;\n    this.pendingOps.push({ table, action, data, onSuccess, onError });\n    if (this.pendingOps.length > this.batchSize) {\n      this.activeFlush = (this.activeFlush || Promise.resolve()).then(async () => await this.flush());\n    }\n  }\n\n  pendingOpsCount() { return this.pendingOps.length; }\n\n  async flush() { \n    while (this.pendingOps.length > 0) await new Promise((resolve, reject) => {\n      let p = this.pendingOps; \n      this.pendingOps = [];\n      let tx = this.idb.getTx((K(this.tables)), \"flush\", err => { L('flusherr'); L({err}); reject(err); });\n      let result = { errors: 0, successes: 0 }, total = p.length;\n      p.forEach(x => {\n        let os = tx.objectStore(x.table);\n        let y = os[x.action](x.data);\n        y.onsuccess = e => { oF(x.onSuccess)(e.target.result); if (result.errors + ++result.successes === total) resolve(result); };\n        y.onerror = e => { L(`Error for ${S(x)}: ${S(e)}`); oF(x.onError)(e); if (++result.errors + result.successes === total) resolve(result); };\n      });\n    })\n  }\n\n  add(table, data) { this.queueOp(table, \"add\", data, () => data, err => { L(`Add error ${S(data)}`); L({err}) }); }\n  put(table, data) { this.queueOp(table, \"put\", data, () => data, err => { L('Put error '); L({err}) }); }\n  count(table, data) { this.queueOp(table, \"count\", data, e => e.target.result); }\n  getAll(table, data) { this.queueOp(table, \"getAll\", (data), e => e.target.result); }\n  get(table, data, onSuccess, onError) { this.queueOp(table, \"get\", computeKey(table, data), onSuccess, onError); }  \n  write(table, data) { this.get(table, data, d => { this.put(table, data); }, () => { this.add(table, data); }); }\n}\n\nexport { IndexedDB, IDBuffer };","import fetch from 'cross-fetch';\nimport { defaultAbiCoder } from 'ethers/utils/abi-coder';\nimport debug from 'debug';\nconst log = debug('multicall');\n\n// Function signature for: aggregate((address,bytes)[])\nexport const AGGREGATE_SELECTOR = '0x252dba42';\n\nexport function strip0x(str) {\n  return str.replace(/^0x/, '');\n}\n\nexport function typesLength(types) {\n  return types.length;\n}\n\nexport function encodeParameter(type, val) {\n  return encodeParameters([type], [val]);\n}\n\nexport function encodeParameters(types, vals) {\n  return defaultAbiCoder.encode(types, vals);\n}\n\nexport function decodeParameter(type, val) {\n  return decodeParameters([type], val);\n}\n\nexport function decodeParameters(types, vals) {\n  return defaultAbiCoder.decode(types, '0x' + vals.replace(/0x/i, ''));\n}\n\nexport function padLeft(string, chars, sign) {\n  var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n  string = string.toString(16).replace(/^0x/i, '');\n  var padding = chars - string.length + 1 >= 0 ? chars - string.length + 1 : 0;\n  return (\n    (hasPrefix ? '0x' : '') +\n    new Array(padding).join(sign ? sign : '0') +\n    string\n  );\n}\n\nexport function padRight(string, chars, sign) {\n  var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n  string = string.toString(16).replace(/^0x/i, '');\n  var padding = chars - string.length + 1 >= 0 ? chars - string.length + 1 : 0;\n  return (\n    (hasPrefix ? '0x' : '') +\n    string +\n    new Array(padding).join(sign ? sign : '0')\n  );\n}\n\nexport function isEmpty(obj) {\n  if (Array.isArray(obj)) return obj.length === 0;\n  return !obj || Object.keys(obj).length === 0;\n}\n\nexport async function ethCall(rawData, { id, web3, rpcUrl, block, multicallAddress, ws, wsResponseTimeout }) {\n  const abiEncodedData = AGGREGATE_SELECTOR + strip0x(rawData);\n  if (ws) {\n    log('Sending via WebSocket');\n    return new Promise((resolve, reject) => {\n      ws.send(JSON.stringify({\n        jsonrpc: '2.0',\n        method: 'eth_call',\n        params: [\n          {\n            to: multicallAddress,\n            data: abiEncodedData\n          },\n          block || 'latest'\n        ],\n        id\n      }));\n      function onMessage(data) {\n        if (typeof data !== 'string') data = data.data;\n        const json = JSON.parse(data);\n        if (!json.id || json.id !== id) return;\n        log('Got WebSocket response id #%d', json.id);\n        clearTimeout(timeoutHandle);\n        ws.onmessage = null;\n        resolve(json.result);\n      }\n      const timeoutHandle = setTimeout(() => {\n        if (ws.onmessage !== onMessage) return;\n        ws.onmessage = null;\n        reject(new Error('WebSocket response timeout'));\n      }, wsResponseTimeout);\n\n      ws.onmessage = onMessage;\n    });\n  }\n  else if (web3) {\n    log('Sending via web3 provider');\n    return web3.eth.call({\n      to: multicallAddress,\n      data: abiEncodedData\n    });\n  } else {\n    log('Sending via XHR fetch');\n    const rawResponse = await fetch(rpcUrl, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        jsonrpc: '2.0',\n        method: 'eth_call',\n        params: [\n          {\n            to: multicallAddress,\n            data: abiEncodedData\n          },\n          block || 'latest'\n        ],\n        id: 1\n      })\n    });\n    const content = await rawResponse.json();\n    if (!content || !content.result) {\n      throw new Error('Multicall received an empty response. Check your call configuration for errors.');\n    }\n    return content.result;\n  }\n}\n","/*\nMIT License\n\nCopyright (c) 2019 Maker Foundation\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nimport { id as keccak256 } from 'ethers/utils/hash';\nimport invariant from 'invariant';\nimport { strip0x, ethCall, encodeParameters, decodeParameters } from './helpers.js';\nimport memoize from 'lodash/memoize';\n\nconst INSIDE_EVERY_PARENTHESES = /\\(.*?\\)/g;\nconst FIRST_CLOSING_PARENTHESES = /^[^)]*\\)/;\n\nexport function _makeMulticallData(calls) {\n  const values = [\n    calls.map(({ target, method, args, returnTypes }) => [\n      target,\n      keccak256(method).substr(0, 10) +\n        (args && args.length > 0\n          ? strip0x(encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n          : '')\n    ])\n  ];\n  const calldata = encodeParameters(\n    [\n      {\n        components: [{ type: 'address' }, { type: 'bytes' }],\n        name: 'data',\n        type: 'tuple[]'\n      }\n    ],\n    values\n  );\n  return calldata;\n}\n\nconst makeMulticallData = memoize(_makeMulticallData, (...args) => JSON.stringify(args));\n\nexport default async function aggregate(calls, config) {\n  calls = Array.isArray(calls) ? calls : [calls];\n\n  const keyToArgMap = calls.reduce((acc, { call, returns }) => {\n    const [, ...args] = call;\n    if (args.length > 0) {\n      for (let returnMeta of returns) {\n        const [key] = returnMeta;\n        acc[key] = args;\n      }\n    }\n    return acc;\n  }, {});\n\n  calls = calls.map(({ call, target, returns }) => {\n    if (!target) target = config.multicallAddress;\n    const [method, ...argValues] = call;\n    const [argTypesString, returnTypesString] = method\n      .match(INSIDE_EVERY_PARENTHESES)\n      .map(match => match.slice(1, -1));\n    const argTypes = argTypesString.split(',').filter(e => !!e);\n    invariant(\n      argTypes.length === argValues.length,\n      `Every method argument must have exactly one type.\n          Comparing argument types ${JSON.stringify(argTypes)}\n          to argument values ${JSON.stringify(argValues)}.\n        `\n    );\n    const args = argValues.map((argValue, idx) => [argValue, argTypes[idx]]);\n    const returnTypes = !!returnTypesString ? returnTypesString.split(',') : [];\n    return {\n      method: method.match(FIRST_CLOSING_PARENTHESES)[0],\n      args,\n      returnTypes,\n      target,\n      returns\n    };\n  });\n\n  const callDataBytes = makeMulticallData(calls, false);\n  const outerResults = await ethCall(callDataBytes, config);\n  const returnTypeArray = calls\n    .map(({ returnTypes }) => returnTypes)\n    .reduce((acc, ele) => acc.concat(ele), []);\n  const returnDataMeta = calls\n    .map(({ returns }) => returns)\n    .reduce((acc, ele) => acc.concat(ele), []);\n\n  invariant(\n    returnTypeArray.length === returnDataMeta.length,\n    'Missing data needed to parse results'\n  );\n\n  const outerResultsDecoded = decodeParameters(['uint256', 'bytes[]'], outerResults);\n  const blockNumber = outerResultsDecoded.shift();\n  const parsedVals = outerResultsDecoded.reduce((acc, r) => {\n    r.forEach((results, idx) => {\n      const types = calls[idx].returnTypes;\n      const resultsDecoded = decodeParameters(types, results);\n      acc.push(\n        ...resultsDecoded.map((r, idx) => {\n          if (types[idx] === 'bool') return r.toString() === 'true';\n          return r;\n        })\n      );\n    });\n    return acc;\n  }, []);\n\n  const retObj = { blockNumber, original: {}, transformed: {} };\n\n  for (let i = 0; i < parsedVals.length; i++) {\n    const [name, transform] = returnDataMeta[i];\n    retObj.original[name] = parsedVals[i];\n    retObj.transformed[name] = transform !== undefined ? transform(parsedVals[i]) : parsedVals[i];\n  }\n\n  return { results: retObj, keyToArgMap };\n}\n","import { L, V, makeEnum, singleKeyObject } from '../common/tools'\n\nlet EUserMode = makeEnum(\"User Admin\");\nlet EDeveloperMode = makeEnum(\"Production Developer\");\nlet EPallette = makeEnum(\"Default Dark Light\");\nlet ETransactionType = makeEnum(\"Outgoing Incoming Investment\");\n\nlet enumDefault = x => V(x)[0];\nlet enumDefObj = x => singleKeyObject(enumDefault(x), true);\nL({ETransactionType})\n\nexport { EPallette, EUserMode, EDeveloperMode, ETransactionType, enumDefault, enumDefObj }","import { BN }  from './bignumber'; \nimport { D, U } from '../common/tools';\nlet coin = BN(10).pow(8);\n\nlet satoshiToBTCString = s => D(s) ? s.div(coin).toString() : U; \nlet btcToString = s => s.toString(); \nlet satoshiToBTCFloat = s => D(s) ? s.div(coin).toNumber(s) : U;\n\nexport { btcToString, satoshiToBTCString, satoshiToBTCFloat }","import { SyncCache } from './syncCache.mjs';\nimport * as crypto from './crypto.mjs';\nimport { F, T } from './tools.mjs';\n\nlet pubKeyConvertors = { btc: crypto.pubKeyToBtcAddress, eth: crypto.pubKeyToEthAddress };\nlet pubKeySyncCaches = { btc: new SyncCache(), eth: new SyncCache() };\n\nlet pubKeyCachedConvertors = F(T(\"btc eth\").map(k => [k, pubKey => pubKeySyncCaches[k].getData(pubKey, () => pubKeyConvertors[k](pubKey))]));\nlet pubKeyToBtcAddress = pubKeyCachedConvertors.btc;\nlet pubKeyToEthAddress = pubKeyCachedConvertors.eth;\n\nexport { pubKeyToEthAddress, pubKeyToBtcAddress }\n","// Type-checking\nlet isA = Array.isArray;\nlet isF = f => typeof f === \"function\";\nlet isP = o => D(o.then) && isF(o.then);\nlet isO = o => typeof o === \"object\" && o != null && !isA(o);\nlet isS = s => typeof s === \"string\";\n\nlet A = Object.assign;\nlet B = (a, k, t) => { let r = {}; a.forEach(b => { let y = r[b[(t || I)(k)]]; if (y) { y.push(b); } else { r[b[(t || I)(k)]] = [b]; } }); return r; }\nlet C = x => x && P(x, K(x));\nlet D = x => typeof x !== \"undefined\";\nlet E = o => Object.entries(oO(o));\nlet F = Object.fromEntries; \nlet G = (o, f) => F(E(o).map(([k, v], i) => [k, f(v, k, i, o)]));\nlet GA = async (o, f) => F(await E(oO(o)).map(async ([k, v], i) => [k, await f(v, k, i, o)]));\nlet H = (f, o) => G(o, (v, k, i, o) => isO(v) ? H(f, v) : f(v, k, i, o));\nlet I = x => x;\nlet K = Object.keys;\nlet LL = x => { console.log(S(x)); return x; }\nlet L = x => {  if (process.env.NODE_ENV === \"development\") LL(x); return x; }\nlet P = (o, keys) => F(keys.map(k => [k, o[k]]));\nlet R = (msg, data) => A(new Error(msg), oO(data));\nlet S = JSON.stringify;\nlet T = s => oS(s).split(\" \");\nlet U = undefined;\nlet V = Object.values; \nlet W = async o => F(await Promise.all(E(o).map(async ([k, v]) => [k, await v])));\n\n// Optionals\nlet oA = a => a || [];\nlet oB = b => b || false;\nlet oF = f => f || (() => {});\nlet oO = o => o || {};\nlet oS = s => isS(s) ? s : \"\"; \n\nlet asA = a => (b => isA(b) ? b : [b])(oA(a))\n\nlet singleKeyObject = (k, v) => { let o = {}; o[k] = v; return o; }\nlet makeEnum = soo => Object.freeze(F(T(soo).map(k => [k, singleKeyObject(k, true)]))); \n\nclass Future { \n  constructor() { A(this, { creationTime: Date.now(), promise: new Promise((resolve, reject) => A(this, { resolve: x => { this.resolveTime = Date.now(); resolve(x) }, reject })) }); } \n  async resolveWithPromise(p) { try { return this.resolve(await p); } catch(e) { return this.reject(e); } }\n}\nlet future = () => new Future();\n\nexport { A, B, C, D, E, F, G, GA, H, I, K, L, LL, P, R, S, T, U, V, W, oA, oB, oO, oS, oF, isA, isO, isF, isS, isP, asA, Future, future, singleKeyObject, makeEnum }","import AccountBalanceWalletOutlinedIcon from '@material-ui/icons/AccountBalanceWalletOutlined';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\n\nexport let captionIconMap = {\n  Bitcoin_Wallet: AccountBalanceWalletOutlinedIcon,\n  Impact_Fund: EqualizerIcon,\n  Settings: SettingsIcon,\n  Progress: HourglassEmptyIcon,\n  Unlock_wallet: LockOpenIcon,\n  Create_wallet: AddCircleOutlineIcon,\n  Log_in: VpnKeyIcon,\n  Admin: SupervisorAccountIcon\n};\n","import { G, singleKeyObject } from '../common/tools';\n\nlet formatDate = date => {\n  let make2Digit = s => (s.length === 1) ? '0' + s : s;\n  let fmt = { year: 'numeric', month: 'short', day: '2-digit', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: false };\n  let d = G(fmt, (v, k) => new Intl.DateTimeFormat('en', { hour12: false, ...singleKeyObject(k, v) }).format(date));\n  return `${d.month} ${d.day}, ${d.year} ${make2Digit(d.hour)}:${make2Digit(d.minute)}:${make2Digit(d.second)}`;\n}, formatTimestamp = timestamp => timestamp && formatDate(new Date(1000 * timestamp));\n\nexport { formatTimestamp, formatDate }","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\n/* eslint no-unused-vars: 0 */\nimport React from 'react';\n// eslint-disable-next-line\nimport { A, D, E, F, G, I, K, L, U, V, S, oA, oB, oF, oO, oS, isO, singleKeyObject } from '../common/tools.js';\n// eslint-disable-next-line\nimport { List, ListItem, ListItemText, ListItemIcon, Hidden, Drawer, Stepper, Step, StepLabel, CircularProgress, TextField, Dialog, Box, Button, RadioGroup, Radio, FormControl, FormControlLabel, Tab, Tabs, Paper, Table, Typography, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, Checkbox, TableFooter } from '@material-ui/core';\n// eslint-disable-next-line\n//import { HistoryIcon, AttachMoneyIcon, CallMadeIcon } from '@material-ui/icons';\nimport { btcToString, satoshiToBTCString } from '../core/satoshi';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { captionIconMap } from './icons';\nimport { formatTimestamp } from './formatting'; \nimport { BN } from '../core/bignumber'\n\nlet captionMap = {\n  timestamp: \"Time\", value: \"Value\", txId: \"Transaction ID\", deposits: \"Deposits\", withdrawals: \"Withdrawals\", withdrawalRequests: \"Withdrawal Requests\", fundDepositAddresses: \"Fund deposit addresses\", feeAddresses: \"Fee addresses\", _: \"\"\n}; \n//let displayFunctions = { timestamp: formatTimestamp };\n\nlet cleanText = s => oS(s).replace(/_/g, \" \").trim();\n\nclass Comp extends React.Component {\n  constructor(p, s, sors) { super(p); A(this, { state: {...s}, fers: {}, observers: [] }); this.initRefs(oS(sors)); }\n  render() { return this.ren(this.props, this.state); }\n  ren(p, s) { return <div/> }\n  initRefs(spacedOutRefString) { this.fers = F(spacedOutRefString.split(\" \").map(k => [k, React.createRef()])); }\n  updateChildRef(newV) { if (D(this.props.childRef)) this.props.childRef.current = newV; }\n  componentDidMount() { this.updateChildRef(this); }\n  componentWillUnmount() { this.updateChildRef(U); for (let o of this.observers) o.detach(); this.unmounted = true; }\n  setStateKV(k, v, onDone) { //L(`setStateKV(${k}, ${S(v)})`); \n  this.setState(singleKeyObject(k, v, onDone)) }\n  addSyncKeyObserver(data, key, context) { this.addSyncObserver(data, key, d => { if (!this.unmounted) this.setStateKV(key, d) }, context); }\n  addSyncObserver(data, key, onChange, context) { this.observers.push(data.syncCache.watch(key, onChange, context)); }\n}  \n\nclass Selector extends Comp { constructor(p) { super(p); A(this.state, { selectedIx: 0 }); oF(p.onChanged)(this.state.selectedIx) }\n  setSelectedIx(selectedIx) { if (this.state.selectedIx !== selectedIx) this.setState({ selectedIx }, () => oF(this.props.onChanged)(selectedIx)); }\n  ren(p, s) { return <FormControl component=\"fieldset\"><RadioGroup row={p.horizontal || U} aria-label=\"\" name=\"\" value={s.selectedIx} onChange={e => this.setSelectedIx(L(parseInt(e.target.value)))}>\n    {(oA(p.options).map((x, i) => <FormControlLabel key={i} value={i} label={x} control={<Radio />}/>))}</RadioGroup></FormControl> }\n}  \n\nfunction sort(a, comp) { return a.map((e, i) => [e, i]).sort((a, b) => (comp && comp(a[0], b[0])) || (a[1] - b[1])).map(e => e[0]); }\nlet styles = ({ visuallyHidden: { border: 0, clip: 'rect(0 0 0 0)', height: 1, margin: -1, overflow: 'hidden', padding: 0, position: 'absolute', top: 20, width: 1, }, });\nlet classes = styles;\nclass THead extends Comp {\n  ren(p, s) {\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = p;\n    const createSortHandler = (property) => (event) => { onRequestSort(property, event); }; \n    return <TableHead><TableRow>\n      {p.checkable ? <TableCell padding=\"checkbox\"><Checkbox indeterminate={numSelected > 0 && numSelected < rowCount} checked={rowCount > 0 && numSelected === rowCount} onChange={onSelectAllClick} inputProps={{ 'aria-label': 'select all desserts' }} /></TableCell> : null}\n      {oA(p.headers).map((h, i) => { let sortDirection = ['asc', 'desc', false][orderBy === i ? order : 2];\n        return <TableCell key={i} align={h.alignCaption} padding={h.disablePadding ? 'none' : 'default'} sortDirection={sortDirection}>\n          <TableSortLabel active={orderBy === i} direction={sortDirection || 'asc'} onClick={createSortHandler(i)}>\n            {h.caption}{orderBy === i ? <span style={styles.visuallyHidden}>{order === 1 ? 'sorted descending' : 'sorted ascending'}</span> : null}\n          </TableSortLabel>\n        </TableCell>})}\n    </TableRow></TableHead>;\n  }\n}\n \nclass ListView extends Comp {\n  constructor(p) { super(p); this.state = { page: 0, rowsPerPage: 5, checked: {}, selectedIx: null, sortOrder: 0 }; } \n  ren(p, s) {\n    let headers = p.headers || K(oO(oA(p.data)[0])).map(h => ({ label: h, caption: h }));\n    let rows = oA(p.data).map((d, _id) => ({ _id, ...d }));\n    if (D(s.sortColumn)) rows = rows.sort((a, b) => { let h = headers[s.sortColumn];\n      let x = (h.compare || ((x, y) => (x === y ? 0 : (x < y ? -1 : 1))))(a[h.label], b[h.label]);\n      return [x, -x][s.sortOrder];\n    });\n    let elimObjects = (d, h) => { if (isO(d)) { L(`${h} is an object: ${S(K(d))}`); } else return d; };\n    let X = (d, f) => this.setState(d, () => { oF(p.onChange)(d); oF(f)(d); });\n    let isChecked = d => s.checked[d.index], isSelected = d => s.selectedIx === d._id;\n    let columnCount = headers.length + (p.checkable ? 1 : 0);\n    let prevRowsPerPage = s.rowsPerPage;\n    let offset = s.page * s.rowsPerPage, end = Math.min(rows.length, offset + s.rowsPerPage);//, emptyRows = offset + s.rowsPerPage - end;\n    let dense = true, onRequestSort = sortColumn => { this.setState({ sortColumn, sortOrder: this.state.sortOrder ^ ((this.state.sortColumn === sortColumn) ? 1 : 0) })}; \n    return <TableContainer component={Box}><p>{p.caption || null}</p><Table className={classes.table} aria-labelledby={p.title} size={(dense ? 'small' : 'medium')} aria-label={p.title}>\n        <THead headers={headers} classes={classes} checkable={p.checkable} numSelected={V(s.checked).filter(v => D(v)).length} order={s.sortOrder} orderBy={s.sortColumn} onSelectAllClick={() => { }} onRequestSort={onRequestSort} rowCount={rows.length} />\n        <TableBody>{sort(rows).slice(offset, (s.page + 1) * s.rowsPerPage).map((d, i) => <TableRow key={i} hover onClick={() => X({ selectedIx: d._id })} aria-checked={isChecked(d)} tabIndex={-1} selected={isSelected(d)}>\n          {p.checkable ? <TableCell padding=\"checkbox\"><Checkbox checked={isChecked(d)} inputProps={{ 'aria-labelledby': i }} /></TableCell> : null}\n          {headers.map((h, j) => <TableCell key={j} align={h.align || \"center\"}>{(h.displayFunc || I)(d[h.label], d)}</TableCell>)}\n        </TableRow>)}</TableBody>\n        {rows.length > s.rowsPerPage ? <TableFooter><TableRow><TablePagination component={TableCell} colSpan={(columnCount - 1)} rowsPerPageOptions={[5, 10, 25, 50, 100, 250, 500, 1000]} count={rows.length} rowsPerPage={s.rowsPerPage} page={s.page} onChangePage={(e, page) => X({ page })} onChangeRowsPerPage={e => X({ rowsPerPage: parseInt(e.target.value, 10) }, d => X({ page: Math.min(Math.round(s.page*(prevRowsPerPage/d.rowsPerPage)), Math.floor((rows.length - 1)/d.rowsPerPage) )}))} /></TableRow></TableFooter> : null}\n      </Table></TableContainer>   \n  }\n}\n \nclass Sidebar extends Comp {\n  ren(p, s) {  \n    return <List>{E(p.tabs).map(([title, control], i) => { let color = p.value === i ? \"secondary\" : \"primary\";\n      return <ListItem button onClick={() => oF(p.onChange)(U, i)} key={i}>{tabulize(0, [[\n        <ListItemIcon>{(C => D(C) ? <C color={color}/> : null)(captionIconMap[title])}</ListItemIcon>, \n        <Typography color={color}>{cleanText(title)}</Typography>\n      ]], [[{width: \"2em\"}, U]])}</ListItem>})}\n    </List>; \n  }\n}\n\nclass TabbedView extends Comp { constructor(p) { super(p, { selectedTabIx: 0 }); this.fers.visibleTab = {}; }\n  getVisibleTab() { return this.fers.visibleTab.current; }\n  ren(p, s) {let selTabIx = (D(p.selectedTabIx) ? p.selectedTabIx : s.selectedTabIx) || 0;\n    let TabsControl = D(p.tabsControl) ? p.tabsControl : U;\n    let horizontal = p.horizontal;\n    let tabsProps = { value: selTabIx, onChange: (e, selectedTabIx) => this.setState({ selectedTabIx }, oF(p.onChangeSelectedTabIx)(selectedTabIx)) };\n    let tabs = p.TabsControl ? p.TabsControl(tabsProps) : <Tabs indicatorColor=\"primary\" textColor=\"primary\" {...tabsProps} aria-label=\"tabs\" centered>{E(p.tabs).map(([title, control], i) => <Tab key={i} label={cleanText(title)} disabled={(oO(p.tabProps)[title])}/>)}</Tabs>;\n    //L(`TabbedView: pp: ${S(p.parentProps)}`)\n    let activeTab = K(p.tabs).length > 0 ? React.createElement(V(p.tabs)[selTabIx], ({...p.parentProps, childRef: this.fers.visibleTab})) : null;\n    return tabulize(0, horizontal ? [[tabs, activeTab]] : [[tabs], [activeTab]], horizontal ? [[{width: \"13em\", verticalAlign: \"top\"}, U]] : [[U], [U]]);\n  }\n}\n\nlet button = (caption, onClick, color) => <Button variant=\"contained\" color={[\"primary\", \"secondary\"][color || 0]} onClick={onClick}>{caption}</Button>\n\nclass TabTimeline extends Comp { constructor(p) { super(p, { selectedTabIx: 0 }); this.fers.tabbedView = React.createRef(); this.fers.visibleTab = {}; }\n  getTabbedView() { return this.fers.tabbedView.current; } \n  getVisibleTab() { return this.fers.visibleTab.current; }\n  ren(p, s) { let last = (i, o) => (i === (K(o).length - 1));\n    let f = o => G(o, (V, k, i) => () => tabulize(1/2, [[<Box><V {...p.parentProps} childRef={this.fers.visibleTab}/></Box>], [<Box>{tabulize(1/2, [[\n      p.onCancel && button(\"Cancel\", oF(p.onCancel)), \n      (i > 0) && button(\"Start over\", () => this.setState({ selectedTabIx: 0 })),\n      !last(i, o) && button(\"Next\", () => { let r = this.getVisibleTab().validate(); if (r) { \n        this.setState(L({ selectedTabIx: s.selectedTabIx + 1 }), () => (t => oF(t.setPrecedingResult).bind(t)(r))(this.getVisibleTab())); \n      }}),\n      last(i, o) && button(p.acceptText || \"Finish\", () => { let vt = this.getVisibleTab(); if (vt) { let r = vt.validate(); L(`>> r = ${S(r)}`); if (L(r)) oF((p.onAccept))(r); } })\n    ].filter(I)])}</Box>]]));\n    //L(`TabTimeLine:: ${S(p.parentProps)}`);\n    return <TabbedView onChangeSelectedTabIx={selectedTabIx => this.setState({selectedTabIx})} selectedTabIx={s.selectedTabIx} ref={this.fers.tabbedView} tabs={f(oO(p.tabs))} tabProps={G((p.tabs), (v, k, i) => (i !== (s.selectedTabIx)))} parentProps={p.parentProps}/>\n  }\n}\n\nclass TabTimelineNew extends Comp { constructor(p) { super(p, { selectedTabIx: 0 }); this.fers.visibleTab = {}; }\n  ren(p, s) { let C = V(p.tabs)[s.selectedTabIx];\n    return K(p.tabs).length === 1 ? <C childRef={this.fers.visibleTab} {...p.parentProps}/> :\n    <><Stepper activeStep={s.selectedTabIx} alternativeLabel>{K(oO(p.tabs)).map(label => (<Step key={label}><StepLabel>{label}</StepLabel></Step>))}</Stepper>\n    <C childRef={this.fers.visibleTab} {...p.parentProps}/>\n    </>\n  }\n}\n\nclass ValidatableComp extends Comp {\n  constructor(p, s, fers) { super(p, { values: {}, errors: {}, ...s }, fers);  }\n  setErrors(errors) { this.setState({ errors }, () => L(`New errors = ${S(this.state.errors)}`)); return (((K(errors).filter(I)).length) === 0); } \n  validate() { return true; }\n  genTextField(k, p) { let s = this.state; return <TextField error={(D(s.errors[k]))} variant=\"outlined\" ref={this.fers[k]} id={k} label={cleanText(k)} onChange={e => this.setState(({ values: { ...s.values, ...singleKeyObject(k, e.target.value)}}), () => { if (D(this.props.onChanged)) this.props.onChanged(this.state.values); })} value={oS(s.values[k])} {...p} helperText={s.errors[k] || oO(p).helperText}/> }\n}\n\nlet tabulize = (borderSpacing, cells, cellStyles) => <table style={{borderSpacing: `${borderSpacing || 0}em`}}><tbody>{cells.map((r, i) => <tr key={i}>{r.map((c, j) => \n  <td key={j} style={cellStyles && oO(oA(oA(cellStyles)[i])[j])}>{c}</td>)}</tr>)}</tbody></table> \nlet formTable = cells => tabulize(1.5, cells)\nlet form = (preamble, cells) => <form noValidate autoComplete=\"off\">{preamble}{formTable(cells)}</form>\n\nclass DialogWrap extends Comp { ren(p, s) { \n  //L(`DialogWrap parentProps = ${S(p.parentProps)}`)\n  let C = p.comp; let id = cleanText(p.id);\n  return <Dialog aria-labelledby={id} open={p.open} onClose={() => { oF(p.onClose)(); this.setState({ open: false }); }}><h2>{id}</h2><C {...p.parentProps} onCancel={p.onCancel} onAccept={p.onAccept}/></Dialog> \n} } \n\nclass OpenDialogButton extends Comp { constructor(p, s) { super(p, { ...s, open: false }); }\n  ren(p, s) { return <>{button(cleanText(p.id), () => this.setState({ open: true }))}\n    <DialogWrap open={s.open} comp={p.comp} id={p.id} onAccept={d => { p.onAccept(d); this.setState({ open: false }); }} onCancel={() => { oF(p.onCancel)(); this.setState({ open: false }); }} parentProps={p.parentProps}/></> }\n}\n \nclass GetPasswordView extends ValidatableComp {\n  constructor(p, s) { super(p, s, \"Password\"); }\n  ren(p, s) { return formTable([[preamble(\"Please enter your password to confirm\", `Enter the password for wallet '${p.walletName}'`)], [<LockIcon fontSize={\"large\"}/>], \n    [this.genTextField(\"Password\", { type: \"password\" })]]) }\n  validate() { return this.state.values; }\n}\n\nclass GetPasswordDialog extends Comp { //constructor(p, s) { super(p, s, \"dlg\"); }\n  ren(p, s) { return <DialogWrap open={oB(p.open)} comp={() => <TabTimeline tabs={{GetPasswordView}} walletName={p.walletName} onAccept={p.onAccept} onCancel={p.onCancel} />}/> }\n}\n\nclass ProgressDialog extends Comp { ren(p, s) { let id = cleanText(p.title); \n  return <Dialog aria-labelledby={id} open={p.open} onClose={oF(p.onClose)}><h2>{cleanText(id)}</h2>{tabulize(3, [[<CircularProgress  value={p.progress} />]])}</Dialog> \n} }\n\nlet testModeComp = (testMode, C) => (testMode ? <div style={{borderStyle: \"dashed\", borderWidth: \"1px\", borderRadius: `0.333em`, borderColor: '#7A7'}}><C/></div> : null)\n\nlet wrapEllipsisDiv = v => <div style={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\"}}>{v}</div>;\nlet newTabRef = (link, caption) => <a target=\"_blank\" rel=\"noopener noreferrer\" href={link}>{caption}</a>;\nlet aLink = (src, caption) => wrapEllipsisDiv(newTabRef(src, caption)); \nlet extractHeaders = d => F(K(oO(oA(d)[0])).map(h => [h, { label: h, caption: h }]));\n\n\nlet dataList = (d, options) => <ListView data={d} headers={V(genHeaders(d))} {...options}/>; \n\nlet compareStrings = (a, b) => a.localeCompare(b);\nlet compareBNs = (a, b) => a.isLessThan(b); \nlet commonDataTypes = {\n  btcTransferType: { caption: \"Type\", displayFunc: x => cleanText(oS(K(oO(x))[0])) },\n  vinout: { caption: \"Entry\", displayFunc: dataList },\n  btcAddress: { caption: \"BTC address\", displayFunc: v => aLink(`https://www.blockchain.com/en/btc/address/${v}`, v), compare: compareStrings },\n  ethAddress: { caption: \"ETH address\", displayFunc: v => aLink(`https://etherscan.io/address/${v}`, v), compare: compareStrings },\n  btcTx: { caption: \"Bitcoin transaction\", displayFunc: v => aLink(`https://www.blockchain.com/en/btc/tx/${v}`, v), compare: compareStrings },\n  pubKey: { caption: \"Public key\", displayFunc: wrapEllipsisDiv, compare: compareStrings },\n  status: { caption: \"Status\", displayFunc: cleanText, compare: compareStrings },\n  btcSatoshis: { caption: \"Amount (BTC)\", align: \"right\", alignCaption: \"right\", displayFunc: x => satoshiToBTCString(x), compare: compareBNs },\n  btc: { caption: \"Amount (BTC)\", align: \"right\", alignCaption: \"right\", displayFunc: x => btcToString(x), compare: compareBNs }\n}\nlet commonTableHeaders = G({ txId: { type: \"btcTx\" }, btcAddress: { type: \"btcAddress\" }, fromBTC: { caption: \"From BTC Address\", type: \"btcAddress\" }, toBTC: { caption: \"To BTC Address\", type: \"btcAddress\" }, ethAddress: { type: \"ethAddress\" }, pubKey: { type: \"pubKey\" }, satoshiBN: { type: \"btcSatoshis\" }, depositedValue: { caption: \"Deposited value (BTC)\", type: \"btcSatoshis\" },  currentValue: { caption: \"Current value (BTC)\", type: \"btcSatoshis\" }, fee: { caption: \"Fee\", type: \"btcSatoshis\" }, delta: { caption: \"Delta\", type: \"btcSatoshis\" }, value: { type: \"btcSatoshis\" }, status: { type: \"status\" }, ins: { caption: \"Inputs\", type: \"vinout\" }, outs: { caption: \"Outputs\", type: \"vinout\" }, fundDepositAddress: { caption: \"Fund deposit address\", type: \"btcAddress\"}, fromPubKey: { caption: \"From public key\", type: \"pubKey\" }, fromBtcAddress: { caption: \"From BTC address\", type: \"btcAddress\" }, derivedEthAddress: { caption: \"Derived ETH Address\", type: \"ethAddress\" }, timestamp: { caption: \"Time\", align: \"left\", alignCaption: \"left\", displayFunc: formatTimestamp }, time: { caption: \"Time\", align: \"left\", alignCaption: \"left\", displayFunc: formatTimestamp } }, v => ({...(D(v.type) ? commonDataTypes[v.type] : {}), ...v}));\n \nlet applyListHeaders = (h, mods)  => { E(mods).forEach(([k, v]) => A(oO(h[k]), v)); return h; };\nlet genHeaders = d => applyListHeaders(extractHeaders(d), commonTableHeaders);\n\nlet applyHeaders = h => applyListHeaders(h, {\n  //  txId: { caption: \"BTC Transaction\", displayFunc: displayBtcTransaction },\n    name: { caption: \"Wallet name\" },\n    privateKey: { caption: \"Encrypted Private Key\", displayFunc: wrapEllipsisDiv },\n    chainCode: { caption: \"Encrypted Chain Code\", displayFunc: wrapEllipsisDiv },\n    publicKey: { caption: \"Public Key\", displayFunc: wrapEllipsisDiv },\n    btcAddress: { caption: \"Bitcoin Wallet Address\", displayFunc: wrapEllipsisDiv },\n    ethAddress: { caption: \"Ethereum Investor address\", displayFunc: wrapEllipsisDiv },\n  //  value: { caption: \"Amount (BTC)\", align: \"right\", alignCaption: \"right\" }\n  });\n    \nlet preamble = (title, text, warning) => <><h2 style={{textAlign: \"left\"}}>{title}</h2><p style={{textAlign: \"left\"}}>{text}</p><p style={{textAlign: \"left\", color: \"#FF2170\"}}>{warning}</p></>;\nlet loadingComponent = (data, c) => D(data) ? c  : tabulize(5, [[<CircularProgress/>]]);\n\nlet dataSummary = (n, data, valueKey) => (d => tabulize(1/3, [[`Number of ${n}s:`, d.length], [`Total ${n} value:`, satoshiToBTCString(d.reduce((p, c) => p.plus((c[valueKey || \"satoshiBN\"])), BN(0)))],\n  [`Time of first ${n}:`, formatTimestamp(d.reduce((p, c) => D(p) ? Math.min(p, c.timestamp) : c.timestamp, U))],\n  [`Time of last ${n}:`, formatTimestamp(d.reduce((p, c) => D(p) ? Math.max(p, c.timestamp) : c.timestamp, U))]\n]))(oA(data))\n\nexport { dataList, dataSummary, testModeComp, GetPasswordDialog, preamble, loadingComponent, commonTableHeaders, applyListHeaders, extractHeaders, genHeaders, wrapEllipsisDiv, Sidebar, Comp, ValidatableComp, DialogWrap, ProgressDialog, ListView as List, TabbedView, Selector, captionMap, OpenDialogButton, cleanText, TabTimeline, button, tabulize, formTable, form, commonDataTypes }","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\n/* eslint no-unused-vars: 0 */\nimport React from 'react';\n// eslint-disable-next-line\nimport { A, D, E, F, G, I, K, L, S, T, V, oA, oF, oO, singleKeyObject } from '../common/tools';\nimport { data, getInvestorWalletDataKey, getInvestorDataKey, stati } from '../core/data';\n// eslint-disable-next-line\nimport { dataSummary, tabulize, commonDataTypes, genHeaders, ValidatableComp, Comp, TabbedView, List, cleanText, button, TabTimeline } from './components'; \n\nclass DataDependentView extends Comp {\n  componentDidMount() { this.componentDidUpdate({}); }\n  componentDidUpdate(prevP) { if (prevP.investor !== this.props.investor) this.updateInvestor(this.props.investor); } \n} \nclass InvestorDependentView_Eth extends DataDependentView { \n  updateInvestor(investor) { if (investor) { this.addSyncKeyObserver(data, getInvestorDataKey(investor)); data.computeInvestorData(investor); } }\n  getInvestorData() { return oO(this.props.investor && this.state[getInvestorDataKey(this.props.investor)]); }\n}  \n\nclass InvestorDependentView_Btc extends DataDependentView { \n  updateInvestor(investor) { if (investor) { this.addSyncKeyObserver(data, getInvestorWalletDataKey(investor)); data.retrieveInvestorWalletData(investor); } }\n  getInvestorWalletData() { return oO(this.props.investor && this.state[getInvestorWalletDataKey(this.props.investor)]); }\n} \n\nclass InvestorID extends Comp { ren(p, s) { let i = oO(p.investor); return tabulize(1/7, [\n  ['Public key', i.pubKey || '?'], \n  ['Investor address (eth)', commonDataTypes.ethAddress.displayFunc(i.data) || '?'], \n  ['Wallet address (btc)', commonDataTypes.btcAddress.displayFunc(i.btcAddress) || '?']]) \n} }\n\nclass EthTxView extends InvestorDependentView_Eth { ren(p, s) { let i = this.getInvestorData(); \n  let headers = F(T(\"Deposits Pending_Withdrawals Withdrawals\").map(k => [k, genHeaders(i[k])]));\n  headers = G(headers, v => V(v).filter(h => (p.EDeveloperMode.Developer) || T(\"status depositedValue currentValue txId pubKey timestamp\").includes(h.label)));\n  return <TabbedView style={{ display: D(p.investor) ? \"block\" : \"none\" }} caption={`Investor ${oO(p.investor).data}`} tabs={G(headers, (v, k) => () => \n  tabulize(1/2, [[dataSummary(k.slice(0, -1), i[k], \"currentValue\")], [<List data={i[k]} headers={v} />]]))} />;\n} }\n\nclass InvestorList extends Comp { componentDidMount() { this.addSyncKeyObserver(data, \"investorsAddresses\"); }\n  ren(p, s) { \n    let h = genHeaders(s.investorsAddresses);\n    A(oO(h.data), { caption: \"Address\", ...commonDataTypes.ethAddress });\n    return <List caption={p.caption || \"Investors\"} data={s.investorsAddresses} headers={V(h)} onChange={d => oF(p.onChangedSelectedInvestor)(oA(s.investorsAddresses)[d.selectedIx])} />; \n  }\n}\n\nexport { InvestorList, InvestorID, EthTxView, InvestorDependentView_Eth, InvestorDependentView_Btc }","// eslint-disable-next-line\nimport { A, D, E, H, I, K, L, P, R, S, T, U, V, oA, oF, oO, oS, asA, singleKeyObject } from '../common/tools'; \nimport { decryptWallet, getWalletRoot, getAmfeixPublicKey, btcAddressFromPubKey, pubKeyBufferToPoint, ethAddressFromPubKey, encryptSeedWords, rootFromSeed, getAmfeixPrivateKey } from '../common/crypto.mjs';\nimport { Persistent } from './persistent'\n\nclass Wallet extends Persistent { \n  constructor() { super(\"wallet\", [\"accounts\"], { accounts: {} }); L('Creating Wallet class instance.'); }\n\n  async openWallet(creds, wallet) {// L(`openWallet: ${S(creds)} wallet: ${S(wallet)}`)\n    let w = await decryptWallet(P(wallet, T(\"privateKey chainCode\")), creds.Password); \n    let root = getWalletRoot(w);\n    let pub = getAmfeixPublicKey(root);\n    return ({ privateKey: w.privateKey, chainCode: w.chainCode, publicKey: pub.toString('hex'), btcAddress: btcAddressFromPubKey(pubKeyBufferToPoint(pub)), ethAddress: ethAddressFromPubKey(pub) }); \n  }\n\n  async add(creds, seedWords) { \n    let w = await encryptSeedWords(seedWords, creds.Password); \n    let d = await this.openWallet(creds, w); \n    let root = rootFromSeed(seedWords);\n    if (root.privateKey.toString('hex') !== d.privateKey.privateKey.toString('hex')) throw R(\"Encryption error (private key mismatch)\");\n    if (root.chainCode.toString('hex') !== d.chainCode.privateKey.toString('hex')) throw R(\"Encryption error (chainCode mismatch)\");\n    this.accounts[creds.Wallet] = { name: creds.Wallet, ...w, ...P(d, T(\"publicKey btcAddress ethAddress\")) };\n    this.persist(); \n    return this.lastLogin = this.accounts[creds.Wallet];\n  } \n\n  async getPrivateKey(creds) {\n    let d = await this.openWallet(creds, this.accounts[creds.Wallet]);\n    return getAmfeixPrivateKey(getWalletRoot(d)).toString('hex');\n  }\n\n  async open(creds) { \n    let d = await this.openWallet(creds, this.accounts[creds.Wallet]);\n    (A(this.accounts[creds.Wallet], { name: creds.Wallet, ...P(d, T(\"publicKey btcAddress ethAddress\")) }));\n    return this.lastLogin = this.accounts[creds.Wallet]; \n  }\n}\n\nlet wallet = new Wallet();\n\nexport { wallet }\n//nStMSFYWGfFL5QW","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\n/* eslint react/display-name: 0 */\nimport React from 'react';\n// eslint-disable-next-line\nimport { A, D, E, F, G, I, K, L, S, T, U, V, oA, oO } from '../common/tools';\nimport { Transaction, data } from '../core/data';\n// eslint-disable-next-line\nimport { form, formTable, ProgressDialog, GetPasswordDialog, loadingComponent, applyListHeaders, commonTableHeaders, genHeaders, ValidatableComp, OpenDialogButton, Comp, TabbedView, List, tabulize, TabTimeline, preamble, button } from './components';\nimport { InvestorList, EthTxView } from './investor';\nimport { Typography } from '@material-ui/core';\nimport { BN }  from '../core/bignumber';\nimport { satoshiToBTCString } from '../core/satoshi';\nimport { formatTimestamp } from './formatting';\nimport { wallet } from '../core/wallet';\nimport { pubKeyToEthAddress } from \"../common/crypto.mjs\";\n\nclass Approve_actions_Form extends ValidatableComp { constructor(p, s, actionName, propertyLabel) { super(p, s); A(this, { actionName, propertyLabel });  }\n  validate() { return this.props[this.propertyLabel]; }\n  ren(p, s) { let d = oA(p[this.propertyLabel]), n = this.actionName;\n    return form(preamble(`Approve ${n}s`, `Click 'Confirm' to approve all pending ${n}s.`), [\n      [`Number of pending ${n}s:`, d.length],\n      [`Total ${n} value:`, satoshiToBTCString(d.reduce((p, c) => p.plus((c.satoshiBN)), BN(0)))],\n      [`Time of first ${n}:`, formatTimestamp(d.reduce((p, c) => D(p) ? Math.min(p, c.timestamp) : c.timestamp, U))],\n      [`Time of last ${n}:`, formatTimestamp(d.reduce((p, c) => D(p) ? Math.max(p, c.timestamp) : c.timestamp, U))]\n    ])\n  }\n}\n\nclass Approve_deposits_Form extends Approve_actions_Form { constructor(p, s) { super(p, s, \"deposit\", \"pendingDeposits\"); } }\nclass Approve_withdrawals_Form extends Approve_actions_Form { constructor(p, s) { super(p, s, \"withdrawal\", \"pendingWithdrawals\"); } }\n\nclass Approve_all_pending_deposits extends Comp { ren(p, s) { \n  return <TabTimeline tabs={{ Approve_deposits_Form }} acceptText=\"Confirm\" onAccept={p.onAccept} onCancel={p.onCancel} parentProps={{pendingDeposits: p.pendingDeposits}} />;\n} } \n\nclass Approve_all_pending_withdrawals extends Comp { ren(p, s) { \n  return <TabTimeline tabs={{ Approve_withdrawals_Form }} acceptText=\"Confirm\" onAccept={p.onAccept} onCancel={p.onCancel} parentProps={{pendingWithdrawals: p.pendingWithdrawals}} />;\n} }\n\nlet textField = (title) => ({ title });\nlet generateForm = (preambleText, aa) => {\n  return class extends ValidatableComp { constructor(p, s) { super(p, s, aa.flat().map(x => x.title).join(\" \")); }\n    ren(p, s) { return form(preamble(preambleText), aa.map(a => a.map(tf => this.genTextField(tf.title)))) }\n    validate() { return this.state.values; }\n  }\n}\n\nlet changeDataForms = {\n  Owner: generateForm(\"Please enter the new Owner\", [[textField(\"Owner\")]]),\n  AUM: generateForm(\"Please enter the new AUM\", [[textField(\"AUM\")]]),\n  BtcPrice: generateForm(\"Please enter the new BtcPrice\", [[textField(\"BtcPrice\")]]),\n  RequestGas: generateForm(\"Please enter the new AUM\", [[textField(\"RequestGas\")]]),\n  Daily_change: generateForm(\"Please enter the new Daily_change\", [[textField(\"Daily_change\")]]),\n  Fees: generateForm(\"Please enter the new Fees\", [T(\"fee1 fee2 fee3\").map(textField)]),\n  Fund_deposit_address: generateForm(\"Please enter the new Fund_deposit_address\", [[textField(\"Fund_deposit_address\")]]),\n  Fee_address: generateForm(\"Please enter the new Fee_address\", [[textField(\"Fee_address\")]])\n} \n\nlet wrapFormInTabTimeline = f => p => <TabTimeline tabs={{ _0: f }} onAccept={p.onAccept} onCancel={p.onCancel} />;\nlet adminSetters = G(changeDataForms, wrapFormInTabTimeline);\n\nclass Deposits extends Comp {\n  componentDidMount() { this.addSyncKeyObserver(data, \"fundDeposits\"); }\n  ren(p, s) { return loadingComponent(s.fundDeposits, <TabbedView tabs={F(E(s.fundDeposits).map(([k, v], i) => [`Deposit address #${i}`, () => <List data={v} headers={V(genHeaders(v))}/>]))}/>) }\n}\n\nclass Investors extends Comp { \n  ren(p, s) { return tabulize(1/3, [[<InvestorList onChangedSelectedInvestor={investor => this.setState({ investor })} EDeveloperMode={p.EDeveloperMode} />], \n    [D(s.investor) ? <EthTxView investor={s.investor} EDeveloperMode={p.EDeveloperMode} /> : tabulize(5/3, [[<Typography>{'Select an investor to show their transactions'}</Typography>]])]]) }\n}\n\nlet qEthTx = (method, params) => data.queuedEthTransactions.push(L(new Transaction(method, params))); \nclass Change_data extends Comp { \n  Owner(d) { qEthTx(\"transferOwnership\", [BN(d[\"Owner\"]).toString()]); }\n  AUM(d) { qEthTx(\"setAum\", [BN(d[\"AUM\"]).times(data.getFactor()).toString()]); }\n  BtcPrice(d) { qEthTx(\"setBtcPrice\", [BN(d[\"BtcPrice\"]).times(data.getFactor()).toString()]); }\n  RequestGas(d) { qEthTx(\"setRequestGas\", [BN(d[\"RequestGas\"]).toString()]); }\n  Daily_change(d) { qEthTx(\"setDataBlock\", [(BN(d[\"Daily_change\"]).times(data.getFactor())).toFixed().toString()]); }\n  Fees(d) { d = G(d, x => BN(x).toString()); qEthTx(\"setFee\", [d[\"fee1\"], d[\"fee2\"], d[\"fee3\"]]); }\n  Fund_deposit_address(d) { qEthTx(\"setfundDepositAddress\", [d[\"Fund_deposit_address\"]]) }\n  Fee_address(d) { qEthTx(\"setFeeAddress\", [d[\"Fee_address\"]]); }\n\n  ren(p, s) { return tabulize(5/3, V(G(adminSetters, (v, k) => [<OpenDialogButton id={k} comp={v} onAccept={d => this[k](d)} onCancel={I}/>]))) }\n}\n\nclass Pending_Deposits extends Comp { componentDidMount() { this.addSyncKeyObserver(data, \"pendingDeposits\"); }\n  approveAll(deps) { data.queuedEthTransactions.push(...deps.map(d => new Transaction(\"depositAdmin\", [pubKeyToEthAddress(d.pubKey, true), d.txId, d.pubKey, \"\"]))) }  \n  ren(p, s) { let pendingDeposits = oA(V(oO(s.pendingDeposits))[0]); //L(`Pending_Deposits: ${S(pendingDeposits)}`);\n    L(`admin wallet last login: ${S(oO(p.wallet).lastLogin)}`);\n    return loadingComponent(s.pendingDeposits, tabulize(5/3, [\n      [<OpenDialogButton id=\"Approve_all_pending_deposits\" parentProps={{ pendingDeposits }} comp={Approve_all_pending_deposits} onAccept={d => this.approveAll(d)}/>],\n      [<TabbedView tabs={F(E(s.pendingDeposits).map(([k, v], i) => [`Deposit address #${i}`, () => <List data={v} headers={V(genHeaders(v))}/>]))}/>]\n    ].filter(I))) \n  }\n}\n\nclass Pending_Withdrawals extends Comp { componentDidMount() { this.addSyncKeyObserver(data, \"withdrawalRequests\"); }\n  approveAll(withs) { data.queuedEthTransactions.push(...withs.map(d => new Transaction(\"returnInvestment\", [pubKeyToEthAddress(d.pubKey, true), d.txId, d.pubKey, \"\"]))) }\n  ren(p, s) {  let pendingWithdrawals = oA(s.withdrawalRequests);\n    return loadingComponent(s.withdrawalRequests, tabulize(5/3, [\n    [<OpenDialogButton id=\"Approve_all_pending_withdrawals\" parentProps={{ pendingWithdrawals }} comp={Approve_all_pending_withdrawals} onAccept={d => this.approveAll(d)} />],\n    [<List data={s.withdrawalRequests} headers={V((genHeaders(s.withdrawalRequests)))} />]\n  ])) }\n}\n\nclass Queued_Eth_Transactions extends Comp {\n  componentDidMount() { this.addSyncKeyObserver(data, \"queuedEthTransactions\"); }\n  signAndSubmit(creds) { L(`signAndSubmit : ${S(creds)}`);\n     this.setState({ progressDialogOpen: true, progressDialogTitle: \"Decrypting wallet...\" }, () => setTimeout(async () => await this.performApproveWithCreds(creds), 500))\n  }\n  async performApproveWithCreds(creds) { //L(`performApproveWithCreds : ${S(creds)}`)\n    let privateKey = await wallet.getPrivateKey(creds); \n    this.setState({ progressDialogOpen: true, progressDialogTitle: \"Signing transactions...\" }, () => setTimeout(async () => {\n      await data.signAndSubmitQueuedEthTransactions(privateKey); \n      data.queuedEthTransactions = data.queuedEthTransactions.map(x => ({ ...x, status: \"Submitted\" }))\n      this.setState({ progressDialogOpen: false, getPwdDialogOpen: false });\n    }, 500));\n  } \n  ren(p, s) { let Wallet = oO(oO(p.wallet).lastLogin).name;\n    return tabulize(5/3, [ \n      [<>{button(\"Sign and submit queued transactions\", () => this.setState({ getPwdDialogOpen: true }))}<ProgressDialog open={s.progressDialogOpen || false} title={s.progressDialogTitle} progress={U} />\n      <GetPasswordDialog open={s.getPwdDialogOpen} walletName={Wallet} onAccept={creds => this.signAndSubmit({ ...creds, Wallet })} onCancel={() => this.setState({ getPwdDialogOpen: false })}/></>],\n      [<List data={s.queuedEthTransactions} headers={V((genHeaders(s.queuedEthTransactions)))} />]\n    ]) \n  }\n}\n\nexport class Admin extends Comp {\n  ren(p, s) { //L(`admin wallet: ${S(p.wallet)}`);\n    return <TabbedView tabs={{ Investors, Pending_Withdrawals, Deposits, Pending_Deposits, Change_data, Queued_Eth_Transactions }} parentProps={{ wallet: p.wallet, EDeveloperMode: p.EDeveloperMode }}/>; }\n}\n","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\nimport React from 'react';\n// eslint-disable-next-line\nimport { Box, TextField } from '@material-ui/core';\n// eslint-disable-next-line\nimport { Comp, ValidatableComp, TabbedView, TabTimeline, button, formTable, form, preamble } from './components'; \n// eslint-disable-next-line\nimport { A, D, E, F, H, I, K, L, S, U, V, oA, oF, oO, oS, asA, singleKeyObject } from '../common/tools'; \nimport * as bip39 from 'bip39';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { generateSeedWords } from \"../common/crypto\";\n\n//let defaultWords = 'gorilla endorse hat lumber old price route put goose sail lemon raise'.split(\" \");\n\nclass SeedView extends ValidatableComp {\n  constructor(p, s) { super(p, s);  \n    this.setNewInitialWords();\n    this.initRefs(K(this.state).join(\" \"));\n    this.constructed = true; \n  }\n  setNewInitialWords() {  \n     let values = {};\n     for (let q = 0; q < 12; ++q) values[this.getKey(q)] = oS(oA(this.props.initialWords)[q]);  \n     if (this.constructed) { this.setState({ values }); } else { this.state.values = values; }\n  }\n  checkWordsInList(wordList) { //L(`checkWordsInList: ${wordList}`);\n    return this.setErrors(F(this.getWords().map((w, i) => (!(wordList.includes(w))) ? `Word '${w}' is not an accepted word.` : U).filter(I).map((r, i) => [this.getKey(i), (r)])));  \n  }\n  checkWordsEqual(expectedWords) { let gotWords = this.getWords();  \n    return this.setErrors(F(gotWords.map((w, i) =>  (!(w === expectedWords[i])) ? `This word is not correct.` : U).filter(I).map((r, i) => [this.getKey(i), r])));  \n  }\n  componentDidUpdate(prevP) { if (prevP.initialWords !== this.props.initialWords) this.setNewInitialWords(); }\n  getKey(x) { return `Word_${x}`}\n  getWords() { let result = []; for (let q = 0; q < 12; ++q) result.push(this.state.values[this.getKey(q)]);  return result; }\n  ren(p, s) { return formTable([0, 1, 2].map(a => [0, 1, 2, 3].map(b => this.genTextField(this.getKey(4*a + b), { disabled: p.disabled })))) }\n}\n\nclass Setup_password extends ValidatableComp { constructor(p, s) { super(p, s, \"Wallet Password Confirm_password\"); }\n  ren(p, s) { return form(preamble(\"Setup password\", \"Your wallet will be password protected and encrypted. Please, choose a strong password.\"), \n    [[this.genTextField(\"Wallet\")], [this.genTextField(\"Password\", { type: \"password\" })], [this.genTextField(\"Confirm_password\", { type: \"password\" } )]]) }\n  validate() { let e = {};\n    if (this.state.values.Password !== this.state.values.Confirm_password) { e[\"Password\"] = \"Passwords don't match\"; e[\"Confirm_password\"] = \"Passwords don't match\"; } \n    if (oS(this.state.values.Password).length < 8) e[\"Password\"] = \"Please use at least 8 characters\";\n    if (oS(this.state.values.Wallet).length < 1) e[\"Wallet\"] = \"Please choose a name for your wallet\";\n    return ((this.setErrors(e)) && (this.state.values));\n  }\n}\n\nclass Enter_credentials extends ValidatableComp { constructor(p, s) { super(p, s, \"Wallet Password\"); }\n  ren(p, s) { return formTable([[preamble(\"Unlock your wallet\", \"Select a wallet, type the password and unlock it.\")], [<LockIcon fontSize={\"large\"}/>], \n    [this.genTextField(\"Wallet\")], [this.genTextField(\"Password\", { type: \"password\" })]]) }\n  validate() { let e = {};\n    if (oS(this.state.values.Password).length < 1) e[\"Password\"] = \"Please enter your password\";\n    if (oS(this.state.values.Wallet).length < 1) e[\"Wallet\"] = \"Please choose a wallet\";\n    return this.setErrors(e) && { creds: this.state.values };\n  }\n}\n\nclass Backup_seed extends ValidatableComp { constructor(p, s) { super(p, s, \"seedView\"); }\n  validate() { return { creds: this.state.creds, words: this.state.words }; }\n  componentDidMount() { super.componentDidMount(); this.setState({ words: generateSeedWords() }) }\n  setPrecedingResult(creds) { this.setState({ creds }) }\n  ren(p, s) {\n    return <form noValidate autoComplete=\"off\">\n      {preamble(\"Backup seed\", \"Please write these 12 words down, in order, and keep them somewhere safe offline. With them you will be able to recover your wallet.\", \"Never give your seed keys to anyone, we will never ask you to share them with us.\")}\n      <SeedView ref={this.fers.seedView} initialWords={s.words} disabled={true} /></form>;\n  }\n}\n\nclass Verify_seed extends ValidatableComp { constructor(p, s) { super(p, s, \"seedView\"); }\n  setPrecedingResult(input) { this.setState({ ...input }) }\n  validate() { let sv = this.fers.seedView.current; return sv.checkWordsEqual(oA(this.state.words)) && { creds: this.state.creds, seedWords: this.state.words }; }\n  ren(p, s) {\n    return <form noValidate autoComplete=\"off\">{preamble(\"Verify seed\", \"Your seed is very important! If your lose your seed your funds will be permantently lost.\")}\n      <SeedView ref={this.fers.seedView}/></form>;\n  }\n}\n\nclass Input_seed extends ValidatableComp { constructor(p, s) { super(p, s, \"seedView\"); }\n  setPrecedingResult(creds) { this.setState({ creds }) }\n  validate() { let sv = this.fers.seedView.current; return sv.checkWordsInList(bip39.wordlists.english) && { creds: this.state.creds, seedWords: sv.getWords() }; } \n  ren(p, s) { return <form noValidate autoComplete=\"off\">{preamble('Input seed', 'Restore your wallet from your previously backed up seed.', 'Never give your seed keys to anyone, we will never ask you to share them with us.')}\n    <SeedView ref={this.fers.seedView}/></form>;\n  }\n} \n\nclass Unlock_wallet extends Comp { ren(p, s) { return <TabTimeline tabs={{ Enter_credentials }} onAccept={p.onAccept} onCancel={p.onCancel} acceptText=\"Unlock\"/>; } }\nclass Create_wallet extends Comp { ren(p, s) { return <TabTimeline tabs={{ Setup_password, Backup_seed, Verify_seed }} onAccept={p.onAccept} onCancel={p.onCancel}/>; } }\nclass Seed_Login extends Comp { ren(p, s) { return <TabTimeline tabs={{ Setup_password, Input_seed }} onAccept={p.onAccept} onCancel={p.onCancel}/>; } }\n\nexport class LogIn extends Comp { ren(p, s) { return <TabbedView tabs={{ Unlock_wallet, Create_wallet, Seed_Login }} parentProps={{ onAccept: p.onAccept, onCancel: p.onCancel }}/>; } }","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport { A, S, V, oA, oO } from '../common/tools';\nimport { amfeixAddressLists, btcRpcUrl, btcFields, data, ethBasicFields } from '../core/data';\n// eslint-disable-next-line\nimport { button, genHeaders, commonDataTypes, Selector, Comp, TabbedView, List, captionMap, tabulize } from './components';\n//import { genHeaders } from './investor';\n\nclass Bitcoin_P2P_Network extends Comp {\n  componentDidMount() { btcFields.forEach(f => this.addSyncKeyObserver(data, f)); }\n  ren(p, s) { return tabulize(1/3, [\n    [tabulize(1/3, [[\"RPC url\", btcRpcUrl]])], \n    [<List data={(btcFields.map(name => ({ name, value: S(oO(s[name]).result) })))} />], \n    [button(\"Refresh\", data.updateConstants['btc'])]\n  ]); }\n} \n\nclass Ethereum_P2P_Network extends Comp {\n  componentDidMount() { amfeixAddressLists.concat(ethBasicFields).concat([\"ethRPCUrl\"]).forEach(f => this.addSyncKeyObserver(data, f)); }\n  ren(p, s) {\n    return tabulize(2/3, [\n      [tabulize(1/3, [[\"RPC url\", s.ethRPCUrl]])],\n      [<List data={ethBasicFields.map(name => ({ name, value: S(oO(s[name])) }))} />],\n      [button(\"Refresh\", data.updateConstants['eth'])],\n      [tabulize(1/3, [amfeixAddressLists.map(k => {\n        let h = genHeaders(s[k]);\n        A(oO(h.data), { caption: \"Address\", displayFunc: commonDataTypes.btcAddress.displayFunc });\n        return tabulize(1/3, [[<List caption={captionMap[k]} data={(oA(s[k]))} headers={V(h)} />], [button(\"Refresh\", () => data.updateFixedLengthArray(k))]]);\n      })])]\n    ]);\n  }\n}\n\nexport class Network extends Comp { ren(p, s) { return <TabbedView tabs={({ Bitcoin_P2P_Network, Ethereum_P2P_Network })} />; } }\n","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\nimport React from 'react';\n// eslint-disable-next-line\nimport { D, E, L, S, U, oO } from '../common/tools';\nimport { data } from '../core/data';\nimport { tabulize, Comp, List } from './components'; \nimport { LinearProgress } from '@material-ui/core' \n\nclass ProgressDependentView extends Comp {\n  componentDidMount() { \n    let displayDelay = 500, lastUpdate = (Date.now() - displayDelay);\n    this.addSyncObserver(data, \"loadProgress\", newProgress => {\n      let loadProgress = newProgress;\n      let currentTime = Date.now(), deltaS = (currentTime - lastUpdate), update = () => { //L({currentTime});\n        this.updateTimeout = false;\n        displayDelay = Math.min(4000, 1.17 * displayDelay);\n        lastUpdate = currentTime; \n        return !this.unmounted && this.setState({ loadProgress: { ...loadProgress } });\n      }; \n      if ((deltaS >= displayDelay)) { update(); } else if (!(this.updateTimeout)) { this.updateTimeout = setTimeout(update, displayDelay - deltaS); }\n    });\n  }  \n\n  isLoaded() { let d = oO(this.state.loadProgress?.progress)[\"Loading...\"]; return D(d?.length) && (d.index === d.length); }\n}\n\nclass Progress extends ProgressDependentView { \n  ren(p, s) { return tabulize(1/2, [\n    [tabulize(1/2, E((oO(oO(s.loadProgress).progress))).map(([key, d]) => [key, \n    D(d.index) ? tabulize(1/7, [[`${d.index} / ${D(d.length) ? d.length : '?'}` + (D(d.length) ? ` (${Math.round(100*(d.index/d.length))}%)` : '')], \n         [<LinearProgress variant={D(d.length) ? \"determinate\" : U} value={D(d.length) ? ((100*d.index)/d.length) : U} />]])\n    : `${S(d)} ms`\n  ]))],\n  [<List data={E((oO(oO(s.loadProgress).timings))).map(([key, data]) => ({ key, timing: `${S(data)} ms` }))} />]\n  ]); }\n}\n\nclass SimpleProgress extends ProgressDependentView { ren(p, s) { let d = oO(s?.loadProgress?.progress)[\"Loading...\"]; \n  return !this.isLoaded() ? tabulize(1/2, [[\"Loading...\"], [<LinearProgress variant={D(d?.length) ? \"determinate\" : U} value={D(d?.length) ? ((100*d.index)/d.length) : U} />]]) : null;\n} }\n\nexport { Progress, ProgressDependentView, SimpleProgress }","import { D } from '../common/tools';\n\nexport let darkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\nexport let getMainLightness = (fg, dm) => ((D(dm) ? dm : darkMode) ^ fg) ? 0 : 1;\nexport let getMainColor = (fg, dm) => [\"#000\", \"#FFF\"][getMainLightness(fg, dm)];\nexport let basePallette = dark => ({ color: getMainColor(true, dark), backgroundColor: getMainColor(false, dark) });\nexport let seriesColors = (i, dark) => [`#FF2170`, `#7021FF`, `#FF2170`, `#70FF21`][i % 4];\n","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\n// eslint-disable-next-line\nimport React from 'react'; //import ReactDOM from 'react-dom';\nimport Highcharts from 'highcharts/highstock'; import HighchartsReact from 'highcharts-react-official';\n// eslint-disable-next-line\nimport { basePallette, getMainLightness, seriesColors, getMainColor, darkMode } from './colors';\nimport { ethBasicFields, data } from '../core/data';\n// eslint-disable-next-line\nimport { ProgressDialog, OpenDialogButton, DialogWrap, Selector, ValidatableComp, Comp, TabbedView, button, tabulize, formTable } from './components'; \n// eslint-disable-next-line\nimport { AppBar, Toolbar, Button, Box, TextField, Paper } from '@material-ui/core';\n// eslint-disable-next-line\nimport { A, D, H, I, L, S, T, U, oA, oF, oS, asA } from '../common/tools'; \n// eslint-disable-next-line\nimport { InvestorID, InvestorList, EthTxView, InvestorDependentView_Eth } from './investor';\n// eslint-disable-next-line\nimport { satoshiToBTCFloat, satoshiToBTCString } from '../core/satoshi';\n\nlet chart = (title, valueSuffix, datas, dark) => <HighchartsReact constructorType={\"stockChart\"} highcharts={Highcharts} options={{ \n  rangeSelector: {selected: 1}, title: { text: title }, navigator: {enabled: true}, credits: {enabled: false}, \n  chart: { zoomType: \"x\", ...basePallette(dark),\n   events: { load: function() { //let n = Date.now(); let x =  this.xAxis[0]; if (D(x)) { x.setExtremes((n - 30*24*60*60*1000), n); this.showResetZoom(); } } \n  } } \n}, \n  plotOptions: { areaspline: { fillColor: `hsla(240, 75%, ${100*getMainLightness(true, dark)}%, 20%)` } }, \n  yAxis: [{ labels: { formatter: function () { return this.axis.defaultLabelFormatter.call(this) + valueSuffix; } } }],  \n  xAxis: { events: { aferSetExtremes: function(e) {  } }}, \n  series: datas.map((series, i) => ({ name: series.name, type: \"areaspline\", tooltip: { valueSuffix }, color: seriesColors(i, dark), data: series.data || [] })) \n}}/>;\n\nlet timeDataTrafo = (name, data) => ({ name, data })//: oA(data).map(([t, d]) => [t, d]) })\n\nclass FundIndexChart extends Comp { componentDidMount() { this.addSyncKeyObserver(data, \"timeData\");  }\n  ren(p, s) { return <Box>{chart('Fund Index', \" %\", [timeDataTrafo(\"ROI\", s.timeData)], p.dark)}</Box> }\n}\n\nexport class Impact_Fund extends InvestorDependentView_Eth {\n  componentDidMount() { super.componentDidMount(); ethBasicFields.concat(T(\"roi dailyChange timeData\")).map(k => this.addSyncKeyObserver(data, k)); } \n\n  ren(p, s) { let changePerc = v => D(v) ? `${v >= 0 ? \"+\" : \"-\"}${v}%` : ''; //L(`Fundview inv = ${S(p.investor)}`);\n    let iData = this.getInvestorData(); \n    let displayTrafo = { dailyChange: changePerc, aum: v => `${parseInt(v)/Math.pow(10, s.decimals)} BTC` }\n    let parfs = p => p.map((e, i) => <p key={i}>{e}</p>);\n    return tabulize(1/3, [p.urlParams.testMode ? [<InvestorID investor={p.investor}/>] : U,\n      [tabulize(1/3, [[tabulize(1/3, [[parfs(D(iData.investmentValue)  ? [`${satoshiToBTCString(iData.investmentValue)} BTC`, `Investment Value`] : [])], [parfs([changePerc(s.roi), `ROI`])]]), <FundIndexChart dark={p.dark}/>]])],\n      [tabulize(1/3, [T(\"dailyChange aum btcPrice\").map((v, i) => `${v}: ${(displayTrafo[v] || I)(s[v])}`)])],\n      [iData.valueSeries && chart('Investment Performance', \" BTC\", T(\"deposits interests withdrawals total\").map(k => timeDataTrafo(k, oF(iData.valueSeries)()[k])), p.dark)],\n      [<EthTxView investor={p.investor} EDeveloperMode={p.EDeveloperMode}/>]\n    ].filter(D)) \n  }\n}\n","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\n/* eslint no-unused-vars: 0 */\nimport React from 'react';\n// eslint-disable-next-line\nimport { Box, TextField } from '@material-ui/core';\n// eslint-disable-next-line\nimport { commonDataTypes, dataSummary, testModeComp, wrapEllipsisDiv, applyListHeaders, loadingComponent, OpenDialogButton, DialogWrap, Comp, ValidatableComp, tabulize, form, formTable, TabbedView, TabTimeline, button, List, genHeaders, dataList } from './components'; \n// eslint-disable-next-line\nimport { A, D, E, F, H, I, K, L, P, S, T, U, V, oA, oF, oO, oS, asA, singleKeyObject } from '../common/tools'; \nimport { InvestorDependentView_Btc, InvestorID, EthTxView } from './investor'\n// eslint-disable-next-line\nimport QRCode from 'qrcode-svg';\nimport { pubKeyToBtcAddress, pubKeyToEthAddress } from '../common/pubKeyConvertor.mjs';\nimport { satoshiToBTCString } from '../core/satoshi';\n// wc52mNR2qTpFfNP\n// eslint-disable-next-line\nclass _Withdraw_ extends Comp { ren(p, s) { return <TabTimeline tabs={{ Withdraw, Review, Done }} onCancel={p.onCancel} onAccept={p.onAccept}/>; } }\n\nclass Account extends Comp { constructor(p, s) { super(p, s, \"dlgWithdraw\"); }\n  ren(p, s) { I(`account: ${S(p.wallets)}`); let headers = V(applyListHeaders(F(T(\"name privateKey chainCode publicKey btcAddress ethAddress\").map(k => [k, ({ label: k, caption: k })]))));\n  return formTable([[<List data={(E(oO(oO(p.wallet).accounts)).map(([name, wallet]) => ({ name, ...wallet})))} headers={headers}/>], \n  //  [<OpenDialogButton id=\"Withdraw\" comp={WithdrawDialog} onAccept={I} onCancel={I}/>]\n  ])}\n}\n\nlet investorCompIfTestMode = (p) => testModeComp(p.urlParams.testMode, () => <InvestorID investor={p.investor} />); \n\nclass History extends InvestorDependentView_Btc { \n  ren(p, s) { let walletData = (this.getInvestorWalletData()), selectedTx = oO(oA(walletData.txs)[s.selectedTx]); //, allLoaded = txTypes.reduce((p, c) => p && D(walletData[c]), true); //L(`p.wallet = ${S(p.wallet)}`)\n//    let All_transactions = () => loadingComponent(allLoaded, simpleList(L(txTypes).map(type => oA(walletData[type]).map(d => ({...d, type: type.slice(0, type.length - 1) }))).flat()));\nL({walletData});\n    return tabulize(1/3, [[tabulize(1/3, [['Final balance', loadingComponent(walletData.finalBalance, commonDataTypes.btcSatoshis.displayFunc(walletData.finalBalance))]])], \n    [dataList(L(oA(walletData.txs).map(tx => P(tx, T(\"time txId type delta fee\")))), { onChange: selectedTx => this.setState({ selectedTx })})],\n    [tabulize(1/3, [[dataList(selectedTx.ins), dataList(selectedTx.outs)]])]]); \n  } \n}\n\nclass Invest extends ValidatableComp { ren(p, s) { L(`investor = ${S(p.investor)}`); let btcAddress = oS(oO(p.investor).btcAddress); let dim = 256; \n  let qrCode = btcAddress.length > 0 ? (new QRCode({ content: btcAddress, ecl: \"H\", width: dim, height: dim, join: true, container: \"svg-viewbox\", xmlDeclaration: false })).svg() : U;\n  return tabulize(1/3, [[qrCode ? <div style={{width: \"30em\", height: \"30em\"}} dangerouslySetInnerHTML={{ __html: qrCode }} /> : null], [this.genTextField(\"Bitcoin personal Investment address\", { value: btcAddress, disabled: true })]]); \n} } \n\nclass Done extends ValidatableComp { ren(p, s) { return <Box/>; } }\nclass Review extends ValidatableComp { ren(p, s) { return <Box/>; } }\nclass Withdraw extends ValidatableComp { ren(p, s) { return form(null, [[this.genTextField(\"To\", \"The address of the recipient\")], [this.genTextField(\"Amount\", \"Amount to be sent\")], [this.genTextField(\"Fees\")]]); } }\n\nexport class Bitcoin_Wallet extends Comp { ren(p, s) { let investor = oO(p.investor);\n  if (!D(investor.btcAddress) && D(investor.pubKey)) investor.btcAddress = pubKeyToBtcAddress(investor.pubKey);\n  if (!D(investor.ethAddress) && D(investor.pubKey)) investor.ethAddress = pubKeyToEthAddress(investor.pubKey);\n  return <>{tabulize(1/3, [[investorCompIfTestMode(p)],\n    [<TabbedView tabs={{ History, Invest, _Withdraw_ }} parentProps={{investor, ...(P(p, T(\"urlParams wallet\")))}} />],\n  [p.EDeveloperMode ? <EthTxView investor={investor} EDeveloperMode={p.EDeveloperMode}/> : null]\n])}</>\n} }\n","/* eslint react/jsx-key: 0 */\n/* eslint react/prop-types: 0 */\n/* eslint no-unused-vars: 0 */\nimport React from 'react';  \n// eslint-disable-next-line\nimport { A, C, D, E, F, G, H, I, K, L, P, S, T, U, V, oA, oO, oS, asA, makeEnum, singleKeyObject } from './common/tools';  \n// eslint-disable-next-line\nimport { FormControlLabel, Switch, List, ListItem, ListItemText, ListItemIcon, AppBar, Toolbar, Typography, Button, Box, TextField, Paper, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider}  from '@material-ui/core/styles';\n// eslint-disable-next-line\nimport { Sidebar, ProgressDialog, OpenDialogButton, DialogWrap, cleanText, Selector, ValidatableComp, Comp, TabbedView, button, tabulize, formTable, TabTimeline, form, preamble } from './ui/components'; \nimport { Admin } from './ui/admin';\nimport { LogIn } from './ui/login';\nimport { Network } from './ui/network';\nimport { Progress, SimpleProgress, ProgressDependentView } from './ui/loadProgressView'\nimport { Impact_Fund } from './ui/impactFund';\nimport { Bitcoin_Wallet } from './ui/wallet'; \n// eslint-disable-next-line\nimport { InvestorID, InvestorList, EthTxView, InvestorDependentView } from './ui/investor';\n//import ImpactFundIcon from './assets/impactFund.svg'\nimport { wallet } from './core/wallet';\nimport { pubKeyToEthAddress, pubKeyToBtcAddress } from \"./common/pubKeyConvertor.mjs\";\n// eslint-disable-next-line\nimport { basePallette, getMainLightness, seriesColors, getMainColor, darkMode } from './ui/colors';\nimport { version } from './version.js'; \nimport { data, ethInterfaceUrls } from './core/data'; \n// eslint-disable-next-line\nimport { EPallette, EUserMode, EDeveloperMode, enumDefault, enumDefObj } from './core/enums';   \n\nlet url = new URL(window.location.href);\nlet getUrlParam = k => (v => v === null ? U : v)(url.searchParams.get(k));\nlet urlParams = F(T(\"asEthAddress asPublicKey asBtcAddress\").map(k => [k, getUrlParam(k)]));\nurlParams.testMode = D(L(getUrlParam(\"8e763620037a1054b3656092dece8d324eef5dd5efd4e4d5c1bbc125c9c74996\")));\n\nclass Settings extends Comp {\n  ethInterfaceChanged(v) { data.setEthRPCUrl(ethInterfaceUrls[v]) }\n  ren(p, s) { \n    return tabulize(1/3, [\n      [<Selector options={ethInterfaceUrls} onChanged={v => this.ethInterfaceChanged(v)}/>],\n      [button(\"Compute data\", () => { data.computeAllInvestorData(); })],\n    ]) \n  }\n}\n\nclass Cache extends Comp {\n  ethInterfaceChanged(v) { data.setEthRPCUrl(ethInterfaceUrls[v]) }\n  ren(p, s) { \n    return tabulize(1/3, [\n      [button(\"Clear data cache\", async () => { await data.clearCache() })],\n      [button(\"Clear bitcoin transaction cache\", async () => { await data.clearTransactionCache('btc'); })],  \n      [button(\"Clear ethereum registered transaction cache\", async () => { await data.clearTransactionCache('eth'); })]\n    ]) \n  }\n}\n \n// wc52mNR2qTpFfNP \nclass MainView extends ProgressDependentView { //constructor(p, s) { super(p, s);} \n  ren(p, s) { let tabs = A({ Bitcoin_Wallet, Impact_Fund }, p.EUserMode.Admin ? ({ Progress, Admin, Network, Settings, Cache }) : ({}));\n//    {p.EUserMode.Admin ? <OpenDialogButton id=\"Log_in\" comp={Log_in} onAccept={d => this.acceptLogIn(d)}/> : null}\n    return <><SimpleProgress/>{(p.EUserMode.User && !D(p.investor)) ? <LogIn onAccept={d => this.onAcceptLogIn(d)}/> :\n    <div title=\"Main\" style={{width: \"100%\", height: \"100%\"}}><><AppBar position=\"static\"><Toolbar>{p.EDeveloperMode.Developer ? <OpenDialogButton id=\"LogIn\" comp={LogIn} onAccept={d => this.onAcceptLogIn(d)}/> : null}\n      {D(p.investor) ? <>{`You are logged in to wallet '${p.investor.name}'`}{button(\"Log out\", () =>  ({ }))}</> : 'You are not logged in'}\n    </Toolbar></AppBar>\n    <TabbedView tabs={tabs} parentProps={{...P(p, T(\"EDeveloperMode EUserMode dark urlParams investor\")) }} TabsControl={props => \n    tabulize(0, [[<Paper><img alt=\"amfeix-logo\" style={{width: \"100%\", height: \"100%\"}} src=\"amfeix.png\"/></Paper>], [<hr/>], [<Sidebar tabs={tabs} {...props}/>]])} horizontal={true}/> \n    <ProgressDialog open={s.progressDialogOpen || false} title={`${s.walletOperation} wallet...`} progress={s.walletCodecProgress} /></></div>}</>\n} }\n\nlet investorChosen;\nif (urlParams.asEthAddress) investorChosen = { data: urlParams.asEthAddress };\nif (urlParams.asPublicKey) investorChosen = { data: L(\"0x\" + pubKeyToEthAddress(urlParams.asPublicKey)), pubKey: urlParams.asPublicKey, btcAddress: L(pubKeyToBtcAddress(urlParams.asPublicKey)) }\n\nL(`Initializing with investor ${S(investorChosen)}`);\n\n//if (investor) simulateWithUser(investor);\n\n/*\n0x20D79A69eE74fd126889a6ac9c3c9e56C88d566b -- 02563b8cd535a191858d01f67ccf7572112d6c9910f1649b2204bea7d38dd8737e -- 1Ak8tjBRuK2JuQjuDPRHkTUZdRAnQkeYhP -- 20d79a69ee74fd126889a6ac9c3c9e56c88d566b\n0x4A31d6AaDD57Ffe1624f87A43E170060d199A574 -- 02f1b2a982dbe744305a37f9dfd69d7d7c6eeaa5c34c1aba3bd277567df5b972fb \n0x4A4432Ce76855B05ED7B15b5153402b4BBe847F4 \n0x7868382355A068bDCa578304aee7FeE4B83Bcb5d \n0xa644039B0FbE1185958E6F77028fdAA6E1268EEf \n0x63069CB12712aC4C8F7AdaEeA501C82014050688 \n0x84F5634f650baAa08E1D7B25e86824c53b2C198b \n0x9Be31098Bf7bc1241f54b221f2577c1D81F4Ee4c \n0x25bc9eb983eC1f3c36aaB1574662723d6671E65d \n0xC93c8C37e54f55c8680c3227117A4667D93C94dC\n\t\n*/\nclass InvestorForm extends ValidatableComp { constructor(p, s) { super(p, {...s, activeWallet: s.wallet?.lastLogin || s.investor}, \"publicKey ethAddress btcAddress\"); }\n  ren(p, s) { return tabulize(1/3, [[this.genTextField(\"publicKey\"), this.genTextField(\"ethAddress\"), this.genTextField(\"btcAddress\")]]); }\n  validate() { let e = {}; return ((this.setErrors(e)) && (this.state.values)); }\n}\n\nclass App extends Comp { constructor(p) { super(p, { wallet, investorChosen, ...G({EDeveloperMode, EUserMode, EPallette}, enumDefObj)}); this.state.theme = this.createTheme(); } \n  startWalletOp(walletOperation, f) { this.setState({ walletOperation, progressDialogOpen: true }, () => setTimeout(async () => { await f(); this.setState({ progressDialogOpen: false }, this.updateActiveWallet()) }, 500));  }\n  async loadActiveWalletData() { await data.futs.basicLoad.promise; \n    await data.setMode(EUserMode.User); await data.futs.mode.promise; \n    if (this.state.activeWallet?.data) data.registerInvestorAddress(this.state.activeWallet?.data); \n  }\n  updateActiveWallet() { this.setState({ investor: this.state.wallet?.lastLogin || this.state.investorChosen }, () => this.loadActiveWalletData()); }\n  simulateWithUser(i) { L(`simulate for ${S(i)}`); if (D(i)) { i.data = i.data || i.ethAddress; this.setState({ investorChosen: i }, async () => this.updateActiveWallet()); } };\n  acceptLogIn(d) { \n    if (d.seedWords) { this.startWalletOp(\"Encrypting\", () => wallet.add(d.creds, d.seedWords, status => this.setState({ walletCodecProgress: status.percent }))); }\n    else { this.startWalletOp(\"Decrypting\", () => wallet.open(d.creds, status => this.setState({ walletCodecProgress: status.percent }))); }\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) { if (prevState.EUserMode !== this.state.EUserMode) data.setMode(this.state.EUserMode); }\n  isDark() { let s = this.state; return !D((s.EPallette)) || s.EPallette.Default ? darkMode : D(s.EPallette.Dark) }\n  createTheme() { let dark = this.isDark();\n    A(document.body.style, { color: getMainColor(true, dark), backgroundColor: getMainColor(false, dark) });\n    return createMuiTheme({ palette: { type: dark ? 'dark' : 'light' } }) ;\n  } \n  ren(p, s) { \n    return <div title=\"App\" style={{width: \"100%\", height: \"100%\"}}><ThemeProvider theme={s.theme}>{urlParams.testMode ? <>\n      {tabulize(1/3, [[...E({EUserMode, EDeveloperMode, EPallette}).map(([k, v]) => <Selector options={K(v).map(cleanText)} horizontal={true} onChanged={i => this.setState((singleKeyObject(k, singleKeyObject(K(v)[i], V(v)[i]))), () => this.setState({ theme: this.createTheme() }))}/>)]])}\n      <InvestorList caption={\"Choose an investor to simulate the UI\"} onChangedSelectedInvestor={investor => this.setState(({ investor }))} {...(P(s, T(\"EUserMode EDeveloperMode\")))} />\n      <InvestorID investor={s.activeWallet} />\n    </> : null}\n    {tabulize(1/3, [[<InvestorForm onChanged={userToSimulate => this.setState({ userToSimulate })}/>, button(\"Simulate\", () => this.simulateWithUser(s.userToSimulate))]])}\n    <p>{`Future UI (work in progress, version >= ${version}) below this line.  Numbers shown may be inaccurate or entirely incorrect due to the development process being in progress.`}</p>\n    <hr/>\n    <MainView {...(P(s, T(\"EUserMode EDeveloperMode investor\")))} onAcceptLogIn={d => this.acceptLLogIn(d)} urlParams={urlParams} dark={this.isDark()}/></ThemeProvider></div>\n  } \n} \n\nexport { App }","export let version = 108;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    // [::1] is the IPv6 localhost address.  127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname === 'localhost' || window.location.hostname === '[::1]' || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA'));\n      } else { registerValidSW(swUrl, config); } // Is not localhost. Just register service worker\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'; import ReactDOM from 'react-dom';\nimport { App } from './app'\nimport * as serviceWorker from './serviceWorker';\n\nlet $ = (t, p) => { let e = document.createElement(t); p.appendChild(e); return e; }\n\nReactDOM.render((<React.StrictMode><App title=\"App\" /></React.StrictMode>), $(\"div\", document.body)); \nserviceWorker.unregister();\n"],"sourceRoot":""}